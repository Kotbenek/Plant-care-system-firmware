
Plant_care_system.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000860  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000860  000008f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000114  0080006a  0080006a  000008fe  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000008fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000209  00000000  00000000  0000091e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000365  00000000  00000000  00000b27  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000115  00000000  00000000  00000e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000071c  00000000  00000000  00000fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  000016c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002d4  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000043  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 cd 01 	jmp	0x39a	; 0x39a <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e6       	ldi	r30, 0x60	; 96
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 37       	cpi	r26, 0x7E	; 126
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 2e 04 	jmp	0x85c	; 0x85c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
{
	//TODO
}

int main()
{
  92:	7f 92       	push	r7
  94:	8f 92       	push	r8
  96:	9f 92       	push	r9
  98:	af 92       	push	r10
  9a:	bf 92       	push	r11
  9c:	cf 92       	push	r12
  9e:	df 92       	push	r13
  a0:	ef 92       	push	r14
  a2:	ff 92       	push	r15
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
	//Port directions setup
	DDRB = 0b00000011;
  ac:	83 e0       	ldi	r24, 0x03	; 3
  ae:	87 bb       	out	0x17, r24	; 23
	DDRC = 0b01111111;
  b0:	8f e7       	ldi	r24, 0x7F	; 127
  b2:	84 bb       	out	0x14, r24	; 20
	DDRD = 0b11111111;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	81 bb       	out	0x11, r24	; 17

	//Buttons pull-up
	PORTA = 0b00011111;
  b8:	8f e1       	ldi	r24, 0x1F	; 31
  ba:	8b bb       	out	0x1b, r24	; 27

	//Timer0 prescaler 64
	TCCR0 |= (1<<CS01) | (1<<CS00);
  bc:	83 b7       	in	r24, 0x33	; 51
  be:	83 60       	ori	r24, 0x03	; 3
  c0:	83 bf       	out	0x33, r24	; 51

	//Timer0 overflow interrupt enable
	TIMSK |= (1<<TOIE0); 
  c2:	89 b7       	in	r24, 0x39	; 57
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	89 bf       	out	0x39, r24	; 57

	//Enable interrupts
	sei();
  c8:	78 94       	sei

	//Set Vref to AVcc
	ADMUX |= (1 << REFS0);
  ca:	3e 9a       	sbi	0x07, 6	; 7

	//Set ADC input to 1.22V bandgap
    ADMUX |= (1 << MUX4) | (1 << MUX3) | (1 << MUX2) | (1 << MUX1);
  cc:	87 b1       	in	r24, 0x07	; 7
  ce:	8e 61       	ori	r24, 0x1E	; 30
  d0:	87 b9       	out	0x07, r24	; 7

	//Set ADC prescaler to 32
	ADCSRA |= (1 << ADPS2) | (1 << ADPS0);
  d2:	86 b1       	in	r24, 0x06	; 6
  d4:	85 60       	ori	r24, 0x05	; 5
  d6:	86 b9       	out	0x06, r24	; 6
	
	//ADC free running mode
	ADCSRA |= (1 << ADATE);
  d8:	35 9a       	sbi	0x06, 5	; 6

	//Enable ADC
	ADCSRA |= (1 << ADEN);
  da:	37 9a       	sbi	0x06, 7	; 6

	//Start ADC free running conversion
	ADCSRA |= (1 << ADSC);
  dc:	36 9a       	sbi	0x06, 6	; 6
  de:	f0 90 72 00 	lds	r15, 0x0072
		{
			//Safe menu option change
			cli();
			menu_option++;
			if (menu_option == 8) menu_option = 0;
			display_vcc_delay_counter = 1;
  e2:	cc 24       	eor	r12, r12
  e4:	c3 94       	inc	r12
			sei();

			//125 * 4ms = 500ms delay
			menu_button_delay_counter = 125;
  e6:	ed e7       	ldi	r30, 0x7D	; 125
  e8:	9e 2e       	mov	r9, r30
				if (watering_duration_seconds == 0) watering_duration_seconds++;
			}
			sei();

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
  ea:	72 e3       	ldi	r23, 0x32	; 50
  ec:	e7 2e       	mov	r14, r23
				if (watering_time_days == 0) watering_time_days = 99;
			}
			else if (menu_option == 3)
			{
				watering_duration_seconds--;
				if (watering_duration_seconds == 0) watering_duration_seconds = 255;
  ee:	88 24       	eor	r8, r8
  f0:	8a 94       	dec	r8
				if (time_hour == 255) time_hour = 23;
			}
			else if (menu_option == 2)
			{
				watering_time_days--;
				if (watering_time_days == 0) watering_time_days = 99;
  f2:	63 e6       	ldi	r22, 0x63	; 99
  f4:	76 2e       	mov	r7, r22
			//Safe menu option change
			cli();
			if (menu_option == 1)
			{
				time_hour--;
				if (time_hour == 255) time_hour = 23;
  f6:	57 e1       	ldi	r21, 0x17	; 23
  f8:	d5 2e       	mov	r13, r21
				if (watering_time_hour == 255) watering_time_hour = 23;
			}
			else if (menu_option == 3)
			{
				watering_duration_second_tenths--;
				if (watering_duration_second_tenths == 255) watering_duration_second_tenths = 9;
  fa:	49 e0       	ldi	r20, 0x09	; 9
  fc:	b4 2e       	mov	r11, r20
			//Safe menu option change
			cli();
			if (menu_option == 1)
			{
				time_minute--;
				if (time_minute == 255) time_minute = 59;
  fe:	3b e3       	ldi	r19, 0x3B	; 59
 100:	a3 2e       	mov	r10, r19
	ADCSRA |= (1 << ADSC);

	while(1)
	{
		//Check if ADC conversion complete
	    if (ADCSRA & (1 << ADIF))
 102:	34 9b       	sbis	0x06, 4	; 6
 104:	43 c0       	rjmp	.+134    	; 0x18c <main+0xfa>
		{
			//Safe copy and clear flag
			cli();
 106:	f8 94       	cli
			ADC_result = ((uint16_t)ADCL + ((uint16_t)(ADCH) << 8));
 108:	94 b1       	in	r25, 0x04	; 4
 10a:	85 b1       	in	r24, 0x05	; 5
			ADCSRA |= (1 << ADIF);
 10c:	34 9a       	sbi	0x06, 4	; 6
			sei();
 10e:	78 94       	sei
			
			//Calculate Vcc sample and store it in array
			Vcc_values[Vcc_values_index++] = 1230L * 1024 / ADC_result;
 110:	0f 2d       	mov	r16, r15
 112:	10 e0       	ldi	r17, 0x00	; 0
 114:	00 0f       	add	r16, r16
 116:	11 1f       	adc	r17, r17
 118:	02 58       	subi	r16, 0x82	; 130
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	d8 2f       	mov	r29, r24
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	9e 01       	movw	r18, r28
 122:	29 0f       	add	r18, r25
 124:	31 1d       	adc	r19, r1
 126:	40 e0       	ldi	r20, 0x00	; 0
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	78 e3       	ldi	r23, 0x38	; 56
 12e:	83 e1       	ldi	r24, 0x13	; 19
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__divmodsi4>
 136:	f8 01       	movw	r30, r16
 138:	31 83       	std	Z+1, r19	; 0x01
 13a:	20 83       	st	Z, r18
 13c:	f3 94       	inc	r15
			
			//Circular buffer
			//If the end of array is reached, go back to the beginning
			if (Vcc_values_index == VCC_VALUES_SAMPLES)
 13e:	f0 e8       	ldi	r31, 0x80	; 128
 140:	ff 16       	cp	r15, r31
 142:	09 f4       	brne	.+2      	; 0x146 <main+0xb4>
 144:	ff 24       	eor	r15, r15
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e0       	ldi	r20, 0x00	; 0
 14e:	50 e0       	ldi	r21, 0x00	; 0
			
			//Calculate Vcc by averaging the samples
			Vcc_value_temp = 0;
			for (uint8_t i = 0; i < VCC_VALUES_SAMPLES; i++)
			{
				Vcc_value_temp += Vcc_values[i];
 150:	e6 2f       	mov	r30, r22
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	ee 0f       	add	r30, r30
 156:	ff 1f       	adc	r31, r31
 158:	e2 58       	subi	r30, 0x82	; 130
 15a:	ff 4f       	sbci	r31, 0xFF	; 255
 15c:	80 81       	ld	r24, Z
 15e:	91 81       	ldd	r25, Z+1	; 0x01
 160:	a0 e0       	ldi	r26, 0x00	; 0
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	28 0f       	add	r18, r24
 166:	39 1f       	adc	r19, r25
 168:	4a 1f       	adc	r20, r26
 16a:	5b 1f       	adc	r21, r27
				Vcc_values_index = 0;
			}
			
			//Calculate Vcc by averaging the samples
			Vcc_value_temp = 0;
			for (uint8_t i = 0; i < VCC_VALUES_SAMPLES; i++)
 16c:	6f 5f       	subi	r22, 0xFF	; 255
 16e:	60 38       	cpi	r22, 0x80	; 128
 170:	79 f7       	brne	.-34     	; 0x150 <main+0xbe>
				Vcc_value_temp += Vcc_values[i];
			}
			Vcc_value_temp /= VCC_VALUES_SAMPLES;

			//Safe copy and set flag
			cli();
 172:	f8 94       	cli
			Vcc_value = (uint16_t)Vcc_value_temp;
 174:	87 e0       	ldi	r24, 0x07	; 7
 176:	56 95       	lsr	r21
 178:	47 95       	ror	r20
 17a:	37 95       	ror	r19
 17c:	27 95       	ror	r18
 17e:	8a 95       	dec	r24
 180:	d1 f7       	brne	.-12     	; 0x176 <main+0xe4>
 182:	30 93 6b 00 	sts	0x006B, r19
 186:	20 93 6a 00 	sts	0x006A, r18
			if (Vcc_values_index == 0) Vcc_value_valid = 1;
			sei();		
 18a:	78 94       	sei
	    }

		//Menu button
		if (!(PINA & (1<<PA4)))
 18c:	cc 99       	sbic	0x19, 4	; 25
 18e:	15 c0       	rjmp	.+42     	; 0x1ba <main+0x128>
		{
			//Safe menu option change
			cli();
 190:	f8 94       	cli
			menu_option++;
 192:	80 91 74 00 	lds	r24, 0x0074
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	80 93 74 00 	sts	0x0074, r24
			if (menu_option == 8) menu_option = 0;
 19c:	80 91 74 00 	lds	r24, 0x0074
 1a0:	88 30       	cpi	r24, 0x08	; 8
 1a2:	11 f4       	brne	.+4      	; 0x1a8 <main+0x116>
 1a4:	10 92 74 00 	sts	0x0074, r1
			display_vcc_delay_counter = 1;
 1a8:	c0 92 65 00 	sts	0x0065, r12
			sei();
 1ac:	78 94       	sei

			//125 * 4ms = 500ms delay
			menu_button_delay_counter = 125;
 1ae:	90 92 75 00 	sts	0x0075, r9
			while (menu_button_delay_counter);
 1b2:	80 91 75 00 	lds	r24, 0x0075
 1b6:	88 23       	and	r24, r24
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x120>
		}
		//H+ button
		if (!(PINA & (1<<PA0)))
 1ba:	c8 99       	sbic	0x19, 0	; 25
 1bc:	3a c0       	rjmp	.+116    	; 0x232 <main+0x1a0>
		{
			//Safe menu option change
			cli();
 1be:	f8 94       	cli
			if (menu_option == 1)
 1c0:	80 91 74 00 	lds	r24, 0x0074
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	61 f4       	brne	.+24     	; 0x1e0 <main+0x14e>
			{
				time_hour++;
 1c8:	80 91 76 00 	lds	r24, 0x0076
 1cc:	8f 5f       	subi	r24, 0xFF	; 255
 1ce:	80 93 76 00 	sts	0x0076, r24
				if (time_hour == 24) time_hour = 0;
 1d2:	80 91 76 00 	lds	r24, 0x0076
 1d6:	88 31       	cpi	r24, 0x18	; 24
 1d8:	29 f5       	brne	.+74     	; 0x224 <main+0x192>
 1da:	10 92 76 00 	sts	0x0076, r1
 1de:	22 c0       	rjmp	.+68     	; 0x224 <main+0x192>
			}
			else if (menu_option == 2)
 1e0:	80 91 74 00 	lds	r24, 0x0074
 1e4:	82 30       	cpi	r24, 0x02	; 2
 1e6:	61 f4       	brne	.+24     	; 0x200 <main+0x16e>
			{
				watering_time_days++;
 1e8:	80 91 66 00 	lds	r24, 0x0066
 1ec:	8f 5f       	subi	r24, 0xFF	; 255
 1ee:	80 93 66 00 	sts	0x0066, r24
				if (watering_time_days == 100) watering_time_days = 1;
 1f2:	80 91 66 00 	lds	r24, 0x0066
 1f6:	84 36       	cpi	r24, 0x64	; 100
 1f8:	a9 f4       	brne	.+42     	; 0x224 <main+0x192>
 1fa:	c0 92 66 00 	sts	0x0066, r12
 1fe:	12 c0       	rjmp	.+36     	; 0x224 <main+0x192>
			}
			else if (menu_option == 3)
 200:	80 91 74 00 	lds	r24, 0x0074
 204:	83 30       	cpi	r24, 0x03	; 3
 206:	71 f4       	brne	.+28     	; 0x224 <main+0x192>
			{
				watering_duration_seconds++;
 208:	80 91 68 00 	lds	r24, 0x0068
 20c:	8f 5f       	subi	r24, 0xFF	; 255
 20e:	80 93 68 00 	sts	0x0068, r24
				if (watering_duration_seconds == 0) watering_duration_seconds++;
 212:	80 91 68 00 	lds	r24, 0x0068
 216:	88 23       	and	r24, r24
 218:	29 f4       	brne	.+10     	; 0x224 <main+0x192>
 21a:	80 91 68 00 	lds	r24, 0x0068
 21e:	8f 5f       	subi	r24, 0xFF	; 255
 220:	80 93 68 00 	sts	0x0068, r24
			}
			sei();
 224:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 226:	e0 92 75 00 	sts	0x0075, r14
			while (menu_button_delay_counter);
 22a:	80 91 75 00 	lds	r24, 0x0075
 22e:	88 23       	and	r24, r24
 230:	e1 f7       	brne	.-8      	; 0x22a <main+0x198>
		}
		//H- button
		if (!(PINA & (1<<PA1)))
 232:	c9 99       	sbic	0x19, 1	; 25
 234:	37 c0       	rjmp	.+110    	; 0x2a4 <main+0x212>
		{
			//Safe menu option change
			cli();
 236:	f8 94       	cli
			if (menu_option == 1)
 238:	80 91 74 00 	lds	r24, 0x0074
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	61 f4       	brne	.+24     	; 0x258 <main+0x1c6>
			{
				time_hour--;
 240:	80 91 76 00 	lds	r24, 0x0076
 244:	81 50       	subi	r24, 0x01	; 1
 246:	80 93 76 00 	sts	0x0076, r24
				if (time_hour == 255) time_hour = 23;
 24a:	80 91 76 00 	lds	r24, 0x0076
 24e:	8f 3f       	cpi	r24, 0xFF	; 255
 250:	11 f5       	brne	.+68     	; 0x296 <main+0x204>
 252:	d0 92 76 00 	sts	0x0076, r13
 256:	1f c0       	rjmp	.+62     	; 0x296 <main+0x204>
			}
			else if (menu_option == 2)
 258:	80 91 74 00 	lds	r24, 0x0074
 25c:	82 30       	cpi	r24, 0x02	; 2
 25e:	61 f4       	brne	.+24     	; 0x278 <main+0x1e6>
			{
				watering_time_days--;
 260:	80 91 66 00 	lds	r24, 0x0066
 264:	81 50       	subi	r24, 0x01	; 1
 266:	80 93 66 00 	sts	0x0066, r24
				if (watering_time_days == 0) watering_time_days = 99;
 26a:	80 91 66 00 	lds	r24, 0x0066
 26e:	88 23       	and	r24, r24
 270:	91 f4       	brne	.+36     	; 0x296 <main+0x204>
 272:	70 92 66 00 	sts	0x0066, r7
 276:	0f c0       	rjmp	.+30     	; 0x296 <main+0x204>
			}
			else if (menu_option == 3)
 278:	80 91 74 00 	lds	r24, 0x0074
 27c:	83 30       	cpi	r24, 0x03	; 3
 27e:	59 f4       	brne	.+22     	; 0x296 <main+0x204>
			{
				watering_duration_seconds--;
 280:	80 91 68 00 	lds	r24, 0x0068
 284:	81 50       	subi	r24, 0x01	; 1
 286:	80 93 68 00 	sts	0x0068, r24
				if (watering_duration_seconds == 0) watering_duration_seconds = 255;
 28a:	80 91 68 00 	lds	r24, 0x0068
 28e:	88 23       	and	r24, r24
 290:	11 f4       	brne	.+4      	; 0x296 <main+0x204>
 292:	80 92 68 00 	sts	0x0068, r8
			}
			sei();
 296:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 298:	e0 92 75 00 	sts	0x0075, r14
			while (menu_button_delay_counter);
 29c:	80 91 75 00 	lds	r24, 0x0075
 2a0:	88 23       	and	r24, r24
 2a2:	e1 f7       	brne	.-8      	; 0x29c <main+0x20a>
		}
		//M+ button
		if (!(PINA & (1<<PA2)))
 2a4:	ca 99       	sbic	0x19, 2	; 25
 2a6:	3b c0       	rjmp	.+118    	; 0x31e <main+0x28c>
		{
			//Safe menu option change
			cli();
 2a8:	f8 94       	cli
			if (menu_option == 1)
 2aa:	80 91 74 00 	lds	r24, 0x0074
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	81 f4       	brne	.+32     	; 0x2d2 <main+0x240>
			{
				time_minute++;
 2b2:	80 91 77 00 	lds	r24, 0x0077
 2b6:	8f 5f       	subi	r24, 0xFF	; 255
 2b8:	80 93 77 00 	sts	0x0077, r24
				if (time_minute == 60) time_minute = 0;
 2bc:	80 91 77 00 	lds	r24, 0x0077
 2c0:	8c 33       	cpi	r24, 0x3C	; 60
 2c2:	11 f4       	brne	.+4      	; 0x2c8 <main+0x236>
 2c4:	10 92 77 00 	sts	0x0077, r1
				time_second = 0;
 2c8:	10 92 78 00 	sts	0x0078, r1
				time_4_milliseconds = 0;
 2cc:	10 92 79 00 	sts	0x0079, r1
 2d0:	1f c0       	rjmp	.+62     	; 0x310 <main+0x27e>
			}
			else if (menu_option == 2)
 2d2:	80 91 74 00 	lds	r24, 0x0074
 2d6:	82 30       	cpi	r24, 0x02	; 2
 2d8:	61 f4       	brne	.+24     	; 0x2f2 <main+0x260>
			{
				watering_time_hour++;
 2da:	80 91 67 00 	lds	r24, 0x0067
 2de:	8f 5f       	subi	r24, 0xFF	; 255
 2e0:	80 93 67 00 	sts	0x0067, r24
				if (watering_time_hour == 24) watering_time_hour = 0;
 2e4:	80 91 67 00 	lds	r24, 0x0067
 2e8:	88 31       	cpi	r24, 0x18	; 24
 2ea:	91 f4       	brne	.+36     	; 0x310 <main+0x27e>
 2ec:	10 92 67 00 	sts	0x0067, r1
 2f0:	0f c0       	rjmp	.+30     	; 0x310 <main+0x27e>
			}
			else if (menu_option == 3)
 2f2:	80 91 74 00 	lds	r24, 0x0074
 2f6:	83 30       	cpi	r24, 0x03	; 3
 2f8:	59 f4       	brne	.+22     	; 0x310 <main+0x27e>
			{
				watering_duration_second_tenths++;
 2fa:	80 91 7b 00 	lds	r24, 0x007B
 2fe:	8f 5f       	subi	r24, 0xFF	; 255
 300:	80 93 7b 00 	sts	0x007B, r24
				if (watering_duration_second_tenths == 10) watering_duration_second_tenths = 0;
 304:	80 91 7b 00 	lds	r24, 0x007B
 308:	8a 30       	cpi	r24, 0x0A	; 10
 30a:	11 f4       	brne	.+4      	; 0x310 <main+0x27e>
 30c:	10 92 7b 00 	sts	0x007B, r1
			}
			sei();
 310:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 312:	e0 92 75 00 	sts	0x0075, r14
			while (menu_button_delay_counter);
 316:	80 91 75 00 	lds	r24, 0x0075
 31a:	88 23       	and	r24, r24
 31c:	e1 f7       	brne	.-8      	; 0x316 <main+0x284>
		}
		//M- button
		if (!(PINA & (1<<PA3)))
 31e:	cb 99       	sbic	0x19, 3	; 25
 320:	f0 ce       	rjmp	.-544    	; 0x102 <main+0x70>
		{
			//Safe menu option change
			cli();
 322:	f8 94       	cli
			if (menu_option == 1)
 324:	80 91 74 00 	lds	r24, 0x0074
 328:	81 30       	cpi	r24, 0x01	; 1
 32a:	81 f4       	brne	.+32     	; 0x34c <main+0x2ba>
			{
				time_minute--;
 32c:	80 91 77 00 	lds	r24, 0x0077
 330:	81 50       	subi	r24, 0x01	; 1
 332:	80 93 77 00 	sts	0x0077, r24
				if (time_minute == 255) time_minute = 59;
 336:	80 91 77 00 	lds	r24, 0x0077
 33a:	8f 3f       	cpi	r24, 0xFF	; 255
 33c:	11 f4       	brne	.+4      	; 0x342 <main+0x2b0>
 33e:	a0 92 77 00 	sts	0x0077, r10
				time_second = 0;
 342:	10 92 78 00 	sts	0x0078, r1
				time_4_milliseconds = 0;
 346:	10 92 79 00 	sts	0x0079, r1
 34a:	1f c0       	rjmp	.+62     	; 0x38a <main+0x2f8>
			}
			else if (menu_option == 2)
 34c:	80 91 74 00 	lds	r24, 0x0074
 350:	82 30       	cpi	r24, 0x02	; 2
 352:	61 f4       	brne	.+24     	; 0x36c <main+0x2da>
			{
				watering_time_hour--;
 354:	80 91 67 00 	lds	r24, 0x0067
 358:	81 50       	subi	r24, 0x01	; 1
 35a:	80 93 67 00 	sts	0x0067, r24
				if (watering_time_hour == 255) watering_time_hour = 23;
 35e:	80 91 67 00 	lds	r24, 0x0067
 362:	8f 3f       	cpi	r24, 0xFF	; 255
 364:	91 f4       	brne	.+36     	; 0x38a <main+0x2f8>
 366:	d0 92 67 00 	sts	0x0067, r13
 36a:	0f c0       	rjmp	.+30     	; 0x38a <main+0x2f8>
			}
			else if (menu_option == 3)
 36c:	80 91 74 00 	lds	r24, 0x0074
 370:	83 30       	cpi	r24, 0x03	; 3
 372:	59 f4       	brne	.+22     	; 0x38a <main+0x2f8>
			{
				watering_duration_second_tenths--;
 374:	80 91 7b 00 	lds	r24, 0x007B
 378:	81 50       	subi	r24, 0x01	; 1
 37a:	80 93 7b 00 	sts	0x007B, r24
				if (watering_duration_second_tenths == 255) watering_duration_second_tenths = 9;
 37e:	80 91 7b 00 	lds	r24, 0x007B
 382:	8f 3f       	cpi	r24, 0xFF	; 255
 384:	11 f4       	brne	.+4      	; 0x38a <main+0x2f8>
 386:	b0 92 7b 00 	sts	0x007B, r11
			}
			sei();
 38a:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 38c:	e0 92 75 00 	sts	0x0075, r14
			while (menu_button_delay_counter);
 390:	80 91 75 00 	lds	r24, 0x0075
 394:	88 23       	and	r24, r24
 396:	e1 f7       	brne	.-8      	; 0x390 <main+0x2fe>
 398:	b4 ce       	rjmp	.-664    	; 0x102 <main+0x70>

0000039a <__vector_11>:
	}
}

//250Hz interrupt
ISR(TIMER0_OVF_vect)
{
 39a:	1f 92       	push	r1
 39c:	0f 92       	push	r0
 39e:	0f b6       	in	r0, 0x3f	; 63
 3a0:	0f 92       	push	r0
 3a2:	11 24       	eor	r1, r1
 3a4:	2f 93       	push	r18
 3a6:	3f 93       	push	r19
 3a8:	4f 93       	push	r20
 3aa:	5f 93       	push	r21
 3ac:	6f 93       	push	r22
 3ae:	7f 93       	push	r23
 3b0:	8f 93       	push	r24
 3b2:	9f 93       	push	r25
 3b4:	af 93       	push	r26
 3b6:	bf 93       	push	r27
	//7-segment display - turn off
	DISPLAY_DIGIT_NONE;
 3b8:	85 b3       	in	r24, 0x15	; 21
 3ba:	80 7f       	andi	r24, 0xF0	; 240
 3bc:	85 bb       	out	0x15, r24	; 21

	//Menu display handling
	if (menu_option == 0)
 3be:	80 91 74 00 	lds	r24, 0x0074
 3c2:	88 23       	and	r24, r24
 3c4:	f1 f5       	brne	.+124    	; 0x442 <__vector_11+0xa8>

//Menu display functions

inline void display_vcc()
{
	display_vcc_delay_counter--;	
 3c6:	80 91 65 00 	lds	r24, 0x0065
 3ca:	81 50       	subi	r24, 0x01	; 1
 3cc:	80 93 65 00 	sts	0x0065, r24
	if (display_vcc_delay_counter == 0)
 3d0:	80 91 65 00 	lds	r24, 0x0065
 3d4:	88 23       	and	r24, r24
 3d6:	09 f0       	breq	.+2      	; 0x3da <__vector_11+0x40>
 3d8:	a2 c0       	rjmp	.+324    	; 0x51e <__vector_11+0x184>
	{
		display_1 = 10;
 3da:	8a e0       	ldi	r24, 0x0A	; 10
 3dc:	80 93 61 00 	sts	0x0061, r24
		display_2 = Vcc_value / 1000 % 10;
 3e0:	80 91 6a 00 	lds	r24, 0x006A
 3e4:	90 91 6b 00 	lds	r25, 0x006B
 3e8:	68 ee       	ldi	r22, 0xE8	; 232
 3ea:	73 e0       	ldi	r23, 0x03	; 3
 3ec:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__udivmodhi4>
 3f0:	cb 01       	movw	r24, r22
 3f2:	6a e0       	ldi	r22, 0x0A	; 10
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__udivmodhi4>
 3fa:	80 93 62 00 	sts	0x0062, r24
		display_3 = Vcc_value / 100 % 10;
 3fe:	80 91 6a 00 	lds	r24, 0x006A
 402:	90 91 6b 00 	lds	r25, 0x006B
 406:	64 e6       	ldi	r22, 0x64	; 100
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__udivmodhi4>
 40e:	cb 01       	movw	r24, r22
 410:	6a e0       	ldi	r22, 0x0A	; 10
 412:	70 e0       	ldi	r23, 0x00	; 0
 414:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__udivmodhi4>
 418:	80 93 63 00 	sts	0x0063, r24
		display_4 = Vcc_value  / 10 % 10;
 41c:	80 91 6a 00 	lds	r24, 0x006A
 420:	90 91 6b 00 	lds	r25, 0x006B
 424:	6a e0       	ldi	r22, 0x0A	; 10
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__udivmodhi4>
 42c:	cb 01       	movw	r24, r22
 42e:	6a e0       	ldi	r22, 0x0A	; 10
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__udivmodhi4>
 436:	80 93 64 00 	sts	0x0064, r24

		//125 * 4ms = 500ms delay
		display_vcc_delay_counter = 125;
 43a:	8d e7       	ldi	r24, 0x7D	; 125
 43c:	80 93 65 00 	sts	0x0065, r24
 440:	6e c0       	rjmp	.+220    	; 0x51e <__vector_11+0x184>
	//Menu display handling
	if (menu_option == 0)
	{
		display_vcc();
	}
	else if (menu_option == 1)
 442:	80 91 74 00 	lds	r24, 0x0074
 446:	81 30       	cpi	r24, 0x01	; 1
 448:	09 f4       	brne	.+2      	; 0x44c <__vector_11+0xb2>
 44a:	4d c0       	rjmp	.+154    	; 0x4e6 <__vector_11+0x14c>
	{
		display_time();
	}
	else if (menu_option == 2)
 44c:	80 91 74 00 	lds	r24, 0x0074
 450:	82 30       	cpi	r24, 0x02	; 2
 452:	d1 f4       	brne	.+52     	; 0x488 <__vector_11+0xee>
	display_4 = time_minute % 10;
}

inline void display_watering_time_setting()
{
	display_1 = watering_time_days / 10 % 10;
 454:	80 91 66 00 	lds	r24, 0x0066
 458:	6a e0       	ldi	r22, 0x0A	; 10
 45a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 45e:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 462:	90 93 61 00 	sts	0x0061, r25
	display_2 = watering_time_days % 10;
 466:	80 91 66 00 	lds	r24, 0x0066
 46a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 46e:	90 93 62 00 	sts	0x0062, r25
	display_3 = watering_time_hour / 10 % 10;
 472:	80 91 67 00 	lds	r24, 0x0067
 476:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 47a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 47e:	90 93 63 00 	sts	0x0063, r25
	display_4 = watering_time_hour % 10;
 482:	80 91 67 00 	lds	r24, 0x0067
 486:	1e c0       	rjmp	.+60     	; 0x4c4 <__vector_11+0x12a>
	}
	else if (menu_option == 2)
	{
		display_watering_time_setting();
	}
	else if (menu_option == 3)
 488:	80 91 74 00 	lds	r24, 0x0074
 48c:	83 30       	cpi	r24, 0x03	; 3
 48e:	f9 f4       	brne	.+62     	; 0x4ce <__vector_11+0x134>
	display_4 = watering_time_hour % 10;
}

inline void display_watering_duration_setting()
{
	display_1 = watering_duration_seconds / 100 % 10;
 490:	80 91 68 00 	lds	r24, 0x0068
 494:	64 e6       	ldi	r22, 0x64	; 100
 496:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 49a:	6a e0       	ldi	r22, 0x0A	; 10
 49c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4a0:	90 93 61 00 	sts	0x0061, r25
	display_2 = watering_duration_seconds / 10 % 10;
 4a4:	80 91 68 00 	lds	r24, 0x0068
 4a8:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4ac:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4b0:	90 93 62 00 	sts	0x0062, r25
	display_3 = watering_duration_seconds % 10;
 4b4:	80 91 68 00 	lds	r24, 0x0068
 4b8:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4bc:	90 93 63 00 	sts	0x0063, r25
	display_4 = watering_duration_second_tenths % 10;
 4c0:	80 91 7b 00 	lds	r24, 0x007B
 4c4:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4c8:	90 93 64 00 	sts	0x0064, r25
 4cc:	28 c0       	rjmp	.+80     	; 0x51e <__vector_11+0x184>
	}
	else if (menu_option == 3)
	{
		display_watering_duration_setting();
	}
	else if (menu_option == 4)
 4ce:	80 91 74 00 	lds	r24, 0x0074
 4d2:	84 30       	cpi	r24, 0x04	; 4
 4d4:	21 f1       	breq	.+72     	; 0x51e <__vector_11+0x184>
	{
		display_lamp_time_on();
	}
	else if (menu_option == 5)
 4d6:	80 91 74 00 	lds	r24, 0x0074
 4da:	85 30       	cpi	r24, 0x05	; 5
 4dc:	01 f1       	breq	.+64     	; 0x51e <__vector_11+0x184>
	{
		display_lamp_time_off();
	}
	else if (menu_option == 6)
 4de:	80 91 74 00 	lds	r24, 0x0074
 4e2:	86 30       	cpi	r24, 0x06	; 6
 4e4:	d1 f4       	brne	.+52     	; 0x51a <__vector_11+0x180>
	}
}

inline void display_time()
{
	display_1 = time_hour / 10 % 10;
 4e6:	80 91 76 00 	lds	r24, 0x0076
 4ea:	6a e0       	ldi	r22, 0x0A	; 10
 4ec:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4f0:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 4f4:	90 93 61 00 	sts	0x0061, r25
	display_2 = time_hour % 10;
 4f8:	80 91 76 00 	lds	r24, 0x0076
 4fc:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 500:	90 93 62 00 	sts	0x0062, r25
	display_3 = time_minute / 10 % 10;
 504:	80 91 77 00 	lds	r24, 0x0077
 508:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 50c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__udivmodqi4>
 510:	90 93 63 00 	sts	0x0063, r25
	display_4 = time_minute % 10;
 514:	80 91 77 00 	lds	r24, 0x0077
 518:	d5 cf       	rjmp	.-86     	; 0x4c4 <__vector_11+0x12a>
	}
	else if (menu_option == 6)
	{
		display_time();
	}
	else if (menu_option == 7)
 51a:	80 91 74 00 	lds	r24, 0x0074

//7-segment display functions

inline uint8_t display_digit()
{
	if (display_n == 1) return display_1;
 51e:	80 91 60 00 	lds	r24, 0x0060
 522:	81 30       	cpi	r24, 0x01	; 1
 524:	19 f4       	brne	.+6      	; 0x52c <__vector_11+0x192>
 526:	80 91 61 00 	lds	r24, 0x0061
 52a:	14 c0       	rjmp	.+40     	; 0x554 <__vector_11+0x1ba>
	if (display_n == 2) return display_2;
 52c:	80 91 60 00 	lds	r24, 0x0060
 530:	82 30       	cpi	r24, 0x02	; 2
 532:	19 f4       	brne	.+6      	; 0x53a <__vector_11+0x1a0>
 534:	80 91 62 00 	lds	r24, 0x0062
 538:	0d c0       	rjmp	.+26     	; 0x554 <__vector_11+0x1ba>
	if (display_n == 3) return display_3;
 53a:	80 91 60 00 	lds	r24, 0x0060
 53e:	83 30       	cpi	r24, 0x03	; 3
 540:	19 f4       	brne	.+6      	; 0x548 <__vector_11+0x1ae>
 542:	80 91 63 00 	lds	r24, 0x0063
 546:	06 c0       	rjmp	.+12     	; 0x554 <__vector_11+0x1ba>
	if (display_n == 4) return display_4;
 548:	80 91 60 00 	lds	r24, 0x0060
 54c:	84 30       	cpi	r24, 0x04	; 4
 54e:	51 f5       	brne	.+84     	; 0x5a4 <__vector_11+0x20a>
 550:	80 91 64 00 	lds	r24, 0x0064
	return 10;
}

inline void display(uint8_t digit)
{
	if (digit == 0) DISPLAY_0;
 554:	88 23       	and	r24, r24
 556:	11 f4       	brne	.+4      	; 0x55c <__vector_11+0x1c2>
 558:	84 e1       	ldi	r24, 0x14	; 20
 55a:	25 c0       	rjmp	.+74     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 1) DISPLAY_1;
 55c:	81 30       	cpi	r24, 0x01	; 1
 55e:	11 f4       	brne	.+4      	; 0x564 <__vector_11+0x1ca>
 560:	87 e7       	ldi	r24, 0x77	; 119
 562:	21 c0       	rjmp	.+66     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 2) DISPLAY_2;
 564:	82 30       	cpi	r24, 0x02	; 2
 566:	11 f4       	brne	.+4      	; 0x56c <__vector_11+0x1d2>
 568:	8c e4       	ldi	r24, 0x4C	; 76
 56a:	1d c0       	rjmp	.+58     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 3) DISPLAY_3;
 56c:	83 30       	cpi	r24, 0x03	; 3
 56e:	11 f4       	brne	.+4      	; 0x574 <__vector_11+0x1da>
 570:	85 e4       	ldi	r24, 0x45	; 69
 572:	19 c0       	rjmp	.+50     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 4) DISPLAY_4;
 574:	84 30       	cpi	r24, 0x04	; 4
 576:	11 f4       	brne	.+4      	; 0x57c <__vector_11+0x1e2>
 578:	87 e2       	ldi	r24, 0x27	; 39
 57a:	15 c0       	rjmp	.+42     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 5) DISPLAY_5;
 57c:	85 30       	cpi	r24, 0x05	; 5
 57e:	11 f4       	brne	.+4      	; 0x584 <__vector_11+0x1ea>
 580:	85 e8       	ldi	r24, 0x85	; 133
 582:	11 c0       	rjmp	.+34     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 6) DISPLAY_6;
 584:	86 30       	cpi	r24, 0x06	; 6
 586:	11 f4       	brne	.+4      	; 0x58c <__vector_11+0x1f2>
 588:	84 e8       	ldi	r24, 0x84	; 132
 58a:	0d c0       	rjmp	.+26     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 7) DISPLAY_7;
 58c:	87 30       	cpi	r24, 0x07	; 7
 58e:	11 f4       	brne	.+4      	; 0x594 <__vector_11+0x1fa>
 590:	87 e5       	ldi	r24, 0x57	; 87
 592:	09 c0       	rjmp	.+18     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 8) DISPLAY_8;
 594:	88 30       	cpi	r24, 0x08	; 8
 596:	11 f4       	brne	.+4      	; 0x59c <__vector_11+0x202>
 598:	84 e0       	ldi	r24, 0x04	; 4
 59a:	05 c0       	rjmp	.+10     	; 0x5a6 <__vector_11+0x20c>
	else if (digit == 9) DISPLAY_9;
 59c:	89 30       	cpi	r24, 0x09	; 9
 59e:	11 f4       	brne	.+4      	; 0x5a4 <__vector_11+0x20a>
 5a0:	85 e0       	ldi	r24, 0x05	; 5
 5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <__vector_11+0x20c>
	else DISPLAY_CLEAR;
 5a4:	8f ef       	ldi	r24, 0xFF	; 255
 5a6:	82 bb       	out	0x12, r24	; 18

	//7-segment display - set digit
	display(display_digit());
	
	//Display dot according to the selected menu option
	if (menu_option == 0)
 5a8:	80 91 74 00 	lds	r24, 0x0074
 5ac:	88 23       	and	r24, r24
 5ae:	29 f4       	brne	.+10     	; 0x5ba <__vector_11+0x220>
	{
		if (display_n == 1) DISPLAY_SHOW_DOT;
 5b0:	80 91 60 00 	lds	r24, 0x0060
 5b4:	81 30       	cpi	r24, 0x01	; 1
 5b6:	39 f5       	brne	.+78     	; 0x606 <__vector_11+0x26c>
 5b8:	25 c0       	rjmp	.+74     	; 0x604 <__vector_11+0x26a>
	}
	else if (menu_option == 1)
 5ba:	80 91 74 00 	lds	r24, 0x0074
 5be:	81 30       	cpi	r24, 0x01	; 1
 5c0:	e9 f0       	breq	.+58     	; 0x5fc <__vector_11+0x262>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 2)
 5c2:	80 91 74 00 	lds	r24, 0x0074
 5c6:	82 30       	cpi	r24, 0x02	; 2
 5c8:	f1 f0       	breq	.+60     	; 0x606 <__vector_11+0x26c>
	{
		//No dot
	}
	else if (menu_option == 3)
 5ca:	80 91 74 00 	lds	r24, 0x0074
 5ce:	83 30       	cpi	r24, 0x03	; 3
 5d0:	29 f4       	brne	.+10     	; 0x5dc <__vector_11+0x242>
	{
		if (display_n == 3) DISPLAY_SHOW_DOT;
 5d2:	80 91 60 00 	lds	r24, 0x0060
 5d6:	83 30       	cpi	r24, 0x03	; 3
 5d8:	b1 f4       	brne	.+44     	; 0x606 <__vector_11+0x26c>
 5da:	14 c0       	rjmp	.+40     	; 0x604 <__vector_11+0x26a>
	}
	else if (menu_option == 4)
 5dc:	80 91 74 00 	lds	r24, 0x0074
 5e0:	84 30       	cpi	r24, 0x04	; 4
 5e2:	61 f0       	breq	.+24     	; 0x5fc <__vector_11+0x262>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 5)
 5e4:	80 91 74 00 	lds	r24, 0x0074
 5e8:	85 30       	cpi	r24, 0x05	; 5
 5ea:	41 f0       	breq	.+16     	; 0x5fc <__vector_11+0x262>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 6)
 5ec:	80 91 74 00 	lds	r24, 0x0074
 5f0:	86 30       	cpi	r24, 0x06	; 6
 5f2:	21 f0       	breq	.+8      	; 0x5fc <__vector_11+0x262>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 7)
 5f4:	80 91 74 00 	lds	r24, 0x0074
 5f8:	87 30       	cpi	r24, 0x07	; 7
 5fa:	29 f4       	brne	.+10     	; 0x606 <__vector_11+0x26c>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
 5fc:	80 91 60 00 	lds	r24, 0x0060
 600:	82 30       	cpi	r24, 0x02	; 2
 602:	09 f4       	brne	.+2      	; 0x606 <__vector_11+0x26c>
 604:	92 98       	cbi	0x12, 2	; 18
	}

	//7-segment display - turn on digit
	if      (display_n == 1) DISPLAY_DIGIT1;
 606:	80 91 60 00 	lds	r24, 0x0060
 60a:	81 30       	cpi	r24, 0x01	; 1
 60c:	11 f4       	brne	.+4      	; 0x612 <__vector_11+0x278>
 60e:	ab 9a       	sbi	0x15, 3	; 21
 610:	11 c0       	rjmp	.+34     	; 0x634 <__vector_11+0x29a>
	else if (display_n == 2) DISPLAY_DIGIT2;
 612:	80 91 60 00 	lds	r24, 0x0060
 616:	82 30       	cpi	r24, 0x02	; 2
 618:	11 f4       	brne	.+4      	; 0x61e <__vector_11+0x284>
 61a:	aa 9a       	sbi	0x15, 2	; 21
 61c:	0b c0       	rjmp	.+22     	; 0x634 <__vector_11+0x29a>
	else if (display_n == 3) DISPLAY_DIGIT3;
 61e:	80 91 60 00 	lds	r24, 0x0060
 622:	83 30       	cpi	r24, 0x03	; 3
 624:	11 f4       	brne	.+4      	; 0x62a <__vector_11+0x290>
 626:	a9 9a       	sbi	0x15, 1	; 21
 628:	05 c0       	rjmp	.+10     	; 0x634 <__vector_11+0x29a>
	else if (display_n == 4) DISPLAY_DIGIT4;
 62a:	80 91 60 00 	lds	r24, 0x0060
 62e:	84 30       	cpi	r24, 0x04	; 4
 630:	09 f4       	brne	.+2      	; 0x634 <__vector_11+0x29a>
 632:	a8 9a       	sbi	0x15, 0	; 21

	//7-segment display - move to next digit
	display_n++;
 634:	80 91 60 00 	lds	r24, 0x0060
 638:	8f 5f       	subi	r24, 0xFF	; 255
 63a:	80 93 60 00 	sts	0x0060, r24
	if (display_n == 5) display_n = 1;
 63e:	80 91 60 00 	lds	r24, 0x0060
 642:	85 30       	cpi	r24, 0x05	; 5
 644:	19 f4       	brne	.+6      	; 0x64c <__vector_11+0x2b2>
 646:	81 e0       	ldi	r24, 0x01	; 1
 648:	80 93 60 00 	sts	0x0060, r24
	
	//Decrement delay counter if it's greater than zero
	if (menu_button_delay_counter) menu_button_delay_counter--;
 64c:	80 91 75 00 	lds	r24, 0x0075
 650:	88 23       	and	r24, r24
 652:	29 f0       	breq	.+10     	; 0x65e <__vector_11+0x2c4>
 654:	80 91 75 00 	lds	r24, 0x0075
 658:	81 50       	subi	r24, 0x01	; 1
 65a:	80 93 75 00 	sts	0x0075, r24

	//Menu option LEDs
	if (menu_option == 0)
 65e:	80 91 74 00 	lds	r24, 0x0074
 662:	88 23       	and	r24, r24
 664:	11 f4       	brne	.+4      	; 0x66a <__vector_11+0x2d0>
	{
		LED2_OFF;
 666:	ac 98       	cbi	0x15, 4	; 21
 668:	19 c0       	rjmp	.+50     	; 0x69c <__vector_11+0x302>
		LED1_OFF;
		LED0_OFF;
	}
	else if (menu_option == 1)
 66a:	80 91 74 00 	lds	r24, 0x0074
 66e:	81 30       	cpi	r24, 0x01	; 1
 670:	11 f4       	brne	.+4      	; 0x676 <__vector_11+0x2dc>
	{
		LED2_OFF;
 672:	ac 98       	cbi	0x15, 4	; 21
 674:	1a c0       	rjmp	.+52     	; 0x6aa <__vector_11+0x310>
		LED1_OFF;
		LED0_ON;
	}
	else if (menu_option == 2)
 676:	80 91 74 00 	lds	r24, 0x0074
 67a:	82 30       	cpi	r24, 0x02	; 2
 67c:	21 f4       	brne	.+8      	; 0x686 <__vector_11+0x2ec>
	{
		LED2_OFF;
 67e:	ac 98       	cbi	0x15, 4	; 21
		LED1_ON;
 680:	ad 9a       	sbi	0x15, 5	; 21
		LED0_OFF;
 682:	ae 98       	cbi	0x15, 6	; 21
 684:	1d c0       	rjmp	.+58     	; 0x6c0 <__vector_11+0x326>
	}
	else if (menu_option == 3)
 686:	80 91 74 00 	lds	r24, 0x0074
 68a:	83 30       	cpi	r24, 0x03	; 3
 68c:	11 f4       	brne	.+4      	; 0x692 <__vector_11+0x2f8>
	{
		LED2_OFF;
 68e:	ac 98       	cbi	0x15, 4	; 21
 690:	15 c0       	rjmp	.+42     	; 0x6bc <__vector_11+0x322>
		LED1_ON;
		LED0_ON;
	}
	else if (menu_option == 4)
 692:	80 91 74 00 	lds	r24, 0x0074
 696:	84 30       	cpi	r24, 0x04	; 4
 698:	19 f4       	brne	.+6      	; 0x6a0 <__vector_11+0x306>
	{
		LED2_ON;
 69a:	ac 9a       	sbi	0x15, 4	; 21
		LED1_OFF;
 69c:	ad 98       	cbi	0x15, 5	; 21
 69e:	f1 cf       	rjmp	.-30     	; 0x682 <__vector_11+0x2e8>
		LED0_OFF;
	}
	else if (menu_option == 5)
 6a0:	80 91 74 00 	lds	r24, 0x0074
 6a4:	85 30       	cpi	r24, 0x05	; 5
 6a6:	19 f4       	brne	.+6      	; 0x6ae <__vector_11+0x314>
	{
		LED2_ON;
 6a8:	ac 9a       	sbi	0x15, 4	; 21
		LED1_OFF;
 6aa:	ad 98       	cbi	0x15, 5	; 21
 6ac:	08 c0       	rjmp	.+16     	; 0x6be <__vector_11+0x324>
		LED0_ON;
	}
	else if (menu_option == 6)
 6ae:	80 91 74 00 	lds	r24, 0x0074
 6b2:	86 30       	cpi	r24, 0x06	; 6
 6b4:	11 f4       	brne	.+4      	; 0x6ba <__vector_11+0x320>
	{
		LED2_ON;
 6b6:	ac 9a       	sbi	0x15, 4	; 21
 6b8:	e3 cf       	rjmp	.-58     	; 0x680 <__vector_11+0x2e6>
		LED1_ON;
		LED0_OFF;
	}
	else
	{
		LED2_ON;
 6ba:	ac 9a       	sbi	0x15, 4	; 21
		LED1_ON;
 6bc:	ad 9a       	sbi	0x15, 5	; 21
		LED0_ON;
 6be:	ae 9a       	sbi	0x15, 6	; 21
	}

	//Timekeeping
	time_4_milliseconds++;
 6c0:	80 91 79 00 	lds	r24, 0x0079
 6c4:	8f 5f       	subi	r24, 0xFF	; 255
 6c6:	80 93 79 00 	sts	0x0079, r24
	if (time_4_milliseconds == 250)
 6ca:	80 91 79 00 	lds	r24, 0x0079
 6ce:	8a 3f       	cpi	r24, 0xFA	; 250
 6d0:	09 f0       	breq	.+2      	; 0x6d4 <__vector_11+0x33a>
 6d2:	42 c0       	rjmp	.+132    	; 0x758 <__vector_11+0x3be>
	{
		time_4_milliseconds = 0;
 6d4:	10 92 79 00 	sts	0x0079, r1
		time_second++;
 6d8:	80 91 78 00 	lds	r24, 0x0078
 6dc:	8f 5f       	subi	r24, 0xFF	; 255
 6de:	80 93 78 00 	sts	0x0078, r24
		if (time_second == 60)
 6e2:	80 91 78 00 	lds	r24, 0x0078
 6e6:	8c 33       	cpi	r24, 0x3C	; 60
 6e8:	b9 f5       	brne	.+110    	; 0x758 <__vector_11+0x3be>
		{
			time_second = 0;
 6ea:	10 92 78 00 	sts	0x0078, r1
			time_minute++;
 6ee:	80 91 77 00 	lds	r24, 0x0077
 6f2:	8f 5f       	subi	r24, 0xFF	; 255
 6f4:	80 93 77 00 	sts	0x0077, r24
			if (time_minute == 60)
 6f8:	80 91 77 00 	lds	r24, 0x0077
 6fc:	8c 33       	cpi	r24, 0x3C	; 60
 6fe:	61 f5       	brne	.+88     	; 0x758 <__vector_11+0x3be>
			{
				time_minute = 0;
 700:	10 92 77 00 	sts	0x0077, r1
				time_hour++;
 704:	80 91 76 00 	lds	r24, 0x0076
 708:	8f 5f       	subi	r24, 0xFF	; 255
 70a:	80 93 76 00 	sts	0x0076, r24
				if (time_hour == 24)
 70e:	80 91 76 00 	lds	r24, 0x0076
 712:	88 31       	cpi	r24, 0x18	; 24
 714:	39 f4       	brne	.+14     	; 0x724 <__vector_11+0x38a>
				{
					time_hour = 0;
 716:	10 92 76 00 	sts	0x0076, r1

					watering_days_passed++;
 71a:	80 91 7a 00 	lds	r24, 0x007A
 71e:	8f 5f       	subi	r24, 0xFF	; 255
 720:	80 93 7a 00 	sts	0x007A, r24
				}

				if (time_hour == watering_time_hour)
 724:	90 91 76 00 	lds	r25, 0x0076
 728:	80 91 67 00 	lds	r24, 0x0067
 72c:	98 17       	cp	r25, r24
 72e:	a1 f4       	brne	.+40     	; 0x758 <__vector_11+0x3be>
				{
					//Start watering
					PUMP_ON;
 730:	c1 9a       	sbi	0x18, 1	; 24
					watering_counter = (uint16_t)watering_duration_second_tenths * 25 + (uint16_t)watering_duration_seconds * 250 + 1;
 732:	80 91 7b 00 	lds	r24, 0x007B
 736:	20 91 68 00 	lds	r18, 0x0068
 73a:	49 e1       	ldi	r20, 0x19	; 25
 73c:	84 9f       	mul	r24, r20
 73e:	c0 01       	movw	r24, r0
 740:	11 24       	eor	r1, r1
 742:	4a ef       	ldi	r20, 0xFA	; 250
 744:	24 9f       	mul	r18, r20
 746:	90 01       	movw	r18, r0
 748:	11 24       	eor	r1, r1
 74a:	82 0f       	add	r24, r18
 74c:	93 1f       	adc	r25, r19
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	90 93 7d 00 	sts	0x007D, r25
 754:	80 93 7c 00 	sts	0x007C, r24
			}
		}
	}

	//Watering
	if (watering_counter)
 758:	80 91 7c 00 	lds	r24, 0x007C
 75c:	90 91 7d 00 	lds	r25, 0x007D
 760:	89 2b       	or	r24, r25
 762:	81 f0       	breq	.+32     	; 0x784 <__vector_11+0x3ea>
	{
		watering_counter--;
 764:	80 91 7c 00 	lds	r24, 0x007C
 768:	90 91 7d 00 	lds	r25, 0x007D
 76c:	01 97       	sbiw	r24, 0x01	; 1
 76e:	90 93 7d 00 	sts	0x007D, r25
 772:	80 93 7c 00 	sts	0x007C, r24
		if (watering_counter == 0) PUMP_OFF;
 776:	80 91 7c 00 	lds	r24, 0x007C
 77a:	90 91 7d 00 	lds	r25, 0x007D
 77e:	89 2b       	or	r24, r25
 780:	09 f4       	brne	.+2      	; 0x784 <__vector_11+0x3ea>
 782:	c1 98       	cbi	0x18, 1	; 24
	}
}
 784:	bf 91       	pop	r27
 786:	af 91       	pop	r26
 788:	9f 91       	pop	r25
 78a:	8f 91       	pop	r24
 78c:	7f 91       	pop	r23
 78e:	6f 91       	pop	r22
 790:	5f 91       	pop	r21
 792:	4f 91       	pop	r20
 794:	3f 91       	pop	r19
 796:	2f 91       	pop	r18
 798:	0f 90       	pop	r0
 79a:	0f be       	out	0x3f, r0	; 63
 79c:	0f 90       	pop	r0
 79e:	1f 90       	pop	r1
 7a0:	18 95       	reti

000007a2 <__udivmodqi4>:
 7a2:	99 1b       	sub	r25, r25
 7a4:	79 e0       	ldi	r23, 0x09	; 9
 7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <__udivmodqi4_ep>

000007a8 <__udivmodqi4_loop>:
 7a8:	99 1f       	adc	r25, r25
 7aa:	96 17       	cp	r25, r22
 7ac:	08 f0       	brcs	.+2      	; 0x7b0 <__udivmodqi4_ep>
 7ae:	96 1b       	sub	r25, r22

000007b0 <__udivmodqi4_ep>:
 7b0:	88 1f       	adc	r24, r24
 7b2:	7a 95       	dec	r23
 7b4:	c9 f7       	brne	.-14     	; 0x7a8 <__udivmodqi4_loop>
 7b6:	80 95       	com	r24
 7b8:	08 95       	ret

000007ba <__udivmodhi4>:
 7ba:	aa 1b       	sub	r26, r26
 7bc:	bb 1b       	sub	r27, r27
 7be:	51 e1       	ldi	r21, 0x11	; 17
 7c0:	07 c0       	rjmp	.+14     	; 0x7d0 <__udivmodhi4_ep>

000007c2 <__udivmodhi4_loop>:
 7c2:	aa 1f       	adc	r26, r26
 7c4:	bb 1f       	adc	r27, r27
 7c6:	a6 17       	cp	r26, r22
 7c8:	b7 07       	cpc	r27, r23
 7ca:	10 f0       	brcs	.+4      	; 0x7d0 <__udivmodhi4_ep>
 7cc:	a6 1b       	sub	r26, r22
 7ce:	b7 0b       	sbc	r27, r23

000007d0 <__udivmodhi4_ep>:
 7d0:	88 1f       	adc	r24, r24
 7d2:	99 1f       	adc	r25, r25
 7d4:	5a 95       	dec	r21
 7d6:	a9 f7       	brne	.-22     	; 0x7c2 <__udivmodhi4_loop>
 7d8:	80 95       	com	r24
 7da:	90 95       	com	r25
 7dc:	bc 01       	movw	r22, r24
 7de:	cd 01       	movw	r24, r26
 7e0:	08 95       	ret

000007e2 <__divmodsi4>:
 7e2:	97 fb       	bst	r25, 7
 7e4:	09 2e       	mov	r0, r25
 7e6:	05 26       	eor	r0, r21
 7e8:	0e d0       	rcall	.+28     	; 0x806 <__divmodsi4_neg1>
 7ea:	57 fd       	sbrc	r21, 7
 7ec:	04 d0       	rcall	.+8      	; 0x7f6 <__divmodsi4_neg2>
 7ee:	14 d0       	rcall	.+40     	; 0x818 <__udivmodsi4>
 7f0:	0a d0       	rcall	.+20     	; 0x806 <__divmodsi4_neg1>
 7f2:	00 1c       	adc	r0, r0
 7f4:	38 f4       	brcc	.+14     	; 0x804 <__divmodsi4_exit>

000007f6 <__divmodsi4_neg2>:
 7f6:	50 95       	com	r21
 7f8:	40 95       	com	r20
 7fa:	30 95       	com	r19
 7fc:	21 95       	neg	r18
 7fe:	3f 4f       	sbci	r19, 0xFF	; 255
 800:	4f 4f       	sbci	r20, 0xFF	; 255
 802:	5f 4f       	sbci	r21, 0xFF	; 255

00000804 <__divmodsi4_exit>:
 804:	08 95       	ret

00000806 <__divmodsi4_neg1>:
 806:	f6 f7       	brtc	.-4      	; 0x804 <__divmodsi4_exit>
 808:	90 95       	com	r25
 80a:	80 95       	com	r24
 80c:	70 95       	com	r23
 80e:	61 95       	neg	r22
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	08 95       	ret

00000818 <__udivmodsi4>:
 818:	a1 e2       	ldi	r26, 0x21	; 33
 81a:	1a 2e       	mov	r1, r26
 81c:	aa 1b       	sub	r26, r26
 81e:	bb 1b       	sub	r27, r27
 820:	fd 01       	movw	r30, r26
 822:	0d c0       	rjmp	.+26     	; 0x83e <__udivmodsi4_ep>

00000824 <__udivmodsi4_loop>:
 824:	aa 1f       	adc	r26, r26
 826:	bb 1f       	adc	r27, r27
 828:	ee 1f       	adc	r30, r30
 82a:	ff 1f       	adc	r31, r31
 82c:	a2 17       	cp	r26, r18
 82e:	b3 07       	cpc	r27, r19
 830:	e4 07       	cpc	r30, r20
 832:	f5 07       	cpc	r31, r21
 834:	20 f0       	brcs	.+8      	; 0x83e <__udivmodsi4_ep>
 836:	a2 1b       	sub	r26, r18
 838:	b3 0b       	sbc	r27, r19
 83a:	e4 0b       	sbc	r30, r20
 83c:	f5 0b       	sbc	r31, r21

0000083e <__udivmodsi4_ep>:
 83e:	66 1f       	adc	r22, r22
 840:	77 1f       	adc	r23, r23
 842:	88 1f       	adc	r24, r24
 844:	99 1f       	adc	r25, r25
 846:	1a 94       	dec	r1
 848:	69 f7       	brne	.-38     	; 0x824 <__udivmodsi4_loop>
 84a:	60 95       	com	r22
 84c:	70 95       	com	r23
 84e:	80 95       	com	r24
 850:	90 95       	com	r25
 852:	9b 01       	movw	r18, r22
 854:	ac 01       	movw	r20, r24
 856:	bd 01       	movw	r22, r26
 858:	cf 01       	movw	r24, r30
 85a:	08 95       	ret

0000085c <_exit>:
 85c:	f8 94       	cli

0000085e <__stop_program>:
 85e:	ff cf       	rjmp	.-2      	; 0x85e <__stop_program>
