
Plant_care_system.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000aec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000aec  00000b80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000118  0080006e  0080006e  00000b8e  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000b8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000029f  00000000  00000000  00000bae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000401  00000000  00000000  00000e4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000115  00000000  00000000  0000124e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008e8  00000000  00000000  00001363  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00001c4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000345  00000000  00000000  00001c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000043  00000000  00000000  00001fc1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 38       	cpi	r26, 0x86	; 134
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 74 05 	jmp	0xae8	; 0xae8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
	display_3 = lamp_time_off_minute / 10 % 10;
	display_4 = lamp_time_off_minute % 10;
}

int main()
{
  92:	7f 92       	push	r7
  94:	8f 92       	push	r8
  96:	9f 92       	push	r9
  98:	af 92       	push	r10
  9a:	bf 92       	push	r11
  9c:	cf 92       	push	r12
  9e:	df 92       	push	r13
  a0:	ef 92       	push	r14
  a2:	ff 92       	push	r15
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
	//Port directions setup
	DDRB = 0b00000011;
  ac:	83 e0       	ldi	r24, 0x03	; 3
  ae:	87 bb       	out	0x17, r24	; 23
	DDRC = 0b01111111;
  b0:	8f e7       	ldi	r24, 0x7F	; 127
  b2:	84 bb       	out	0x14, r24	; 20
	DDRD = 0b11111111;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	81 bb       	out	0x11, r24	; 17

	//Buttons pull-up
	PORTA = 0b00011111;
  b8:	8f e1       	ldi	r24, 0x1F	; 31
  ba:	8b bb       	out	0x1b, r24	; 27

	//Timer0 prescaler 64
	TCCR0 |= (1<<CS01) | (1<<CS00);
  bc:	83 b7       	in	r24, 0x33	; 51
  be:	83 60       	ori	r24, 0x03	; 3
  c0:	83 bf       	out	0x33, r24	; 51

	//Timer0 overflow interrupt enable
	TIMSK |= (1<<TOIE0); 
  c2:	89 b7       	in	r24, 0x39	; 57
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	89 bf       	out	0x39, r24	; 57

	//Enable interrupts
	sei();
  c8:	78 94       	sei

	//Set Vref to AVcc
	ADMUX |= (1 << REFS0);
  ca:	3e 9a       	sbi	0x07, 6	; 7

	//Set ADC input to 1.22V bandgap
	ADMUX |= (1 << MUX4) | (1 << MUX3) | (1 << MUX2) | (1 << MUX1);
  cc:	87 b1       	in	r24, 0x07	; 7
  ce:	8e 61       	ori	r24, 0x1E	; 30
  d0:	87 b9       	out	0x07, r24	; 7

	//Set ADC prescaler to 32
	ADCSRA |= (1 << ADPS2) | (1 << ADPS0);
  d2:	86 b1       	in	r24, 0x06	; 6
  d4:	85 60       	ori	r24, 0x05	; 5
  d6:	86 b9       	out	0x06, r24	; 6

	//ADC free running mode
	ADCSRA |= (1 << ADATE);
  d8:	35 9a       	sbi	0x06, 5	; 6

	//Enable ADC
	ADCSRA |= (1 << ADEN);
  da:	37 9a       	sbi	0x06, 7	; 6

	//Start ADC free running conversion
	ADCSRA |= (1 << ADSC);
  dc:	36 9a       	sbi	0x06, 6	; 6
  de:	f0 90 76 00 	lds	r15, 0x0076
			Vcc_value_temp /= VCC_VALUES_SAMPLES;

			//Safe copy and set flag
			cli();
			Vcc_value = (uint16_t)Vcc_value_temp;
			if (Vcc_values_index == 0) Vcc_value_valid = 1;
  e2:	bb 24       	eor	r11, r11
  e4:	b3 94       	inc	r11
			display_vcc_delay_counter = 1;
			menu_idle_delay_counter = 0;
			sei();

			//125 * 4ms = 500ms delay
			menu_button_delay_counter = 125;
  e6:	ed e7       	ldi	r30, 0x7D	; 125
  e8:	9e 2e       	mov	r9, r30
				if (lamp_time_off_hour == 24) lamp_time_off_hour = 0;
			}
			sei();

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
  ea:	72 e3       	ldi	r23, 0x32	; 50
  ec:	d7 2e       	mov	r13, r23
				if (lamp_time_on_hour == 255) lamp_time_on_hour = 23;
			}
			else if (menu_option == 5)
			{
				lamp_time_off_hour--;
				if (lamp_time_off_hour == 255) lamp_time_off_hour = 23;
  ee:	67 e1       	ldi	r22, 0x17	; 23
  f0:	e6 2e       	mov	r14, r22
				if (watering_time_days == 0) watering_time_days = 99;
			}
			else if (menu_option == 3)
			{
				watering_duration_seconds--;
				if (watering_duration_seconds == 0) watering_duration_seconds = 255;
  f2:	88 24       	eor	r8, r8
  f4:	8a 94       	dec	r8
				if (time_hour == 255) time_hour = 23;
			}
			else if (menu_option == 2)
			{
				watering_time_days--;
				if (watering_time_days == 0) watering_time_days = 99;
  f6:	53 e6       	ldi	r21, 0x63	; 99
  f8:	75 2e       	mov	r7, r21
				if (lamp_time_on_minute == 255) lamp_time_on_minute = 59;
			}
			else if (menu_option == 5)
			{
				lamp_time_off_minute--;
				if (lamp_time_off_minute == 255) lamp_time_off_minute = 59;
  fa:	4b e3       	ldi	r20, 0x3B	; 59
  fc:	c4 2e       	mov	r12, r20
				if (watering_time_hour == 255) watering_time_hour = 23;
			}
			else if (menu_option == 3)
			{
				watering_duration_second_tenths--;
				if (watering_duration_second_tenths == 255) watering_duration_second_tenths = 9;
  fe:	39 e0       	ldi	r19, 0x09	; 9
 100:	a3 2e       	mov	r10, r19
	ADCSRA |= (1 << ADSC);

	while(1)
	{
		//Check if ADC conversion complete
	    if (ADCSRA & (1 << ADIF))
 102:	34 9b       	sbis	0x06, 4	; 6
 104:	47 c0       	rjmp	.+142    	; 0x194 <main+0x102>
		{
			//Safe copy and clear flag
			cli();
 106:	f8 94       	cli
			ADC_result = ((uint16_t)ADCL + ((uint16_t)(ADCH) << 8));
 108:	94 b1       	in	r25, 0x04	; 4
 10a:	85 b1       	in	r24, 0x05	; 5
			ADCSRA |= (1 << ADIF);
 10c:	34 9a       	sbi	0x06, 4	; 6
			sei();
 10e:	78 94       	sei
			
			//Calculate Vcc sample and store it in array
			Vcc_values[Vcc_values_index++] = 1230L * 1024 / ADC_result;
 110:	0f 2d       	mov	r16, r15
 112:	10 e0       	ldi	r17, 0x00	; 0
 114:	00 0f       	add	r16, r16
 116:	11 1f       	adc	r17, r17
 118:	0a 57       	subi	r16, 0x7A	; 122
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	d8 2f       	mov	r29, r24
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	9e 01       	movw	r18, r28
 122:	29 0f       	add	r18, r25
 124:	31 1d       	adc	r19, r1
 126:	40 e0       	ldi	r20, 0x00	; 0
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	78 e3       	ldi	r23, 0x38	; 56
 12e:	83 e1       	ldi	r24, 0x13	; 19
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 37 05 	call	0xa6e	; 0xa6e <__divmodsi4>
 136:	f8 01       	movw	r30, r16
 138:	31 83       	std	Z+1, r19	; 0x01
 13a:	20 83       	st	Z, r18
 13c:	f3 94       	inc	r15
			
			//Circular buffer
			//If the end of array is reached, go back to the beginning
			if (Vcc_values_index == VCC_VALUES_SAMPLES)
 13e:	f0 e8       	ldi	r31, 0x80	; 128
 140:	ff 16       	cp	r15, r31
 142:	09 f4       	brne	.+2      	; 0x146 <main+0xb4>
 144:	ff 24       	eor	r15, r15
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e0       	ldi	r20, 0x00	; 0
 14e:	50 e0       	ldi	r21, 0x00	; 0
			
			//Calculate Vcc by averaging the samples
			Vcc_value_temp = 0;
			for (uint8_t i = 0; i < VCC_VALUES_SAMPLES; i++)
			{
				Vcc_value_temp += Vcc_values[i];
 150:	e6 2f       	mov	r30, r22
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	ee 0f       	add	r30, r30
 156:	ff 1f       	adc	r31, r31
 158:	ea 57       	subi	r30, 0x7A	; 122
 15a:	ff 4f       	sbci	r31, 0xFF	; 255
 15c:	80 81       	ld	r24, Z
 15e:	91 81       	ldd	r25, Z+1	; 0x01
 160:	a0 e0       	ldi	r26, 0x00	; 0
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	28 0f       	add	r18, r24
 166:	39 1f       	adc	r19, r25
 168:	4a 1f       	adc	r20, r26
 16a:	5b 1f       	adc	r21, r27
				Vcc_values_index = 0;
			}
			
			//Calculate Vcc by averaging the samples
			Vcc_value_temp = 0;
			for (uint8_t i = 0; i < VCC_VALUES_SAMPLES; i++)
 16c:	6f 5f       	subi	r22, 0xFF	; 255
 16e:	60 38       	cpi	r22, 0x80	; 128
 170:	79 f7       	brne	.-34     	; 0x150 <main+0xbe>
				Vcc_value_temp += Vcc_values[i];
			}
			Vcc_value_temp /= VCC_VALUES_SAMPLES;

			//Safe copy and set flag
			cli();
 172:	f8 94       	cli
			Vcc_value = (uint16_t)Vcc_value_temp;
 174:	87 e0       	ldi	r24, 0x07	; 7
 176:	56 95       	lsr	r21
 178:	47 95       	ror	r20
 17a:	37 95       	ror	r19
 17c:	27 95       	ror	r18
 17e:	8a 95       	dec	r24
 180:	d1 f7       	brne	.-12     	; 0x176 <main+0xe4>
 182:	30 93 6f 00 	sts	0x006F, r19
 186:	20 93 6e 00 	sts	0x006E, r18
			if (Vcc_values_index == 0) Vcc_value_valid = 1;
 18a:	ff 20       	and	r15, r15
 18c:	11 f4       	brne	.+4      	; 0x192 <main+0x100>
 18e:	b0 92 77 00 	sts	0x0077, r11
			sei();
 192:	78 94       	sei
	    }

		//Menu button
		if (!(PINA & (1<<PA4)))
 194:	cc 99       	sbic	0x19, 4	; 25
 196:	19 c0       	rjmp	.+50     	; 0x1ca <main+0x138>
		{
			//Safe menu option change
			cli();
 198:	f8 94       	cli
			menu_option++;
 19a:	80 91 78 00 	lds	r24, 0x0078
 19e:	8f 5f       	subi	r24, 0xFF	; 255
 1a0:	80 93 78 00 	sts	0x0078, r24
			if (menu_option == 8) menu_option = 0;
 1a4:	80 91 78 00 	lds	r24, 0x0078
 1a8:	88 30       	cpi	r24, 0x08	; 8
 1aa:	11 f4       	brne	.+4      	; 0x1b0 <main+0x11e>
 1ac:	10 92 78 00 	sts	0x0078, r1
			display_vcc_delay_counter = 1;
 1b0:	b0 92 65 00 	sts	0x0065, r11
			menu_idle_delay_counter = 0;
 1b4:	10 92 7b 00 	sts	0x007B, r1
 1b8:	10 92 7a 00 	sts	0x007A, r1
			sei();
 1bc:	78 94       	sei

			//125 * 4ms = 500ms delay
			menu_button_delay_counter = 125;
 1be:	90 92 79 00 	sts	0x0079, r9
			while (menu_button_delay_counter);
 1c2:	80 91 79 00 	lds	r24, 0x0079
 1c6:	88 23       	and	r24, r24
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0x130>
		}
		//H+ button
		if (!(PINA & (1<<PA0)))
 1ca:	c8 99       	sbic	0x19, 0	; 25
 1cc:	5f c0       	rjmp	.+190    	; 0x28c <main+0x1fa>
		{
			//Safe menu option change
			cli();
 1ce:	f8 94       	cli
			menu_idle_delay_counter = 0;
 1d0:	10 92 7b 00 	sts	0x007B, r1
 1d4:	10 92 7a 00 	sts	0x007A, r1
			if (menu_option == 1)
 1d8:	80 91 78 00 	lds	r24, 0x0078
 1dc:	81 30       	cpi	r24, 0x01	; 1
 1de:	69 f4       	brne	.+26     	; 0x1fa <main+0x168>
			{
				time_hour++;
 1e0:	80 91 7c 00 	lds	r24, 0x007C
 1e4:	8f 5f       	subi	r24, 0xFF	; 255
 1e6:	80 93 7c 00 	sts	0x007C, r24
				if (time_hour == 24) time_hour = 0;
 1ea:	80 91 7c 00 	lds	r24, 0x007C
 1ee:	88 31       	cpi	r24, 0x18	; 24
 1f0:	09 f0       	breq	.+2      	; 0x1f4 <main+0x162>
 1f2:	45 c0       	rjmp	.+138    	; 0x27e <main+0x1ec>
 1f4:	10 92 7c 00 	sts	0x007C, r1
 1f8:	42 c0       	rjmp	.+132    	; 0x27e <main+0x1ec>
			}
			else if (menu_option == 2)
 1fa:	80 91 78 00 	lds	r24, 0x0078
 1fe:	82 30       	cpi	r24, 0x02	; 2
 200:	61 f4       	brne	.+24     	; 0x21a <main+0x188>
			{
				watering_time_days++;
 202:	80 91 68 00 	lds	r24, 0x0068
 206:	8f 5f       	subi	r24, 0xFF	; 255
 208:	80 93 68 00 	sts	0x0068, r24
				if (watering_time_days == 100) watering_time_days = 1;
 20c:	80 91 68 00 	lds	r24, 0x0068
 210:	84 36       	cpi	r24, 0x64	; 100
 212:	a9 f5       	brne	.+106    	; 0x27e <main+0x1ec>
 214:	b0 92 68 00 	sts	0x0068, r11
 218:	32 c0       	rjmp	.+100    	; 0x27e <main+0x1ec>
			}
			else if (menu_option == 3)
 21a:	80 91 78 00 	lds	r24, 0x0078
 21e:	83 30       	cpi	r24, 0x03	; 3
 220:	79 f4       	brne	.+30     	; 0x240 <main+0x1ae>
			{
				watering_duration_seconds++;
 222:	80 91 6a 00 	lds	r24, 0x006A
 226:	8f 5f       	subi	r24, 0xFF	; 255
 228:	80 93 6a 00 	sts	0x006A, r24
				if (watering_duration_seconds == 0) watering_duration_seconds++;
 22c:	80 91 6a 00 	lds	r24, 0x006A
 230:	88 23       	and	r24, r24
 232:	29 f5       	brne	.+74     	; 0x27e <main+0x1ec>
 234:	80 91 6a 00 	lds	r24, 0x006A
 238:	8f 5f       	subi	r24, 0xFF	; 255
 23a:	80 93 6a 00 	sts	0x006A, r24
 23e:	1f c0       	rjmp	.+62     	; 0x27e <main+0x1ec>
			}
			else if (menu_option == 4)
 240:	80 91 78 00 	lds	r24, 0x0078
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	61 f4       	brne	.+24     	; 0x260 <main+0x1ce>
			{
				lamp_time_on_hour++;
 248:	80 91 6b 00 	lds	r24, 0x006B
 24c:	8f 5f       	subi	r24, 0xFF	; 255
 24e:	80 93 6b 00 	sts	0x006B, r24
				if (lamp_time_on_hour == 24) lamp_time_on_hour = 0;
 252:	80 91 6b 00 	lds	r24, 0x006B
 256:	88 31       	cpi	r24, 0x18	; 24
 258:	91 f4       	brne	.+36     	; 0x27e <main+0x1ec>
 25a:	10 92 6b 00 	sts	0x006B, r1
 25e:	0f c0       	rjmp	.+30     	; 0x27e <main+0x1ec>
			}
			else if (menu_option == 5)
 260:	80 91 78 00 	lds	r24, 0x0078
 264:	85 30       	cpi	r24, 0x05	; 5
 266:	59 f4       	brne	.+22     	; 0x27e <main+0x1ec>
			{
				lamp_time_off_hour++;
 268:	80 91 6c 00 	lds	r24, 0x006C
 26c:	8f 5f       	subi	r24, 0xFF	; 255
 26e:	80 93 6c 00 	sts	0x006C, r24
				if (lamp_time_off_hour == 24) lamp_time_off_hour = 0;
 272:	80 91 6c 00 	lds	r24, 0x006C
 276:	88 31       	cpi	r24, 0x18	; 24
 278:	11 f4       	brne	.+4      	; 0x27e <main+0x1ec>
 27a:	10 92 6c 00 	sts	0x006C, r1
			}
			sei();
 27e:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 280:	d0 92 79 00 	sts	0x0079, r13
			while (menu_button_delay_counter);
 284:	80 91 79 00 	lds	r24, 0x0079
 288:	88 23       	and	r24, r24
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x1f2>
		}
		//H- button
		if (!(PINA & (1<<PA1)))
 28c:	c9 99       	sbic	0x19, 1	; 25
 28e:	5c c0       	rjmp	.+184    	; 0x348 <main+0x2b6>
		{
			//Safe menu option change
			cli();
 290:	f8 94       	cli
			menu_idle_delay_counter = 0;
 292:	10 92 7b 00 	sts	0x007B, r1
 296:	10 92 7a 00 	sts	0x007A, r1
			if (menu_option == 1)
 29a:	80 91 78 00 	lds	r24, 0x0078
 29e:	81 30       	cpi	r24, 0x01	; 1
 2a0:	69 f4       	brne	.+26     	; 0x2bc <main+0x22a>
			{
				time_hour--;
 2a2:	80 91 7c 00 	lds	r24, 0x007C
 2a6:	81 50       	subi	r24, 0x01	; 1
 2a8:	80 93 7c 00 	sts	0x007C, r24
				if (time_hour == 255) time_hour = 23;
 2ac:	80 91 7c 00 	lds	r24, 0x007C
 2b0:	8f 3f       	cpi	r24, 0xFF	; 255
 2b2:	09 f0       	breq	.+2      	; 0x2b6 <main+0x224>
 2b4:	42 c0       	rjmp	.+132    	; 0x33a <main+0x2a8>
 2b6:	e0 92 7c 00 	sts	0x007C, r14
 2ba:	3f c0       	rjmp	.+126    	; 0x33a <main+0x2a8>
			}
			else if (menu_option == 2)
 2bc:	80 91 78 00 	lds	r24, 0x0078
 2c0:	82 30       	cpi	r24, 0x02	; 2
 2c2:	61 f4       	brne	.+24     	; 0x2dc <main+0x24a>
			{
				watering_time_days--;
 2c4:	80 91 68 00 	lds	r24, 0x0068
 2c8:	81 50       	subi	r24, 0x01	; 1
 2ca:	80 93 68 00 	sts	0x0068, r24
				if (watering_time_days == 0) watering_time_days = 99;
 2ce:	80 91 68 00 	lds	r24, 0x0068
 2d2:	88 23       	and	r24, r24
 2d4:	91 f5       	brne	.+100    	; 0x33a <main+0x2a8>
 2d6:	70 92 68 00 	sts	0x0068, r7
 2da:	2f c0       	rjmp	.+94     	; 0x33a <main+0x2a8>
			}
			else if (menu_option == 3)
 2dc:	80 91 78 00 	lds	r24, 0x0078
 2e0:	83 30       	cpi	r24, 0x03	; 3
 2e2:	61 f4       	brne	.+24     	; 0x2fc <main+0x26a>
			{
				watering_duration_seconds--;
 2e4:	80 91 6a 00 	lds	r24, 0x006A
 2e8:	81 50       	subi	r24, 0x01	; 1
 2ea:	80 93 6a 00 	sts	0x006A, r24
				if (watering_duration_seconds == 0) watering_duration_seconds = 255;
 2ee:	80 91 6a 00 	lds	r24, 0x006A
 2f2:	88 23       	and	r24, r24
 2f4:	11 f5       	brne	.+68     	; 0x33a <main+0x2a8>
 2f6:	80 92 6a 00 	sts	0x006A, r8
 2fa:	1f c0       	rjmp	.+62     	; 0x33a <main+0x2a8>
			}
			else if (menu_option == 4)
 2fc:	80 91 78 00 	lds	r24, 0x0078
 300:	84 30       	cpi	r24, 0x04	; 4
 302:	61 f4       	brne	.+24     	; 0x31c <main+0x28a>
			{
				lamp_time_on_hour--;
 304:	80 91 6b 00 	lds	r24, 0x006B
 308:	81 50       	subi	r24, 0x01	; 1
 30a:	80 93 6b 00 	sts	0x006B, r24
				if (lamp_time_on_hour == 255) lamp_time_on_hour = 23;
 30e:	80 91 6b 00 	lds	r24, 0x006B
 312:	8f 3f       	cpi	r24, 0xFF	; 255
 314:	91 f4       	brne	.+36     	; 0x33a <main+0x2a8>
 316:	e0 92 6b 00 	sts	0x006B, r14
 31a:	0f c0       	rjmp	.+30     	; 0x33a <main+0x2a8>
			}
			else if (menu_option == 5)
 31c:	80 91 78 00 	lds	r24, 0x0078
 320:	85 30       	cpi	r24, 0x05	; 5
 322:	59 f4       	brne	.+22     	; 0x33a <main+0x2a8>
			{
				lamp_time_off_hour--;
 324:	80 91 6c 00 	lds	r24, 0x006C
 328:	81 50       	subi	r24, 0x01	; 1
 32a:	80 93 6c 00 	sts	0x006C, r24
				if (lamp_time_off_hour == 255) lamp_time_off_hour = 23;
 32e:	80 91 6c 00 	lds	r24, 0x006C
 332:	8f 3f       	cpi	r24, 0xFF	; 255
 334:	11 f4       	brne	.+4      	; 0x33a <main+0x2a8>
 336:	e0 92 6c 00 	sts	0x006C, r14
			}
			sei();
 33a:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 33c:	d0 92 79 00 	sts	0x0079, r13
			while (menu_button_delay_counter);
 340:	80 91 79 00 	lds	r24, 0x0079
 344:	88 23       	and	r24, r24
 346:	e1 f7       	brne	.-8      	; 0x340 <main+0x2ae>
		}
		//M+ button
		if (!(PINA & (1<<PA2)))
 348:	ca 99       	sbic	0x19, 2	; 25
 34a:	5f c0       	rjmp	.+190    	; 0x40a <main+0x378>
		{
			//Safe menu option change
			cli();
 34c:	f8 94       	cli
			menu_idle_delay_counter = 0;
 34e:	10 92 7b 00 	sts	0x007B, r1
 352:	10 92 7a 00 	sts	0x007A, r1
			if (menu_option == 1)
 356:	80 91 78 00 	lds	r24, 0x0078
 35a:	81 30       	cpi	r24, 0x01	; 1
 35c:	81 f4       	brne	.+32     	; 0x37e <main+0x2ec>
			{
				time_minute++;
 35e:	80 91 7d 00 	lds	r24, 0x007D
 362:	8f 5f       	subi	r24, 0xFF	; 255
 364:	80 93 7d 00 	sts	0x007D, r24
				if (time_minute == 60) time_minute = 0;
 368:	80 91 7d 00 	lds	r24, 0x007D
 36c:	8c 33       	cpi	r24, 0x3C	; 60
 36e:	11 f4       	brne	.+4      	; 0x374 <main+0x2e2>
 370:	10 92 7d 00 	sts	0x007D, r1
				time_second = 0;
 374:	10 92 7e 00 	sts	0x007E, r1
				time_4_milliseconds = 0;
 378:	10 92 7f 00 	sts	0x007F, r1
 37c:	3f c0       	rjmp	.+126    	; 0x3fc <main+0x36a>
			}
			else if (menu_option == 2)
 37e:	80 91 78 00 	lds	r24, 0x0078
 382:	82 30       	cpi	r24, 0x02	; 2
 384:	61 f4       	brne	.+24     	; 0x39e <main+0x30c>
			{
				watering_time_hour++;
 386:	80 91 69 00 	lds	r24, 0x0069
 38a:	8f 5f       	subi	r24, 0xFF	; 255
 38c:	80 93 69 00 	sts	0x0069, r24
				if (watering_time_hour == 24) watering_time_hour = 0;
 390:	80 91 69 00 	lds	r24, 0x0069
 394:	88 31       	cpi	r24, 0x18	; 24
 396:	91 f5       	brne	.+100    	; 0x3fc <main+0x36a>
 398:	10 92 69 00 	sts	0x0069, r1
 39c:	2f c0       	rjmp	.+94     	; 0x3fc <main+0x36a>
			}
			else if (menu_option == 3)
 39e:	80 91 78 00 	lds	r24, 0x0078
 3a2:	83 30       	cpi	r24, 0x03	; 3
 3a4:	61 f4       	brne	.+24     	; 0x3be <main+0x32c>
			{
				watering_duration_second_tenths++;
 3a6:	80 91 81 00 	lds	r24, 0x0081
 3aa:	8f 5f       	subi	r24, 0xFF	; 255
 3ac:	80 93 81 00 	sts	0x0081, r24
				if (watering_duration_second_tenths == 10) watering_duration_second_tenths = 0;
 3b0:	80 91 81 00 	lds	r24, 0x0081
 3b4:	8a 30       	cpi	r24, 0x0A	; 10
 3b6:	11 f5       	brne	.+68     	; 0x3fc <main+0x36a>
 3b8:	10 92 81 00 	sts	0x0081, r1
 3bc:	1f c0       	rjmp	.+62     	; 0x3fc <main+0x36a>
			}
			else if (menu_option == 4)
 3be:	80 91 78 00 	lds	r24, 0x0078
 3c2:	84 30       	cpi	r24, 0x04	; 4
 3c4:	61 f4       	brne	.+24     	; 0x3de <main+0x34c>
			{
				lamp_time_on_minute++;
 3c6:	80 91 84 00 	lds	r24, 0x0084
 3ca:	8f 5f       	subi	r24, 0xFF	; 255
 3cc:	80 93 84 00 	sts	0x0084, r24
				if (lamp_time_on_minute == 60) lamp_time_on_minute = 0;
 3d0:	80 91 84 00 	lds	r24, 0x0084
 3d4:	8c 33       	cpi	r24, 0x3C	; 60
 3d6:	91 f4       	brne	.+36     	; 0x3fc <main+0x36a>
 3d8:	10 92 84 00 	sts	0x0084, r1
 3dc:	0f c0       	rjmp	.+30     	; 0x3fc <main+0x36a>
			}
			else if (menu_option == 5)
 3de:	80 91 78 00 	lds	r24, 0x0078
 3e2:	85 30       	cpi	r24, 0x05	; 5
 3e4:	59 f4       	brne	.+22     	; 0x3fc <main+0x36a>
			{
				lamp_time_off_minute++;
 3e6:	80 91 85 00 	lds	r24, 0x0085
 3ea:	8f 5f       	subi	r24, 0xFF	; 255
 3ec:	80 93 85 00 	sts	0x0085, r24
				if (lamp_time_off_minute == 60) lamp_time_off_minute = 0;
 3f0:	80 91 85 00 	lds	r24, 0x0085
 3f4:	8c 33       	cpi	r24, 0x3C	; 60
 3f6:	11 f4       	brne	.+4      	; 0x3fc <main+0x36a>
 3f8:	10 92 85 00 	sts	0x0085, r1
			}
			sei();
 3fc:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 3fe:	d0 92 79 00 	sts	0x0079, r13
			while (menu_button_delay_counter);
 402:	80 91 79 00 	lds	r24, 0x0079
 406:	88 23       	and	r24, r24
 408:	e1 f7       	brne	.-8      	; 0x402 <main+0x370>
		}
		//M- button
		if (!(PINA & (1<<PA3)))
 40a:	cb 99       	sbic	0x19, 3	; 25
 40c:	7a ce       	rjmp	.-780    	; 0x102 <main+0x70>
		{
			//Safe menu option change
			cli();
 40e:	f8 94       	cli
			menu_idle_delay_counter = 0;
 410:	10 92 7b 00 	sts	0x007B, r1
 414:	10 92 7a 00 	sts	0x007A, r1
			if (menu_option == 1)
 418:	80 91 78 00 	lds	r24, 0x0078
 41c:	81 30       	cpi	r24, 0x01	; 1
 41e:	81 f4       	brne	.+32     	; 0x440 <main+0x3ae>
			{
				time_minute--;
 420:	80 91 7d 00 	lds	r24, 0x007D
 424:	81 50       	subi	r24, 0x01	; 1
 426:	80 93 7d 00 	sts	0x007D, r24
				if (time_minute == 255) time_minute = 59;
 42a:	80 91 7d 00 	lds	r24, 0x007D
 42e:	8f 3f       	cpi	r24, 0xFF	; 255
 430:	11 f4       	brne	.+4      	; 0x436 <main+0x3a4>
 432:	c0 92 7d 00 	sts	0x007D, r12
				time_second = 0;
 436:	10 92 7e 00 	sts	0x007E, r1
				time_4_milliseconds = 0;
 43a:	10 92 7f 00 	sts	0x007F, r1
 43e:	3f c0       	rjmp	.+126    	; 0x4be <main+0x42c>
			}
			else if (menu_option == 2)
 440:	80 91 78 00 	lds	r24, 0x0078
 444:	82 30       	cpi	r24, 0x02	; 2
 446:	61 f4       	brne	.+24     	; 0x460 <main+0x3ce>
			{
				watering_time_hour--;
 448:	80 91 69 00 	lds	r24, 0x0069
 44c:	81 50       	subi	r24, 0x01	; 1
 44e:	80 93 69 00 	sts	0x0069, r24
				if (watering_time_hour == 255) watering_time_hour = 23;
 452:	80 91 69 00 	lds	r24, 0x0069
 456:	8f 3f       	cpi	r24, 0xFF	; 255
 458:	91 f5       	brne	.+100    	; 0x4be <main+0x42c>
 45a:	e0 92 69 00 	sts	0x0069, r14
 45e:	2f c0       	rjmp	.+94     	; 0x4be <main+0x42c>
			}
			else if (menu_option == 3)
 460:	80 91 78 00 	lds	r24, 0x0078
 464:	83 30       	cpi	r24, 0x03	; 3
 466:	61 f4       	brne	.+24     	; 0x480 <main+0x3ee>
			{
				watering_duration_second_tenths--;
 468:	80 91 81 00 	lds	r24, 0x0081
 46c:	81 50       	subi	r24, 0x01	; 1
 46e:	80 93 81 00 	sts	0x0081, r24
				if (watering_duration_second_tenths == 255) watering_duration_second_tenths = 9;
 472:	80 91 81 00 	lds	r24, 0x0081
 476:	8f 3f       	cpi	r24, 0xFF	; 255
 478:	11 f5       	brne	.+68     	; 0x4be <main+0x42c>
 47a:	a0 92 81 00 	sts	0x0081, r10
 47e:	1f c0       	rjmp	.+62     	; 0x4be <main+0x42c>
			}
			else if (menu_option == 4)
 480:	80 91 78 00 	lds	r24, 0x0078
 484:	84 30       	cpi	r24, 0x04	; 4
 486:	61 f4       	brne	.+24     	; 0x4a0 <main+0x40e>
			{
				lamp_time_on_minute--;
 488:	80 91 84 00 	lds	r24, 0x0084
 48c:	81 50       	subi	r24, 0x01	; 1
 48e:	80 93 84 00 	sts	0x0084, r24
				if (lamp_time_on_minute == 255) lamp_time_on_minute = 59;
 492:	80 91 84 00 	lds	r24, 0x0084
 496:	8f 3f       	cpi	r24, 0xFF	; 255
 498:	91 f4       	brne	.+36     	; 0x4be <main+0x42c>
 49a:	c0 92 84 00 	sts	0x0084, r12
 49e:	0f c0       	rjmp	.+30     	; 0x4be <main+0x42c>
			}
			else if (menu_option == 5)
 4a0:	80 91 78 00 	lds	r24, 0x0078
 4a4:	85 30       	cpi	r24, 0x05	; 5
 4a6:	59 f4       	brne	.+22     	; 0x4be <main+0x42c>
			{
				lamp_time_off_minute--;
 4a8:	80 91 85 00 	lds	r24, 0x0085
 4ac:	81 50       	subi	r24, 0x01	; 1
 4ae:	80 93 85 00 	sts	0x0085, r24
				if (lamp_time_off_minute == 255) lamp_time_off_minute = 59;
 4b2:	80 91 85 00 	lds	r24, 0x0085
 4b6:	8f 3f       	cpi	r24, 0xFF	; 255
 4b8:	11 f4       	brne	.+4      	; 0x4be <main+0x42c>
 4ba:	c0 92 85 00 	sts	0x0085, r12
			}
			sei();
 4be:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 4c0:	d0 92 79 00 	sts	0x0079, r13
			while (menu_button_delay_counter);
 4c4:	80 91 79 00 	lds	r24, 0x0079
 4c8:	88 23       	and	r24, r24
 4ca:	e1 f7       	brne	.-8      	; 0x4c4 <main+0x432>
 4cc:	1a ce       	rjmp	.-972    	; 0x102 <main+0x70>

000004ce <__vector_11>:
	}
}

//250Hz interrupt
ISR(TIMER0_OVF_vect)
{
 4ce:	1f 92       	push	r1
 4d0:	0f 92       	push	r0
 4d2:	0f b6       	in	r0, 0x3f	; 63
 4d4:	0f 92       	push	r0
 4d6:	11 24       	eor	r1, r1
 4d8:	2f 93       	push	r18
 4da:	3f 93       	push	r19
 4dc:	4f 93       	push	r20
 4de:	5f 93       	push	r21
 4e0:	6f 93       	push	r22
 4e2:	7f 93       	push	r23
 4e4:	8f 93       	push	r24
 4e6:	9f 93       	push	r25
 4e8:	af 93       	push	r26
 4ea:	bf 93       	push	r27
	//7-segment display - turn off
	DISPLAY_DIGIT_NONE;
 4ec:	85 b3       	in	r24, 0x15	; 21
 4ee:	80 7f       	andi	r24, 0xF0	; 240
 4f0:	85 bb       	out	0x15, r24	; 21

	//Menu display handling
	if (menu_option == 0)
 4f2:	80 91 78 00 	lds	r24, 0x0078
 4f6:	88 23       	and	r24, r24
 4f8:	51 f4       	brne	.+20     	; 0x50e <__vector_11+0x40>

//Menu display functions

inline void display_clear()
{
	display_1 = 10;
 4fa:	8a e0       	ldi	r24, 0x0A	; 10
 4fc:	80 93 61 00 	sts	0x0061, r24
	display_2 = 10;
 500:	80 93 62 00 	sts	0x0062, r24
	display_3 = 10;
 504:	80 93 63 00 	sts	0x0063, r24
	display_4 = 10;
 508:	80 93 64 00 	sts	0x0064, r24
 50c:	e0 c0       	rjmp	.+448    	; 0x6ce <__vector_11+0x200>
	//Menu display handling
	if (menu_option == 0)
	{
		display_clear();
	}
	else if (menu_option == 1)
 50e:	80 91 78 00 	lds	r24, 0x0078
 512:	81 30       	cpi	r24, 0x01	; 1
 514:	09 f4       	brne	.+2      	; 0x518 <__vector_11+0x4a>
 516:	81 c0       	rjmp	.+258    	; 0x61a <__vector_11+0x14c>
	{
		display_time();
	}
	else if (menu_option == 2)
 518:	80 91 78 00 	lds	r24, 0x0078
 51c:	82 30       	cpi	r24, 0x02	; 2
 51e:	d1 f4       	brne	.+52     	; 0x554 <__vector_11+0x86>
	display_4 = time_minute % 10;
}

inline void display_watering_time_setting()
{
	display_1 = watering_time_days / 10 % 10;
 520:	80 91 68 00 	lds	r24, 0x0068
 524:	6a e0       	ldi	r22, 0x0A	; 10
 526:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 52a:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 52e:	90 93 61 00 	sts	0x0061, r25
	display_2 = watering_time_days % 10;
 532:	80 91 68 00 	lds	r24, 0x0068
 536:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 53a:	90 93 62 00 	sts	0x0062, r25
	display_3 = watering_time_hour / 10 % 10;
 53e:	80 91 69 00 	lds	r24, 0x0069
 542:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 546:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 54a:	90 93 63 00 	sts	0x0063, r25
	display_4 = watering_time_hour % 10;
 54e:	80 91 69 00 	lds	r24, 0x0069
 552:	5a c0       	rjmp	.+180    	; 0x608 <__vector_11+0x13a>
	}
	else if (menu_option == 2)
	{
		display_watering_time_setting();
	}
	else if (menu_option == 3)
 554:	80 91 78 00 	lds	r24, 0x0078
 558:	83 30       	cpi	r24, 0x03	; 3
 55a:	d9 f4       	brne	.+54     	; 0x592 <__vector_11+0xc4>
	display_4 = watering_time_hour % 10;
}

inline void display_watering_duration_setting()
{
	display_1 = watering_duration_seconds / 100 % 10;
 55c:	80 91 6a 00 	lds	r24, 0x006A
 560:	64 e6       	ldi	r22, 0x64	; 100
 562:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 566:	6a e0       	ldi	r22, 0x0A	; 10
 568:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 56c:	90 93 61 00 	sts	0x0061, r25
	display_2 = watering_duration_seconds / 10 % 10;
 570:	80 91 6a 00 	lds	r24, 0x006A
 574:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 578:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 57c:	90 93 62 00 	sts	0x0062, r25
	display_3 = watering_duration_seconds % 10;
 580:	80 91 6a 00 	lds	r24, 0x006A
 584:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 588:	90 93 63 00 	sts	0x0063, r25
	display_4 = watering_duration_second_tenths % 10;
 58c:	80 91 81 00 	lds	r24, 0x0081
 590:	3b c0       	rjmp	.+118    	; 0x608 <__vector_11+0x13a>
	}
	else if (menu_option == 3)
	{
		display_watering_duration_setting();
	}
	else if (menu_option == 4)
 592:	80 91 78 00 	lds	r24, 0x0078
 596:	84 30       	cpi	r24, 0x04	; 4
 598:	d1 f4       	brne	.+52     	; 0x5ce <__vector_11+0x100>
	display_4 = watering_duration_second_tenths % 10;
}

inline void display_lamp_time_on()
{
	display_1 = lamp_time_on_hour / 10 % 10;
 59a:	80 91 6b 00 	lds	r24, 0x006B
 59e:	6a e0       	ldi	r22, 0x0A	; 10
 5a0:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5a4:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5a8:	90 93 61 00 	sts	0x0061, r25
	display_2 = lamp_time_on_hour % 10;
 5ac:	80 91 6b 00 	lds	r24, 0x006B
 5b0:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5b4:	90 93 62 00 	sts	0x0062, r25
	display_3 = lamp_time_on_minute / 10 % 10;
 5b8:	80 91 84 00 	lds	r24, 0x0084
 5bc:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5c0:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5c4:	90 93 63 00 	sts	0x0063, r25
	display_4 = lamp_time_on_minute % 10;
 5c8:	80 91 84 00 	lds	r24, 0x0084
 5cc:	1d c0       	rjmp	.+58     	; 0x608 <__vector_11+0x13a>
	}
	else if (menu_option == 4)
	{
		display_lamp_time_on();
	}
	else if (menu_option == 5)
 5ce:	80 91 78 00 	lds	r24, 0x0078
 5d2:	85 30       	cpi	r24, 0x05	; 5
 5d4:	f1 f4       	brne	.+60     	; 0x612 <__vector_11+0x144>
	display_4 = lamp_time_on_minute % 10;
}

inline void display_lamp_time_off()
{
	display_1 = lamp_time_off_hour / 10 % 10;
 5d6:	80 91 6c 00 	lds	r24, 0x006C
 5da:	6a e0       	ldi	r22, 0x0A	; 10
 5dc:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5e0:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5e4:	90 93 61 00 	sts	0x0061, r25
	display_2 = lamp_time_off_hour % 10;
 5e8:	80 91 6c 00 	lds	r24, 0x006C
 5ec:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5f0:	90 93 62 00 	sts	0x0062, r25
	display_3 = lamp_time_off_minute / 10 % 10;
 5f4:	80 91 85 00 	lds	r24, 0x0085
 5f8:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 5fc:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 600:	90 93 63 00 	sts	0x0063, r25
	display_4 = lamp_time_off_minute % 10;
 604:	80 91 85 00 	lds	r24, 0x0085
 608:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 60c:	90 93 64 00 	sts	0x0064, r25
 610:	5e c0       	rjmp	.+188    	; 0x6ce <__vector_11+0x200>
	}
	else if (menu_option == 5)
	{
		display_lamp_time_off();
	}
	else if (menu_option == 6)
 612:	80 91 78 00 	lds	r24, 0x0078
 616:	86 30       	cpi	r24, 0x06	; 6
 618:	d1 f4       	brne	.+52     	; 0x64e <__vector_11+0x180>
	}
}

inline void display_time()
{
	display_1 = time_hour / 10 % 10;
 61a:	80 91 7c 00 	lds	r24, 0x007C
 61e:	6a e0       	ldi	r22, 0x0A	; 10
 620:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 624:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 628:	90 93 61 00 	sts	0x0061, r25
	display_2 = time_hour % 10;
 62c:	80 91 7c 00 	lds	r24, 0x007C
 630:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 634:	90 93 62 00 	sts	0x0062, r25
	display_3 = time_minute / 10 % 10;
 638:	80 91 7d 00 	lds	r24, 0x007D
 63c:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 640:	0e 94 17 05 	call	0xa2e	; 0xa2e <__udivmodqi4>
 644:	90 93 63 00 	sts	0x0063, r25
	display_4 = time_minute % 10;
 648:	80 91 7d 00 	lds	r24, 0x007D
 64c:	dd cf       	rjmp	.-70     	; 0x608 <__vector_11+0x13a>
	}
	else if (menu_option == 6)
	{
		display_time();
	}
	else if (menu_option == 7)
 64e:	80 91 78 00 	lds	r24, 0x0078
 652:	87 30       	cpi	r24, 0x07	; 7
 654:	e1 f5       	brne	.+120    	; 0x6ce <__vector_11+0x200>
	display_4 = 10;
}

inline void display_vcc()
{
	display_vcc_delay_counter--;
 656:	80 91 65 00 	lds	r24, 0x0065
 65a:	81 50       	subi	r24, 0x01	; 1
 65c:	80 93 65 00 	sts	0x0065, r24
	if (display_vcc_delay_counter == 0)
 660:	80 91 65 00 	lds	r24, 0x0065
 664:	88 23       	and	r24, r24
 666:	99 f5       	brne	.+102    	; 0x6ce <__vector_11+0x200>
	{
		display_1 = 10;
 668:	8a e0       	ldi	r24, 0x0A	; 10
 66a:	80 93 61 00 	sts	0x0061, r24
		display_2 = Vcc_value / 1000 % 10;
 66e:	80 91 6e 00 	lds	r24, 0x006E
 672:	90 91 6f 00 	lds	r25, 0x006F
 676:	68 ee       	ldi	r22, 0xE8	; 232
 678:	73 e0       	ldi	r23, 0x03	; 3
 67a:	0e 94 23 05 	call	0xa46	; 0xa46 <__udivmodhi4>
 67e:	cb 01       	movw	r24, r22
 680:	6a e0       	ldi	r22, 0x0A	; 10
 682:	70 e0       	ldi	r23, 0x00	; 0
 684:	0e 94 23 05 	call	0xa46	; 0xa46 <__udivmodhi4>
 688:	80 93 62 00 	sts	0x0062, r24
		display_3 = Vcc_value / 100 % 10;
 68c:	80 91 6e 00 	lds	r24, 0x006E
 690:	90 91 6f 00 	lds	r25, 0x006F
 694:	64 e6       	ldi	r22, 0x64	; 100
 696:	70 e0       	ldi	r23, 0x00	; 0
 698:	0e 94 23 05 	call	0xa46	; 0xa46 <__udivmodhi4>
 69c:	cb 01       	movw	r24, r22
 69e:	6a e0       	ldi	r22, 0x0A	; 10
 6a0:	70 e0       	ldi	r23, 0x00	; 0
 6a2:	0e 94 23 05 	call	0xa46	; 0xa46 <__udivmodhi4>
 6a6:	80 93 63 00 	sts	0x0063, r24
		display_4 = Vcc_value  / 10 % 10;
 6aa:	80 91 6e 00 	lds	r24, 0x006E
 6ae:	90 91 6f 00 	lds	r25, 0x006F
 6b2:	6a e0       	ldi	r22, 0x0A	; 10
 6b4:	70 e0       	ldi	r23, 0x00	; 0
 6b6:	0e 94 23 05 	call	0xa46	; 0xa46 <__udivmodhi4>
 6ba:	cb 01       	movw	r24, r22
 6bc:	6a e0       	ldi	r22, 0x0A	; 10
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	0e 94 23 05 	call	0xa46	; 0xa46 <__udivmodhi4>
 6c4:	80 93 64 00 	sts	0x0064, r24

		//125 * 4ms = 500ms delay
		display_vcc_delay_counter = 125;
 6c8:	8d e7       	ldi	r24, 0x7D	; 125
 6ca:	80 93 65 00 	sts	0x0065, r24

//7-segment display functions

inline uint8_t display_digit()
{
	if (display_n == 1) return display_1;
 6ce:	80 91 60 00 	lds	r24, 0x0060
 6d2:	81 30       	cpi	r24, 0x01	; 1
 6d4:	19 f4       	brne	.+6      	; 0x6dc <__vector_11+0x20e>
 6d6:	80 91 61 00 	lds	r24, 0x0061
 6da:	14 c0       	rjmp	.+40     	; 0x704 <__vector_11+0x236>
	if (display_n == 2) return display_2;
 6dc:	80 91 60 00 	lds	r24, 0x0060
 6e0:	82 30       	cpi	r24, 0x02	; 2
 6e2:	19 f4       	brne	.+6      	; 0x6ea <__vector_11+0x21c>
 6e4:	80 91 62 00 	lds	r24, 0x0062
 6e8:	0d c0       	rjmp	.+26     	; 0x704 <__vector_11+0x236>
	if (display_n == 3) return display_3;
 6ea:	80 91 60 00 	lds	r24, 0x0060
 6ee:	83 30       	cpi	r24, 0x03	; 3
 6f0:	19 f4       	brne	.+6      	; 0x6f8 <__vector_11+0x22a>
 6f2:	80 91 63 00 	lds	r24, 0x0063
 6f6:	06 c0       	rjmp	.+12     	; 0x704 <__vector_11+0x236>
	if (display_n == 4) return display_4;
 6f8:	80 91 60 00 	lds	r24, 0x0060
 6fc:	84 30       	cpi	r24, 0x04	; 4
 6fe:	51 f5       	brne	.+84     	; 0x754 <__vector_11+0x286>
 700:	80 91 64 00 	lds	r24, 0x0064
	return 10;
}

inline void display(uint8_t digit)
{
	if (digit == 0) DISPLAY_0;
 704:	88 23       	and	r24, r24
 706:	11 f4       	brne	.+4      	; 0x70c <__vector_11+0x23e>
 708:	84 e1       	ldi	r24, 0x14	; 20
 70a:	25 c0       	rjmp	.+74     	; 0x756 <__vector_11+0x288>
	else if (digit == 1) DISPLAY_1;
 70c:	81 30       	cpi	r24, 0x01	; 1
 70e:	11 f4       	brne	.+4      	; 0x714 <__vector_11+0x246>
 710:	87 e7       	ldi	r24, 0x77	; 119
 712:	21 c0       	rjmp	.+66     	; 0x756 <__vector_11+0x288>
	else if (digit == 2) DISPLAY_2;
 714:	82 30       	cpi	r24, 0x02	; 2
 716:	11 f4       	brne	.+4      	; 0x71c <__vector_11+0x24e>
 718:	8c e4       	ldi	r24, 0x4C	; 76
 71a:	1d c0       	rjmp	.+58     	; 0x756 <__vector_11+0x288>
	else if (digit == 3) DISPLAY_3;
 71c:	83 30       	cpi	r24, 0x03	; 3
 71e:	11 f4       	brne	.+4      	; 0x724 <__vector_11+0x256>
 720:	85 e4       	ldi	r24, 0x45	; 69
 722:	19 c0       	rjmp	.+50     	; 0x756 <__vector_11+0x288>
	else if (digit == 4) DISPLAY_4;
 724:	84 30       	cpi	r24, 0x04	; 4
 726:	11 f4       	brne	.+4      	; 0x72c <__vector_11+0x25e>
 728:	87 e2       	ldi	r24, 0x27	; 39
 72a:	15 c0       	rjmp	.+42     	; 0x756 <__vector_11+0x288>
	else if (digit == 5) DISPLAY_5;
 72c:	85 30       	cpi	r24, 0x05	; 5
 72e:	11 f4       	brne	.+4      	; 0x734 <__vector_11+0x266>
 730:	85 e8       	ldi	r24, 0x85	; 133
 732:	11 c0       	rjmp	.+34     	; 0x756 <__vector_11+0x288>
	else if (digit == 6) DISPLAY_6;
 734:	86 30       	cpi	r24, 0x06	; 6
 736:	11 f4       	brne	.+4      	; 0x73c <__vector_11+0x26e>
 738:	84 e8       	ldi	r24, 0x84	; 132
 73a:	0d c0       	rjmp	.+26     	; 0x756 <__vector_11+0x288>
	else if (digit == 7) DISPLAY_7;
 73c:	87 30       	cpi	r24, 0x07	; 7
 73e:	11 f4       	brne	.+4      	; 0x744 <__vector_11+0x276>
 740:	87 e5       	ldi	r24, 0x57	; 87
 742:	09 c0       	rjmp	.+18     	; 0x756 <__vector_11+0x288>
	else if (digit == 8) DISPLAY_8;
 744:	88 30       	cpi	r24, 0x08	; 8
 746:	11 f4       	brne	.+4      	; 0x74c <__vector_11+0x27e>
 748:	84 e0       	ldi	r24, 0x04	; 4
 74a:	05 c0       	rjmp	.+10     	; 0x756 <__vector_11+0x288>
	else if (digit == 9) DISPLAY_9;
 74c:	89 30       	cpi	r24, 0x09	; 9
 74e:	11 f4       	brne	.+4      	; 0x754 <__vector_11+0x286>
 750:	85 e0       	ldi	r24, 0x05	; 5
 752:	01 c0       	rjmp	.+2      	; 0x756 <__vector_11+0x288>
	else DISPLAY_CLEAR;
 754:	8f ef       	ldi	r24, 0xFF	; 255
 756:	82 bb       	out	0x12, r24	; 18

	//7-segment display - set digit
	display(display_digit());
	
	//Display dot according to the selected menu option
	if (menu_option == 0)
 758:	80 91 78 00 	lds	r24, 0x0078
 75c:	88 23       	and	r24, r24
 75e:	59 f1       	breq	.+86     	; 0x7b6 <__vector_11+0x2e8>
	{
		//No dot
	}
	else if (menu_option == 1)
 760:	80 91 78 00 	lds	r24, 0x0078
 764:	81 30       	cpi	r24, 0x01	; 1
 766:	c9 f0       	breq	.+50     	; 0x79a <__vector_11+0x2cc>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 2)
 768:	80 91 78 00 	lds	r24, 0x0078
 76c:	82 30       	cpi	r24, 0x02	; 2
 76e:	19 f1       	breq	.+70     	; 0x7b6 <__vector_11+0x2e8>
	{
		//No dot
	}
	else if (menu_option == 3)
 770:	80 91 78 00 	lds	r24, 0x0078
 774:	83 30       	cpi	r24, 0x03	; 3
 776:	29 f4       	brne	.+10     	; 0x782 <__vector_11+0x2b4>
	{
		if (display_n == 3) DISPLAY_SHOW_DOT;
 778:	80 91 60 00 	lds	r24, 0x0060
 77c:	83 30       	cpi	r24, 0x03	; 3
 77e:	d9 f4       	brne	.+54     	; 0x7b6 <__vector_11+0x2e8>
 780:	19 c0       	rjmp	.+50     	; 0x7b4 <__vector_11+0x2e6>
	}
	else if (menu_option == 4)
 782:	80 91 78 00 	lds	r24, 0x0078
 786:	84 30       	cpi	r24, 0x04	; 4
 788:	41 f0       	breq	.+16     	; 0x79a <__vector_11+0x2cc>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 5)
 78a:	80 91 78 00 	lds	r24, 0x0078
 78e:	85 30       	cpi	r24, 0x05	; 5
 790:	21 f0       	breq	.+8      	; 0x79a <__vector_11+0x2cc>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 6)
 792:	80 91 78 00 	lds	r24, 0x0078
 796:	86 30       	cpi	r24, 0x06	; 6
 798:	29 f4       	brne	.+10     	; 0x7a4 <__vector_11+0x2d6>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
 79a:	80 91 60 00 	lds	r24, 0x0060
 79e:	82 30       	cpi	r24, 0x02	; 2
 7a0:	51 f4       	brne	.+20     	; 0x7b6 <__vector_11+0x2e8>
 7a2:	08 c0       	rjmp	.+16     	; 0x7b4 <__vector_11+0x2e6>
	}
	else if (menu_option == 7)
 7a4:	80 91 78 00 	lds	r24, 0x0078
 7a8:	87 30       	cpi	r24, 0x07	; 7
 7aa:	29 f4       	brne	.+10     	; 0x7b6 <__vector_11+0x2e8>
	{
		if (display_n == 1) DISPLAY_SHOW_DOT;
 7ac:	80 91 60 00 	lds	r24, 0x0060
 7b0:	81 30       	cpi	r24, 0x01	; 1
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <__vector_11+0x2e8>
 7b4:	92 98       	cbi	0x12, 2	; 18
	}

	//7-segment display - turn on digit
	if      (display_n == 1) DISPLAY_DIGIT1;
 7b6:	80 91 60 00 	lds	r24, 0x0060
 7ba:	81 30       	cpi	r24, 0x01	; 1
 7bc:	11 f4       	brne	.+4      	; 0x7c2 <__vector_11+0x2f4>
 7be:	ab 9a       	sbi	0x15, 3	; 21
 7c0:	11 c0       	rjmp	.+34     	; 0x7e4 <__vector_11+0x316>
	else if (display_n == 2) DISPLAY_DIGIT2;
 7c2:	80 91 60 00 	lds	r24, 0x0060
 7c6:	82 30       	cpi	r24, 0x02	; 2
 7c8:	11 f4       	brne	.+4      	; 0x7ce <__vector_11+0x300>
 7ca:	aa 9a       	sbi	0x15, 2	; 21
 7cc:	0b c0       	rjmp	.+22     	; 0x7e4 <__vector_11+0x316>
	else if (display_n == 3) DISPLAY_DIGIT3;
 7ce:	80 91 60 00 	lds	r24, 0x0060
 7d2:	83 30       	cpi	r24, 0x03	; 3
 7d4:	11 f4       	brne	.+4      	; 0x7da <__vector_11+0x30c>
 7d6:	a9 9a       	sbi	0x15, 1	; 21
 7d8:	05 c0       	rjmp	.+10     	; 0x7e4 <__vector_11+0x316>
	else if (display_n == 4) DISPLAY_DIGIT4;
 7da:	80 91 60 00 	lds	r24, 0x0060
 7de:	84 30       	cpi	r24, 0x04	; 4
 7e0:	09 f4       	brne	.+2      	; 0x7e4 <__vector_11+0x316>
 7e2:	a8 9a       	sbi	0x15, 0	; 21

	//7-segment display - move to next digit
	display_n++;
 7e4:	80 91 60 00 	lds	r24, 0x0060
 7e8:	8f 5f       	subi	r24, 0xFF	; 255
 7ea:	80 93 60 00 	sts	0x0060, r24
	if (display_n == 5) display_n = 1;
 7ee:	80 91 60 00 	lds	r24, 0x0060
 7f2:	85 30       	cpi	r24, 0x05	; 5
 7f4:	19 f4       	brne	.+6      	; 0x7fc <__vector_11+0x32e>
 7f6:	81 e0       	ldi	r24, 0x01	; 1
 7f8:	80 93 60 00 	sts	0x0060, r24
	
	//Decrement delay counter if it's greater than zero
	if (menu_button_delay_counter) menu_button_delay_counter--;
 7fc:	80 91 79 00 	lds	r24, 0x0079
 800:	88 23       	and	r24, r24
 802:	29 f0       	breq	.+10     	; 0x80e <__vector_11+0x340>
 804:	80 91 79 00 	lds	r24, 0x0079
 808:	81 50       	subi	r24, 0x01	; 1
 80a:	80 93 79 00 	sts	0x0079, r24

	//Menu option LEDs
	if (menu_option == 0)
 80e:	80 91 78 00 	lds	r24, 0x0078
 812:	88 23       	and	r24, r24
 814:	11 f4       	brne	.+4      	; 0x81a <__vector_11+0x34c>
	{
		LED2_OFF;
 816:	ac 98       	cbi	0x15, 4	; 21
 818:	19 c0       	rjmp	.+50     	; 0x84c <__vector_11+0x37e>
		LED1_OFF;
		LED0_OFF;
	}
	else if (menu_option == 1)
 81a:	80 91 78 00 	lds	r24, 0x0078
 81e:	81 30       	cpi	r24, 0x01	; 1
 820:	11 f4       	brne	.+4      	; 0x826 <__vector_11+0x358>
	{
		LED2_OFF;
 822:	ac 98       	cbi	0x15, 4	; 21
 824:	1a c0       	rjmp	.+52     	; 0x85a <__vector_11+0x38c>
		LED1_OFF;
		LED0_ON;
	}
	else if (menu_option == 2)
 826:	80 91 78 00 	lds	r24, 0x0078
 82a:	82 30       	cpi	r24, 0x02	; 2
 82c:	21 f4       	brne	.+8      	; 0x836 <__vector_11+0x368>
	{
		LED2_OFF;
 82e:	ac 98       	cbi	0x15, 4	; 21
		LED1_ON;
 830:	ad 9a       	sbi	0x15, 5	; 21
		LED0_OFF;
 832:	ae 98       	cbi	0x15, 6	; 21
 834:	1d c0       	rjmp	.+58     	; 0x870 <__stack+0x11>
	}
	else if (menu_option == 3)
 836:	80 91 78 00 	lds	r24, 0x0078
 83a:	83 30       	cpi	r24, 0x03	; 3
 83c:	11 f4       	brne	.+4      	; 0x842 <__vector_11+0x374>
	{
		LED2_OFF;
 83e:	ac 98       	cbi	0x15, 4	; 21
 840:	15 c0       	rjmp	.+42     	; 0x86c <__stack+0xd>
		LED1_ON;
		LED0_ON;
	}
	else if (menu_option == 4)
 842:	80 91 78 00 	lds	r24, 0x0078
 846:	84 30       	cpi	r24, 0x04	; 4
 848:	19 f4       	brne	.+6      	; 0x850 <__vector_11+0x382>
	{
		LED2_ON;
 84a:	ac 9a       	sbi	0x15, 4	; 21
		LED1_OFF;
 84c:	ad 98       	cbi	0x15, 5	; 21
 84e:	f1 cf       	rjmp	.-30     	; 0x832 <__vector_11+0x364>
		LED0_OFF;
	}
	else if (menu_option == 5)
 850:	80 91 78 00 	lds	r24, 0x0078
 854:	85 30       	cpi	r24, 0x05	; 5
 856:	19 f4       	brne	.+6      	; 0x85e <__vector_11+0x390>
	{
		LED2_ON;
 858:	ac 9a       	sbi	0x15, 4	; 21
		LED1_OFF;
 85a:	ad 98       	cbi	0x15, 5	; 21
 85c:	08 c0       	rjmp	.+16     	; 0x86e <__stack+0xf>
		LED0_ON;
	}
	else if (menu_option == 6)
 85e:	80 91 78 00 	lds	r24, 0x0078
 862:	86 30       	cpi	r24, 0x06	; 6
 864:	11 f4       	brne	.+4      	; 0x86a <__stack+0xb>
	{
		LED2_ON;
 866:	ac 9a       	sbi	0x15, 4	; 21
 868:	e3 cf       	rjmp	.-58     	; 0x830 <__vector_11+0x362>
		LED1_ON;
		LED0_OFF;
	}
	else
	{
		LED2_ON;
 86a:	ac 9a       	sbi	0x15, 4	; 21
		LED1_ON;
 86c:	ad 9a       	sbi	0x15, 5	; 21
		LED0_ON;
 86e:	ae 9a       	sbi	0x15, 6	; 21
	}

	//Timekeeping
	time_4_milliseconds++;
 870:	80 91 7f 00 	lds	r24, 0x007F
 874:	8f 5f       	subi	r24, 0xFF	; 255
 876:	80 93 7f 00 	sts	0x007F, r24
	if (time_4_milliseconds == 250)
 87a:	80 91 7f 00 	lds	r24, 0x007F
 87e:	8a 3f       	cpi	r24, 0xFA	; 250
 880:	09 f0       	breq	.+2      	; 0x884 <__stack+0x25>
 882:	4b c0       	rjmp	.+150    	; 0x91a <__stack+0xbb>
	{
		time_4_milliseconds = 0;
 884:	10 92 7f 00 	sts	0x007F, r1
		time_second++;
 888:	80 91 7e 00 	lds	r24, 0x007E
 88c:	8f 5f       	subi	r24, 0xFF	; 255
 88e:	80 93 7e 00 	sts	0x007E, r24
		if (time_second == 60)
 892:	80 91 7e 00 	lds	r24, 0x007E
 896:	8c 33       	cpi	r24, 0x3C	; 60
 898:	09 f0       	breq	.+2      	; 0x89c <__stack+0x3d>
 89a:	3f c0       	rjmp	.+126    	; 0x91a <__stack+0xbb>
		{
			time_second = 0;
 89c:	10 92 7e 00 	sts	0x007E, r1
			time_minute++;
 8a0:	80 91 7d 00 	lds	r24, 0x007D
 8a4:	8f 5f       	subi	r24, 0xFF	; 255
 8a6:	80 93 7d 00 	sts	0x007D, r24
			if (time_minute == 60)
 8aa:	80 91 7d 00 	lds	r24, 0x007D
 8ae:	8c 33       	cpi	r24, 0x3C	; 60
 8b0:	a1 f5       	brne	.+104    	; 0x91a <__stack+0xbb>
			{
				time_minute = 0;
 8b2:	10 92 7d 00 	sts	0x007D, r1
				time_hour++;
 8b6:	80 91 7c 00 	lds	r24, 0x007C
 8ba:	8f 5f       	subi	r24, 0xFF	; 255
 8bc:	80 93 7c 00 	sts	0x007C, r24
				if (time_hour == 24)
 8c0:	80 91 7c 00 	lds	r24, 0x007C
 8c4:	88 31       	cpi	r24, 0x18	; 24
 8c6:	39 f4       	brne	.+14     	; 0x8d6 <__stack+0x77>
				{
					time_hour = 0;
 8c8:	10 92 7c 00 	sts	0x007C, r1

					watering_days_passed++;
 8cc:	80 91 80 00 	lds	r24, 0x0080
 8d0:	8f 5f       	subi	r24, 0xFF	; 255
 8d2:	80 93 80 00 	sts	0x0080, r24
				}

				if (time_hour == watering_time_hour)
 8d6:	90 91 7c 00 	lds	r25, 0x007C
 8da:	80 91 69 00 	lds	r24, 0x0069
 8de:	98 17       	cp	r25, r24
 8e0:	e1 f4       	brne	.+56     	; 0x91a <__stack+0xbb>
				{
					if (watering_time_days <= watering_days_passed)
 8e2:	90 91 68 00 	lds	r25, 0x0068
 8e6:	80 91 80 00 	lds	r24, 0x0080
 8ea:	89 17       	cp	r24, r25
 8ec:	b0 f0       	brcs	.+44     	; 0x91a <__stack+0xbb>
					{
						//Start watering
						PUMP_ON;
 8ee:	c1 9a       	sbi	0x18, 1	; 24
						watering_counter = (uint16_t)watering_duration_second_tenths * 25 + (uint16_t)watering_duration_seconds * 250 + 1;
 8f0:	80 91 81 00 	lds	r24, 0x0081
 8f4:	20 91 6a 00 	lds	r18, 0x006A
 8f8:	49 e1       	ldi	r20, 0x19	; 25
 8fa:	84 9f       	mul	r24, r20
 8fc:	c0 01       	movw	r24, r0
 8fe:	11 24       	eor	r1, r1
 900:	4a ef       	ldi	r20, 0xFA	; 250
 902:	24 9f       	mul	r18, r20
 904:	90 01       	movw	r18, r0
 906:	11 24       	eor	r1, r1
 908:	82 0f       	add	r24, r18
 90a:	93 1f       	adc	r25, r19
 90c:	01 96       	adiw	r24, 0x01	; 1
 90e:	90 93 83 00 	sts	0x0083, r25
 912:	80 93 82 00 	sts	0x0082, r24
						watering_days_passed = 0;
 916:	10 92 80 00 	sts	0x0080, r1
			}
		}
	}

	//Watering
	if (watering_counter)
 91a:	80 91 82 00 	lds	r24, 0x0082
 91e:	90 91 83 00 	lds	r25, 0x0083
 922:	89 2b       	or	r24, r25
 924:	81 f0       	breq	.+32     	; 0x946 <__stack+0xe7>
	{
		watering_counter--;
 926:	80 91 82 00 	lds	r24, 0x0082
 92a:	90 91 83 00 	lds	r25, 0x0083
 92e:	01 97       	sbiw	r24, 0x01	; 1
 930:	90 93 83 00 	sts	0x0083, r25
 934:	80 93 82 00 	sts	0x0082, r24
		if (watering_counter == 0) PUMP_OFF;
 938:	80 91 82 00 	lds	r24, 0x0082
 93c:	90 91 83 00 	lds	r25, 0x0083
 940:	89 2b       	or	r24, r25
 942:	09 f4       	brne	.+2      	; 0x946 <__stack+0xe7>
 944:	c1 98       	cbi	0x18, 1	; 24
	}

	//Light
	if (
 946:	80 91 77 00 	lds	r24, 0x0077
 94a:	88 23       	and	r24, r24
 94c:	69 f1       	breq	.+90     	; 0x9a8 <__stack+0x149>
 94e:	90 91 7c 00 	lds	r25, 0x007C
 952:	80 91 6b 00 	lds	r24, 0x006B
 956:	89 17       	cp	r24, r25
 958:	60 f0       	brcs	.+24     	; 0x972 <__stack+0x113>
 95a:	90 91 7c 00 	lds	r25, 0x007C
 95e:	80 91 6b 00 	lds	r24, 0x006B
 962:	98 17       	cp	r25, r24
 964:	09 f5       	brne	.+66     	; 0x9a8 <__stack+0x149>
 966:	90 91 7d 00 	lds	r25, 0x007D
 96a:	80 91 84 00 	lds	r24, 0x0084
 96e:	98 17       	cp	r25, r24
 970:	d8 f0       	brcs	.+54     	; 0x9a8 <__stack+0x149>
 972:	90 91 7c 00 	lds	r25, 0x007C
 976:	80 91 6c 00 	lds	r24, 0x006C
 97a:	98 17       	cp	r25, r24
 97c:	60 f0       	brcs	.+24     	; 0x996 <__stack+0x137>
 97e:	90 91 7c 00 	lds	r25, 0x007C
 982:	80 91 6c 00 	lds	r24, 0x006C
 986:	98 17       	cp	r25, r24
 988:	79 f4       	brne	.+30     	; 0x9a8 <__stack+0x149>
 98a:	90 91 7d 00 	lds	r25, 0x007D
 98e:	80 91 85 00 	lds	r24, 0x0085
 992:	89 17       	cp	r24, r25
 994:	48 f0       	brcs	.+18     	; 0x9a8 <__stack+0x149>
 996:	80 91 6e 00 	lds	r24, 0x006E
 99a:	90 91 6f 00 	lds	r25, 0x006F
 99e:	8c 5c       	subi	r24, 0xCC	; 204
 9a0:	90 41       	sbci	r25, 0x10	; 16
 9a2:	10 f0       	brcs	.+4      	; 0x9a8 <__stack+0x149>
		(time_hour == lamp_time_off_hour && time_minute <= lamp_time_off_minute))
		&&
		(Vcc_value >= 4300)
		)
	{
		LIGHT_ON;
 9a4:	c0 9a       	sbi	0x18, 0	; 24
 9a6:	01 c0       	rjmp	.+2      	; 0x9aa <__stack+0x14b>
	}
	else
	{
		LIGHT_OFF;
 9a8:	c0 98       	cbi	0x18, 0	; 24
	}

	//Menu idle - 1250 * 4ms = 5s delay
	if (menu_idle_delay_counter < 1250)
 9aa:	80 91 7a 00 	lds	r24, 0x007A
 9ae:	90 91 7b 00 	lds	r25, 0x007B
 9b2:	82 5e       	subi	r24, 0xE2	; 226
 9b4:	94 40       	sbci	r25, 0x04	; 4
 9b6:	50 f4       	brcc	.+20     	; 0x9cc <__stack+0x16d>
	{
		menu_idle_delay_counter++;
 9b8:	80 91 7a 00 	lds	r24, 0x007A
 9bc:	90 91 7b 00 	lds	r25, 0x007B
 9c0:	01 96       	adiw	r24, 0x01	; 1
 9c2:	90 93 7b 00 	sts	0x007B, r25
 9c6:	80 93 7a 00 	sts	0x007A, r24
 9ca:	22 c0       	rjmp	.+68     	; 0xa10 <__stack+0x1b1>
	}
	else
	{
		menu_idle_cycle_counter++;
 9cc:	80 91 66 00 	lds	r24, 0x0066
 9d0:	90 91 67 00 	lds	r25, 0x0067
 9d4:	01 96       	adiw	r24, 0x01	; 1
 9d6:	90 93 67 00 	sts	0x0067, r25
 9da:	80 93 66 00 	sts	0x0066, r24
		if (menu_idle_cycle_counter == 1250)
 9de:	80 91 66 00 	lds	r24, 0x0066
 9e2:	90 91 67 00 	lds	r25, 0x0067
 9e6:	82 5e       	subi	r24, 0xE2	; 226
 9e8:	94 40       	sbci	r25, 0x04	; 4
 9ea:	91 f4       	brne	.+36     	; 0xa10 <__stack+0x1b1>
		{
			if (menu_option == 6)
 9ec:	80 91 78 00 	lds	r24, 0x0078
 9f0:	86 30       	cpi	r24, 0x06	; 6
 9f2:	39 f4       	brne	.+14     	; 0xa02 <__stack+0x1a3>
			{
				menu_option = 7;
 9f4:	87 e0       	ldi	r24, 0x07	; 7
 9f6:	80 93 78 00 	sts	0x0078, r24
				display_vcc_delay_counter = 1;
 9fa:	81 e0       	ldi	r24, 0x01	; 1
 9fc:	80 93 65 00 	sts	0x0065, r24
 a00:	03 c0       	rjmp	.+6      	; 0xa08 <__stack+0x1a9>
			}
			else
			{
				menu_option = 6;
 a02:	86 e0       	ldi	r24, 0x06	; 6
 a04:	80 93 78 00 	sts	0x0078, r24
			}

			menu_idle_cycle_counter = 0;
 a08:	10 92 67 00 	sts	0x0067, r1
 a0c:	10 92 66 00 	sts	0x0066, r1
		}
	}
}
 a10:	bf 91       	pop	r27
 a12:	af 91       	pop	r26
 a14:	9f 91       	pop	r25
 a16:	8f 91       	pop	r24
 a18:	7f 91       	pop	r23
 a1a:	6f 91       	pop	r22
 a1c:	5f 91       	pop	r21
 a1e:	4f 91       	pop	r20
 a20:	3f 91       	pop	r19
 a22:	2f 91       	pop	r18
 a24:	0f 90       	pop	r0
 a26:	0f be       	out	0x3f, r0	; 63
 a28:	0f 90       	pop	r0
 a2a:	1f 90       	pop	r1
 a2c:	18 95       	reti

00000a2e <__udivmodqi4>:
 a2e:	99 1b       	sub	r25, r25
 a30:	79 e0       	ldi	r23, 0x09	; 9
 a32:	04 c0       	rjmp	.+8      	; 0xa3c <__udivmodqi4_ep>

00000a34 <__udivmodqi4_loop>:
 a34:	99 1f       	adc	r25, r25
 a36:	96 17       	cp	r25, r22
 a38:	08 f0       	brcs	.+2      	; 0xa3c <__udivmodqi4_ep>
 a3a:	96 1b       	sub	r25, r22

00000a3c <__udivmodqi4_ep>:
 a3c:	88 1f       	adc	r24, r24
 a3e:	7a 95       	dec	r23
 a40:	c9 f7       	brne	.-14     	; 0xa34 <__udivmodqi4_loop>
 a42:	80 95       	com	r24
 a44:	08 95       	ret

00000a46 <__udivmodhi4>:
 a46:	aa 1b       	sub	r26, r26
 a48:	bb 1b       	sub	r27, r27
 a4a:	51 e1       	ldi	r21, 0x11	; 17
 a4c:	07 c0       	rjmp	.+14     	; 0xa5c <__udivmodhi4_ep>

00000a4e <__udivmodhi4_loop>:
 a4e:	aa 1f       	adc	r26, r26
 a50:	bb 1f       	adc	r27, r27
 a52:	a6 17       	cp	r26, r22
 a54:	b7 07       	cpc	r27, r23
 a56:	10 f0       	brcs	.+4      	; 0xa5c <__udivmodhi4_ep>
 a58:	a6 1b       	sub	r26, r22
 a5a:	b7 0b       	sbc	r27, r23

00000a5c <__udivmodhi4_ep>:
 a5c:	88 1f       	adc	r24, r24
 a5e:	99 1f       	adc	r25, r25
 a60:	5a 95       	dec	r21
 a62:	a9 f7       	brne	.-22     	; 0xa4e <__udivmodhi4_loop>
 a64:	80 95       	com	r24
 a66:	90 95       	com	r25
 a68:	bc 01       	movw	r22, r24
 a6a:	cd 01       	movw	r24, r26
 a6c:	08 95       	ret

00000a6e <__divmodsi4>:
 a6e:	97 fb       	bst	r25, 7
 a70:	09 2e       	mov	r0, r25
 a72:	05 26       	eor	r0, r21
 a74:	0e d0       	rcall	.+28     	; 0xa92 <__divmodsi4_neg1>
 a76:	57 fd       	sbrc	r21, 7
 a78:	04 d0       	rcall	.+8      	; 0xa82 <__divmodsi4_neg2>
 a7a:	14 d0       	rcall	.+40     	; 0xaa4 <__udivmodsi4>
 a7c:	0a d0       	rcall	.+20     	; 0xa92 <__divmodsi4_neg1>
 a7e:	00 1c       	adc	r0, r0
 a80:	38 f4       	brcc	.+14     	; 0xa90 <__divmodsi4_exit>

00000a82 <__divmodsi4_neg2>:
 a82:	50 95       	com	r21
 a84:	40 95       	com	r20
 a86:	30 95       	com	r19
 a88:	21 95       	neg	r18
 a8a:	3f 4f       	sbci	r19, 0xFF	; 255
 a8c:	4f 4f       	sbci	r20, 0xFF	; 255
 a8e:	5f 4f       	sbci	r21, 0xFF	; 255

00000a90 <__divmodsi4_exit>:
 a90:	08 95       	ret

00000a92 <__divmodsi4_neg1>:
 a92:	f6 f7       	brtc	.-4      	; 0xa90 <__divmodsi4_exit>
 a94:	90 95       	com	r25
 a96:	80 95       	com	r24
 a98:	70 95       	com	r23
 a9a:	61 95       	neg	r22
 a9c:	7f 4f       	sbci	r23, 0xFF	; 255
 a9e:	8f 4f       	sbci	r24, 0xFF	; 255
 aa0:	9f 4f       	sbci	r25, 0xFF	; 255
 aa2:	08 95       	ret

00000aa4 <__udivmodsi4>:
 aa4:	a1 e2       	ldi	r26, 0x21	; 33
 aa6:	1a 2e       	mov	r1, r26
 aa8:	aa 1b       	sub	r26, r26
 aaa:	bb 1b       	sub	r27, r27
 aac:	fd 01       	movw	r30, r26
 aae:	0d c0       	rjmp	.+26     	; 0xaca <__udivmodsi4_ep>

00000ab0 <__udivmodsi4_loop>:
 ab0:	aa 1f       	adc	r26, r26
 ab2:	bb 1f       	adc	r27, r27
 ab4:	ee 1f       	adc	r30, r30
 ab6:	ff 1f       	adc	r31, r31
 ab8:	a2 17       	cp	r26, r18
 aba:	b3 07       	cpc	r27, r19
 abc:	e4 07       	cpc	r30, r20
 abe:	f5 07       	cpc	r31, r21
 ac0:	20 f0       	brcs	.+8      	; 0xaca <__udivmodsi4_ep>
 ac2:	a2 1b       	sub	r26, r18
 ac4:	b3 0b       	sbc	r27, r19
 ac6:	e4 0b       	sbc	r30, r20
 ac8:	f5 0b       	sbc	r31, r21

00000aca <__udivmodsi4_ep>:
 aca:	66 1f       	adc	r22, r22
 acc:	77 1f       	adc	r23, r23
 ace:	88 1f       	adc	r24, r24
 ad0:	99 1f       	adc	r25, r25
 ad2:	1a 94       	dec	r1
 ad4:	69 f7       	brne	.-38     	; 0xab0 <__udivmodsi4_loop>
 ad6:	60 95       	com	r22
 ad8:	70 95       	com	r23
 ada:	80 95       	com	r24
 adc:	90 95       	com	r25
 ade:	9b 01       	movw	r18, r22
 ae0:	ac 01       	movw	r20, r24
 ae2:	bd 01       	movw	r22, r26
 ae4:	cf 01       	movw	r24, r30
 ae6:	08 95       	ret

00000ae8 <_exit>:
 ae8:	f8 94       	cli

00000aea <__stop_program>:
 aea:	ff cf       	rjmp	.-2      	; 0xaea <__stop_program>
