
Plant_care_system.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a4a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000a4a  00000ade  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000116  0080006c  0080006c  00000aea  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000aea  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000267  00000000  00000000  00000b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003cd  00000000  00000000  00000d71  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000115  00000000  00000000  0000113e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000856  00000000  00000000  00001253  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00001aac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000322  00000000  00000000  00001adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000043  00000000  00000000  00001dfe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 53 02 	jmp	0x4a6	; 0x4a6 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e4       	ldi	r30, 0x4A	; 74
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 38       	cpi	r26, 0x82	; 130
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 23 05 	jmp	0xa46	; 0xa46 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
{
	//TODO
}

int main()
{
  92:	7f 92       	push	r7
  94:	8f 92       	push	r8
  96:	9f 92       	push	r9
  98:	af 92       	push	r10
  9a:	bf 92       	push	r11
  9c:	cf 92       	push	r12
  9e:	df 92       	push	r13
  a0:	ef 92       	push	r14
  a2:	ff 92       	push	r15
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
	//Port directions setup
	DDRB = 0b00000011;
  ac:	83 e0       	ldi	r24, 0x03	; 3
  ae:	87 bb       	out	0x17, r24	; 23
	DDRC = 0b01111111;
  b0:	8f e7       	ldi	r24, 0x7F	; 127
  b2:	84 bb       	out	0x14, r24	; 20
	DDRD = 0b11111111;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	81 bb       	out	0x11, r24	; 17

	//Buttons pull-up
	PORTA = 0b00011111;
  b8:	8f e1       	ldi	r24, 0x1F	; 31
  ba:	8b bb       	out	0x1b, r24	; 27

	//Timer0 prescaler 64
	TCCR0 |= (1<<CS01) | (1<<CS00);
  bc:	83 b7       	in	r24, 0x33	; 51
  be:	83 60       	ori	r24, 0x03	; 3
  c0:	83 bf       	out	0x33, r24	; 51

	//Timer0 overflow interrupt enable
	TIMSK |= (1<<TOIE0); 
  c2:	89 b7       	in	r24, 0x39	; 57
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	89 bf       	out	0x39, r24	; 57

	//Enable interrupts
	sei();
  c8:	78 94       	sei

	//Set Vref to AVcc
	ADMUX |= (1 << REFS0);
  ca:	3e 9a       	sbi	0x07, 6	; 7

	//Set ADC input to 1.22V bandgap
    ADMUX |= (1 << MUX4) | (1 << MUX3) | (1 << MUX2) | (1 << MUX1);
  cc:	87 b1       	in	r24, 0x07	; 7
  ce:	8e 61       	ori	r24, 0x1E	; 30
  d0:	87 b9       	out	0x07, r24	; 7

	//Set ADC prescaler to 32
	ADCSRA |= (1 << ADPS2) | (1 << ADPS0);
  d2:	86 b1       	in	r24, 0x06	; 6
  d4:	85 60       	ori	r24, 0x05	; 5
  d6:	86 b9       	out	0x06, r24	; 6
	
	//ADC free running mode
	ADCSRA |= (1 << ADATE);
  d8:	35 9a       	sbi	0x06, 5	; 6

	//Enable ADC
	ADCSRA |= (1 << ADEN);
  da:	37 9a       	sbi	0x06, 7	; 6

	//Start ADC free running conversion
	ADCSRA |= (1 << ADSC);
  dc:	36 9a       	sbi	0x06, 6	; 6
  de:	f0 90 74 00 	lds	r15, 0x0074
			Vcc_value_temp /= VCC_VALUES_SAMPLES;

			//Safe copy and set flag
			cli();
			Vcc_value = (uint16_t)Vcc_value_temp;
			if (Vcc_values_index == 0) Vcc_value_valid = 1;
  e2:	bb 24       	eor	r11, r11
  e4:	b3 94       	inc	r11
			if (menu_option == 8) menu_option = 0;
			display_vcc_delay_counter = 1;
			sei();

			//125 * 4ms = 500ms delay
			menu_button_delay_counter = 125;
  e6:	ed e7       	ldi	r30, 0x7D	; 125
  e8:	7e 2e       	mov	r7, r30
				if (lamp_time_off_hour == 24) lamp_time_off_hour = 0;
			}
			sei();

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
  ea:	72 e3       	ldi	r23, 0x32	; 50
  ec:	e7 2e       	mov	r14, r23
				if (lamp_time_on_hour == 255) lamp_time_on_hour = 23;
			}
			else if (menu_option == 5)
			{
				lamp_time_off_hour--;
				if (lamp_time_off_hour == 255) lamp_time_off_hour = 23;
  ee:	67 e1       	ldi	r22, 0x17	; 23
  f0:	d6 2e       	mov	r13, r22
				if (watering_time_days == 0) watering_time_days = 99;
			}
			else if (menu_option == 3)
			{
				watering_duration_seconds--;
				if (watering_duration_seconds == 0) watering_duration_seconds = 255;
  f2:	aa 24       	eor	r10, r10
  f4:	aa 94       	dec	r10
				if (time_hour == 255) time_hour = 23;
			}
			else if (menu_option == 2)
			{
				watering_time_days--;
				if (watering_time_days == 0) watering_time_days = 99;
  f6:	53 e6       	ldi	r21, 0x63	; 99
  f8:	95 2e       	mov	r9, r21
				if (lamp_time_on_minute == 255) lamp_time_on_minute = 59;
			}
			else if (menu_option == 5)
			{
				lamp_time_off_minute--;
				if (lamp_time_off_minute == 255) lamp_time_off_minute = 59;
  fa:	4b e3       	ldi	r20, 0x3B	; 59
  fc:	c4 2e       	mov	r12, r20
				if (watering_time_hour == 255) watering_time_hour = 23;
			}
			else if (menu_option == 3)
			{
				watering_duration_second_tenths--;
				if (watering_duration_second_tenths == 255) watering_duration_second_tenths = 9;
  fe:	39 e0       	ldi	r19, 0x09	; 9
 100:	83 2e       	mov	r8, r19
	ADCSRA |= (1 << ADSC);

	while(1)
	{
		//Check if ADC conversion complete
	    if (ADCSRA & (1 << ADIF))
 102:	34 9b       	sbis	0x06, 4	; 6
 104:	47 c0       	rjmp	.+142    	; 0x194 <main+0x102>
		{
			//Safe copy and clear flag
			cli();
 106:	f8 94       	cli
			ADC_result = ((uint16_t)ADCL + ((uint16_t)(ADCH) << 8));
 108:	94 b1       	in	r25, 0x04	; 4
 10a:	85 b1       	in	r24, 0x05	; 5
			ADCSRA |= (1 << ADIF);
 10c:	34 9a       	sbi	0x06, 4	; 6
			sei();
 10e:	78 94       	sei
			
			//Calculate Vcc sample and store it in array
			Vcc_values[Vcc_values_index++] = 1230L * 1024 / ADC_result;
 110:	0f 2d       	mov	r16, r15
 112:	10 e0       	ldi	r17, 0x00	; 0
 114:	00 0f       	add	r16, r16
 116:	11 1f       	adc	r17, r17
 118:	0e 57       	subi	r16, 0x7E	; 126
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	d8 2f       	mov	r29, r24
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	9e 01       	movw	r18, r28
 122:	29 0f       	add	r18, r25
 124:	31 1d       	adc	r19, r1
 126:	40 e0       	ldi	r20, 0x00	; 0
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	78 e3       	ldi	r23, 0x38	; 56
 12e:	83 e1       	ldi	r24, 0x13	; 19
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 e6 04 	call	0x9cc	; 0x9cc <__divmodsi4>
 136:	f8 01       	movw	r30, r16
 138:	31 83       	std	Z+1, r19	; 0x01
 13a:	20 83       	st	Z, r18
 13c:	f3 94       	inc	r15
			
			//Circular buffer
			//If the end of array is reached, go back to the beginning
			if (Vcc_values_index == VCC_VALUES_SAMPLES)
 13e:	f0 e8       	ldi	r31, 0x80	; 128
 140:	ff 16       	cp	r15, r31
 142:	09 f4       	brne	.+2      	; 0x146 <main+0xb4>
 144:	ff 24       	eor	r15, r15
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e0       	ldi	r20, 0x00	; 0
 14e:	50 e0       	ldi	r21, 0x00	; 0
			
			//Calculate Vcc by averaging the samples
			Vcc_value_temp = 0;
			for (uint8_t i = 0; i < VCC_VALUES_SAMPLES; i++)
			{
				Vcc_value_temp += Vcc_values[i];
 150:	e6 2f       	mov	r30, r22
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	ee 0f       	add	r30, r30
 156:	ff 1f       	adc	r31, r31
 158:	ee 57       	subi	r30, 0x7E	; 126
 15a:	ff 4f       	sbci	r31, 0xFF	; 255
 15c:	80 81       	ld	r24, Z
 15e:	91 81       	ldd	r25, Z+1	; 0x01
 160:	a0 e0       	ldi	r26, 0x00	; 0
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	28 0f       	add	r18, r24
 166:	39 1f       	adc	r19, r25
 168:	4a 1f       	adc	r20, r26
 16a:	5b 1f       	adc	r21, r27
				Vcc_values_index = 0;
			}
			
			//Calculate Vcc by averaging the samples
			Vcc_value_temp = 0;
			for (uint8_t i = 0; i < VCC_VALUES_SAMPLES; i++)
 16c:	6f 5f       	subi	r22, 0xFF	; 255
 16e:	60 38       	cpi	r22, 0x80	; 128
 170:	79 f7       	brne	.-34     	; 0x150 <main+0xbe>
				Vcc_value_temp += Vcc_values[i];
			}
			Vcc_value_temp /= VCC_VALUES_SAMPLES;

			//Safe copy and set flag
			cli();
 172:	f8 94       	cli
			Vcc_value = (uint16_t)Vcc_value_temp;
 174:	87 e0       	ldi	r24, 0x07	; 7
 176:	56 95       	lsr	r21
 178:	47 95       	ror	r20
 17a:	37 95       	ror	r19
 17c:	27 95       	ror	r18
 17e:	8a 95       	dec	r24
 180:	d1 f7       	brne	.-12     	; 0x176 <main+0xe4>
 182:	30 93 6d 00 	sts	0x006D, r19
 186:	20 93 6c 00 	sts	0x006C, r18
			if (Vcc_values_index == 0) Vcc_value_valid = 1;
 18a:	ff 20       	and	r15, r15
 18c:	11 f4       	brne	.+4      	; 0x192 <main+0x100>
 18e:	b0 92 75 00 	sts	0x0075, r11
			sei();		
 192:	78 94       	sei
	    }

		//Menu button
		if (!(PINA & (1<<PA4)))
 194:	cc 99       	sbic	0x19, 4	; 25
 196:	15 c0       	rjmp	.+42     	; 0x1c2 <main+0x130>
		{
			//Safe menu option change
			cli();
 198:	f8 94       	cli
			menu_option++;
 19a:	80 91 76 00 	lds	r24, 0x0076
 19e:	8f 5f       	subi	r24, 0xFF	; 255
 1a0:	80 93 76 00 	sts	0x0076, r24
			if (menu_option == 8) menu_option = 0;
 1a4:	80 91 76 00 	lds	r24, 0x0076
 1a8:	88 30       	cpi	r24, 0x08	; 8
 1aa:	11 f4       	brne	.+4      	; 0x1b0 <main+0x11e>
 1ac:	10 92 76 00 	sts	0x0076, r1
			display_vcc_delay_counter = 1;
 1b0:	b0 92 65 00 	sts	0x0065, r11
			sei();
 1b4:	78 94       	sei

			//125 * 4ms = 500ms delay
			menu_button_delay_counter = 125;
 1b6:	70 92 77 00 	sts	0x0077, r7
			while (menu_button_delay_counter);
 1ba:	80 91 77 00 	lds	r24, 0x0077
 1be:	88 23       	and	r24, r24
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <main+0x128>
		}
		//H+ button
		if (!(PINA & (1<<PA0)))
 1c2:	c8 99       	sbic	0x19, 0	; 25
 1c4:	5b c0       	rjmp	.+182    	; 0x27c <main+0x1ea>
		{
			//Safe menu option change
			cli();
 1c6:	f8 94       	cli
			if (menu_option == 1)
 1c8:	80 91 76 00 	lds	r24, 0x0076
 1cc:	81 30       	cpi	r24, 0x01	; 1
 1ce:	69 f4       	brne	.+26     	; 0x1ea <main+0x158>
			{
				time_hour++;
 1d0:	80 91 78 00 	lds	r24, 0x0078
 1d4:	8f 5f       	subi	r24, 0xFF	; 255
 1d6:	80 93 78 00 	sts	0x0078, r24
				if (time_hour == 24) time_hour = 0;
 1da:	80 91 78 00 	lds	r24, 0x0078
 1de:	88 31       	cpi	r24, 0x18	; 24
 1e0:	09 f0       	breq	.+2      	; 0x1e4 <main+0x152>
 1e2:	45 c0       	rjmp	.+138    	; 0x26e <main+0x1dc>
 1e4:	10 92 78 00 	sts	0x0078, r1
 1e8:	42 c0       	rjmp	.+132    	; 0x26e <main+0x1dc>
			}
			else if (menu_option == 2)
 1ea:	80 91 76 00 	lds	r24, 0x0076
 1ee:	82 30       	cpi	r24, 0x02	; 2
 1f0:	61 f4       	brne	.+24     	; 0x20a <main+0x178>
			{
				watering_time_days++;
 1f2:	80 91 66 00 	lds	r24, 0x0066
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	80 93 66 00 	sts	0x0066, r24
				if (watering_time_days == 100) watering_time_days = 1;
 1fc:	80 91 66 00 	lds	r24, 0x0066
 200:	84 36       	cpi	r24, 0x64	; 100
 202:	a9 f5       	brne	.+106    	; 0x26e <main+0x1dc>
 204:	b0 92 66 00 	sts	0x0066, r11
 208:	32 c0       	rjmp	.+100    	; 0x26e <main+0x1dc>
			}
			else if (menu_option == 3)
 20a:	80 91 76 00 	lds	r24, 0x0076
 20e:	83 30       	cpi	r24, 0x03	; 3
 210:	79 f4       	brne	.+30     	; 0x230 <main+0x19e>
			{
				watering_duration_seconds++;
 212:	80 91 68 00 	lds	r24, 0x0068
 216:	8f 5f       	subi	r24, 0xFF	; 255
 218:	80 93 68 00 	sts	0x0068, r24
				if (watering_duration_seconds == 0) watering_duration_seconds++;
 21c:	80 91 68 00 	lds	r24, 0x0068
 220:	88 23       	and	r24, r24
 222:	29 f5       	brne	.+74     	; 0x26e <main+0x1dc>
 224:	80 91 68 00 	lds	r24, 0x0068
 228:	8f 5f       	subi	r24, 0xFF	; 255
 22a:	80 93 68 00 	sts	0x0068, r24
 22e:	1f c0       	rjmp	.+62     	; 0x26e <main+0x1dc>
			}
			else if (menu_option == 4)
 230:	80 91 76 00 	lds	r24, 0x0076
 234:	84 30       	cpi	r24, 0x04	; 4
 236:	61 f4       	brne	.+24     	; 0x250 <main+0x1be>
			{
				lamp_time_on_hour++;
 238:	80 91 69 00 	lds	r24, 0x0069
 23c:	8f 5f       	subi	r24, 0xFF	; 255
 23e:	80 93 69 00 	sts	0x0069, r24
				if (lamp_time_on_hour == 24) lamp_time_on_hour = 0;
 242:	80 91 69 00 	lds	r24, 0x0069
 246:	88 31       	cpi	r24, 0x18	; 24
 248:	91 f4       	brne	.+36     	; 0x26e <main+0x1dc>
 24a:	10 92 69 00 	sts	0x0069, r1
 24e:	0f c0       	rjmp	.+30     	; 0x26e <main+0x1dc>
			}
			else if (menu_option == 5)
 250:	80 91 76 00 	lds	r24, 0x0076
 254:	85 30       	cpi	r24, 0x05	; 5
 256:	59 f4       	brne	.+22     	; 0x26e <main+0x1dc>
			{
				lamp_time_off_hour++;
 258:	80 91 6a 00 	lds	r24, 0x006A
 25c:	8f 5f       	subi	r24, 0xFF	; 255
 25e:	80 93 6a 00 	sts	0x006A, r24
				if (lamp_time_off_hour == 24) lamp_time_off_hour = 0;
 262:	80 91 6a 00 	lds	r24, 0x006A
 266:	88 31       	cpi	r24, 0x18	; 24
 268:	11 f4       	brne	.+4      	; 0x26e <main+0x1dc>
 26a:	10 92 6a 00 	sts	0x006A, r1
			}
			sei();
 26e:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 270:	e0 92 77 00 	sts	0x0077, r14
			while (menu_button_delay_counter);
 274:	80 91 77 00 	lds	r24, 0x0077
 278:	88 23       	and	r24, r24
 27a:	e1 f7       	brne	.-8      	; 0x274 <main+0x1e2>
		}
		//H- button
		if (!(PINA & (1<<PA1)))
 27c:	c9 99       	sbic	0x19, 1	; 25
 27e:	58 c0       	rjmp	.+176    	; 0x330 <main+0x29e>
		{
			//Safe menu option change
			cli();
 280:	f8 94       	cli
			if (menu_option == 1)
 282:	80 91 76 00 	lds	r24, 0x0076
 286:	81 30       	cpi	r24, 0x01	; 1
 288:	69 f4       	brne	.+26     	; 0x2a4 <main+0x212>
			{
				time_hour--;
 28a:	80 91 78 00 	lds	r24, 0x0078
 28e:	81 50       	subi	r24, 0x01	; 1
 290:	80 93 78 00 	sts	0x0078, r24
				if (time_hour == 255) time_hour = 23;
 294:	80 91 78 00 	lds	r24, 0x0078
 298:	8f 3f       	cpi	r24, 0xFF	; 255
 29a:	09 f0       	breq	.+2      	; 0x29e <main+0x20c>
 29c:	42 c0       	rjmp	.+132    	; 0x322 <main+0x290>
 29e:	d0 92 78 00 	sts	0x0078, r13
 2a2:	3f c0       	rjmp	.+126    	; 0x322 <main+0x290>
			}
			else if (menu_option == 2)
 2a4:	80 91 76 00 	lds	r24, 0x0076
 2a8:	82 30       	cpi	r24, 0x02	; 2
 2aa:	61 f4       	brne	.+24     	; 0x2c4 <main+0x232>
			{
				watering_time_days--;
 2ac:	80 91 66 00 	lds	r24, 0x0066
 2b0:	81 50       	subi	r24, 0x01	; 1
 2b2:	80 93 66 00 	sts	0x0066, r24
				if (watering_time_days == 0) watering_time_days = 99;
 2b6:	80 91 66 00 	lds	r24, 0x0066
 2ba:	88 23       	and	r24, r24
 2bc:	91 f5       	brne	.+100    	; 0x322 <main+0x290>
 2be:	90 92 66 00 	sts	0x0066, r9
 2c2:	2f c0       	rjmp	.+94     	; 0x322 <main+0x290>
			}
			else if (menu_option == 3)
 2c4:	80 91 76 00 	lds	r24, 0x0076
 2c8:	83 30       	cpi	r24, 0x03	; 3
 2ca:	61 f4       	brne	.+24     	; 0x2e4 <main+0x252>
			{
				watering_duration_seconds--;
 2cc:	80 91 68 00 	lds	r24, 0x0068
 2d0:	81 50       	subi	r24, 0x01	; 1
 2d2:	80 93 68 00 	sts	0x0068, r24
				if (watering_duration_seconds == 0) watering_duration_seconds = 255;
 2d6:	80 91 68 00 	lds	r24, 0x0068
 2da:	88 23       	and	r24, r24
 2dc:	11 f5       	brne	.+68     	; 0x322 <main+0x290>
 2de:	a0 92 68 00 	sts	0x0068, r10
 2e2:	1f c0       	rjmp	.+62     	; 0x322 <main+0x290>
			}
			else if (menu_option == 4)
 2e4:	80 91 76 00 	lds	r24, 0x0076
 2e8:	84 30       	cpi	r24, 0x04	; 4
 2ea:	61 f4       	brne	.+24     	; 0x304 <main+0x272>
			{
				lamp_time_on_hour--;
 2ec:	80 91 69 00 	lds	r24, 0x0069
 2f0:	81 50       	subi	r24, 0x01	; 1
 2f2:	80 93 69 00 	sts	0x0069, r24
				if (lamp_time_on_hour == 255) lamp_time_on_hour = 23;
 2f6:	80 91 69 00 	lds	r24, 0x0069
 2fa:	8f 3f       	cpi	r24, 0xFF	; 255
 2fc:	91 f4       	brne	.+36     	; 0x322 <main+0x290>
 2fe:	d0 92 69 00 	sts	0x0069, r13
 302:	0f c0       	rjmp	.+30     	; 0x322 <main+0x290>
			}
			else if (menu_option == 5)
 304:	80 91 76 00 	lds	r24, 0x0076
 308:	85 30       	cpi	r24, 0x05	; 5
 30a:	59 f4       	brne	.+22     	; 0x322 <main+0x290>
			{
				lamp_time_off_hour--;
 30c:	80 91 6a 00 	lds	r24, 0x006A
 310:	81 50       	subi	r24, 0x01	; 1
 312:	80 93 6a 00 	sts	0x006A, r24
				if (lamp_time_off_hour == 255) lamp_time_off_hour = 23;
 316:	80 91 6a 00 	lds	r24, 0x006A
 31a:	8f 3f       	cpi	r24, 0xFF	; 255
 31c:	11 f4       	brne	.+4      	; 0x322 <main+0x290>
 31e:	d0 92 6a 00 	sts	0x006A, r13
			}
			sei();
 322:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 324:	e0 92 77 00 	sts	0x0077, r14
			while (menu_button_delay_counter);
 328:	80 91 77 00 	lds	r24, 0x0077
 32c:	88 23       	and	r24, r24
 32e:	e1 f7       	brne	.-8      	; 0x328 <main+0x296>
		}
		//M+ button
		if (!(PINA & (1<<PA2)))
 330:	ca 99       	sbic	0x19, 2	; 25
 332:	5b c0       	rjmp	.+182    	; 0x3ea <main+0x358>
		{
			//Safe menu option change
			cli();
 334:	f8 94       	cli
			if (menu_option == 1)
 336:	80 91 76 00 	lds	r24, 0x0076
 33a:	81 30       	cpi	r24, 0x01	; 1
 33c:	81 f4       	brne	.+32     	; 0x35e <main+0x2cc>
			{
				time_minute++;
 33e:	80 91 79 00 	lds	r24, 0x0079
 342:	8f 5f       	subi	r24, 0xFF	; 255
 344:	80 93 79 00 	sts	0x0079, r24
				if (time_minute == 60) time_minute = 0;
 348:	80 91 79 00 	lds	r24, 0x0079
 34c:	8c 33       	cpi	r24, 0x3C	; 60
 34e:	11 f4       	brne	.+4      	; 0x354 <main+0x2c2>
 350:	10 92 79 00 	sts	0x0079, r1
				time_second = 0;
 354:	10 92 7a 00 	sts	0x007A, r1
				time_4_milliseconds = 0;
 358:	10 92 7b 00 	sts	0x007B, r1
 35c:	3f c0       	rjmp	.+126    	; 0x3dc <main+0x34a>
			}
			else if (menu_option == 2)
 35e:	80 91 76 00 	lds	r24, 0x0076
 362:	82 30       	cpi	r24, 0x02	; 2
 364:	61 f4       	brne	.+24     	; 0x37e <main+0x2ec>
			{
				watering_time_hour++;
 366:	80 91 67 00 	lds	r24, 0x0067
 36a:	8f 5f       	subi	r24, 0xFF	; 255
 36c:	80 93 67 00 	sts	0x0067, r24
				if (watering_time_hour == 24) watering_time_hour = 0;
 370:	80 91 67 00 	lds	r24, 0x0067
 374:	88 31       	cpi	r24, 0x18	; 24
 376:	91 f5       	brne	.+100    	; 0x3dc <main+0x34a>
 378:	10 92 67 00 	sts	0x0067, r1
 37c:	2f c0       	rjmp	.+94     	; 0x3dc <main+0x34a>
			}
			else if (menu_option == 3)
 37e:	80 91 76 00 	lds	r24, 0x0076
 382:	83 30       	cpi	r24, 0x03	; 3
 384:	61 f4       	brne	.+24     	; 0x39e <main+0x30c>
			{
				watering_duration_second_tenths++;
 386:	80 91 7d 00 	lds	r24, 0x007D
 38a:	8f 5f       	subi	r24, 0xFF	; 255
 38c:	80 93 7d 00 	sts	0x007D, r24
				if (watering_duration_second_tenths == 10) watering_duration_second_tenths = 0;
 390:	80 91 7d 00 	lds	r24, 0x007D
 394:	8a 30       	cpi	r24, 0x0A	; 10
 396:	11 f5       	brne	.+68     	; 0x3dc <main+0x34a>
 398:	10 92 7d 00 	sts	0x007D, r1
 39c:	1f c0       	rjmp	.+62     	; 0x3dc <main+0x34a>
			}
			else if (menu_option == 4)
 39e:	80 91 76 00 	lds	r24, 0x0076
 3a2:	84 30       	cpi	r24, 0x04	; 4
 3a4:	61 f4       	brne	.+24     	; 0x3be <main+0x32c>
			{
				lamp_time_on_minute++;
 3a6:	80 91 80 00 	lds	r24, 0x0080
 3aa:	8f 5f       	subi	r24, 0xFF	; 255
 3ac:	80 93 80 00 	sts	0x0080, r24
				if (lamp_time_on_minute == 60) lamp_time_on_minute = 0;
 3b0:	80 91 80 00 	lds	r24, 0x0080
 3b4:	8c 33       	cpi	r24, 0x3C	; 60
 3b6:	91 f4       	brne	.+36     	; 0x3dc <main+0x34a>
 3b8:	10 92 80 00 	sts	0x0080, r1
 3bc:	0f c0       	rjmp	.+30     	; 0x3dc <main+0x34a>
			}
			else if (menu_option == 5)
 3be:	80 91 76 00 	lds	r24, 0x0076
 3c2:	85 30       	cpi	r24, 0x05	; 5
 3c4:	59 f4       	brne	.+22     	; 0x3dc <main+0x34a>
			{
				lamp_time_off_minute++;
 3c6:	80 91 81 00 	lds	r24, 0x0081
 3ca:	8f 5f       	subi	r24, 0xFF	; 255
 3cc:	80 93 81 00 	sts	0x0081, r24
				if (lamp_time_off_minute == 60) lamp_time_off_minute = 0;
 3d0:	80 91 81 00 	lds	r24, 0x0081
 3d4:	8c 33       	cpi	r24, 0x3C	; 60
 3d6:	11 f4       	brne	.+4      	; 0x3dc <main+0x34a>
 3d8:	10 92 81 00 	sts	0x0081, r1
			}
			sei();
 3dc:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 3de:	e0 92 77 00 	sts	0x0077, r14
			while (menu_button_delay_counter);
 3e2:	80 91 77 00 	lds	r24, 0x0077
 3e6:	88 23       	and	r24, r24
 3e8:	e1 f7       	brne	.-8      	; 0x3e2 <main+0x350>
		}
		//M- button
		if (!(PINA & (1<<PA3)))
 3ea:	cb 99       	sbic	0x19, 3	; 25
 3ec:	8a ce       	rjmp	.-748    	; 0x102 <main+0x70>
		{
			//Safe menu option change
			cli();
 3ee:	f8 94       	cli
			if (menu_option == 1)
 3f0:	80 91 76 00 	lds	r24, 0x0076
 3f4:	81 30       	cpi	r24, 0x01	; 1
 3f6:	81 f4       	brne	.+32     	; 0x418 <main+0x386>
			{
				time_minute--;
 3f8:	80 91 79 00 	lds	r24, 0x0079
 3fc:	81 50       	subi	r24, 0x01	; 1
 3fe:	80 93 79 00 	sts	0x0079, r24
				if (time_minute == 255) time_minute = 59;
 402:	80 91 79 00 	lds	r24, 0x0079
 406:	8f 3f       	cpi	r24, 0xFF	; 255
 408:	11 f4       	brne	.+4      	; 0x40e <main+0x37c>
 40a:	c0 92 79 00 	sts	0x0079, r12
				time_second = 0;
 40e:	10 92 7a 00 	sts	0x007A, r1
				time_4_milliseconds = 0;
 412:	10 92 7b 00 	sts	0x007B, r1
 416:	3f c0       	rjmp	.+126    	; 0x496 <main+0x404>
			}
			else if (menu_option == 2)
 418:	80 91 76 00 	lds	r24, 0x0076
 41c:	82 30       	cpi	r24, 0x02	; 2
 41e:	61 f4       	brne	.+24     	; 0x438 <main+0x3a6>
			{
				watering_time_hour--;
 420:	80 91 67 00 	lds	r24, 0x0067
 424:	81 50       	subi	r24, 0x01	; 1
 426:	80 93 67 00 	sts	0x0067, r24
				if (watering_time_hour == 255) watering_time_hour = 23;
 42a:	80 91 67 00 	lds	r24, 0x0067
 42e:	8f 3f       	cpi	r24, 0xFF	; 255
 430:	91 f5       	brne	.+100    	; 0x496 <main+0x404>
 432:	d0 92 67 00 	sts	0x0067, r13
 436:	2f c0       	rjmp	.+94     	; 0x496 <main+0x404>
			}
			else if (menu_option == 3)
 438:	80 91 76 00 	lds	r24, 0x0076
 43c:	83 30       	cpi	r24, 0x03	; 3
 43e:	61 f4       	brne	.+24     	; 0x458 <main+0x3c6>
			{
				watering_duration_second_tenths--;
 440:	80 91 7d 00 	lds	r24, 0x007D
 444:	81 50       	subi	r24, 0x01	; 1
 446:	80 93 7d 00 	sts	0x007D, r24
				if (watering_duration_second_tenths == 255) watering_duration_second_tenths = 9;
 44a:	80 91 7d 00 	lds	r24, 0x007D
 44e:	8f 3f       	cpi	r24, 0xFF	; 255
 450:	11 f5       	brne	.+68     	; 0x496 <main+0x404>
 452:	80 92 7d 00 	sts	0x007D, r8
 456:	1f c0       	rjmp	.+62     	; 0x496 <main+0x404>
			}
			else if (menu_option == 4)
 458:	80 91 76 00 	lds	r24, 0x0076
 45c:	84 30       	cpi	r24, 0x04	; 4
 45e:	61 f4       	brne	.+24     	; 0x478 <main+0x3e6>
			{
				lamp_time_on_minute--;
 460:	80 91 80 00 	lds	r24, 0x0080
 464:	81 50       	subi	r24, 0x01	; 1
 466:	80 93 80 00 	sts	0x0080, r24
				if (lamp_time_on_minute == 255) lamp_time_on_minute = 59;
 46a:	80 91 80 00 	lds	r24, 0x0080
 46e:	8f 3f       	cpi	r24, 0xFF	; 255
 470:	91 f4       	brne	.+36     	; 0x496 <main+0x404>
 472:	c0 92 80 00 	sts	0x0080, r12
 476:	0f c0       	rjmp	.+30     	; 0x496 <main+0x404>
			}
			else if (menu_option == 5)
 478:	80 91 76 00 	lds	r24, 0x0076
 47c:	85 30       	cpi	r24, 0x05	; 5
 47e:	59 f4       	brne	.+22     	; 0x496 <main+0x404>
			{
				lamp_time_off_minute--;
 480:	80 91 81 00 	lds	r24, 0x0081
 484:	81 50       	subi	r24, 0x01	; 1
 486:	80 93 81 00 	sts	0x0081, r24
				if (lamp_time_off_minute == 255) lamp_time_off_minute = 59;
 48a:	80 91 81 00 	lds	r24, 0x0081
 48e:	8f 3f       	cpi	r24, 0xFF	; 255
 490:	11 f4       	brne	.+4      	; 0x496 <main+0x404>
 492:	c0 92 81 00 	sts	0x0081, r12
			}
			sei();
 496:	78 94       	sei

			//50 * 4ms = 200ms delay
			menu_button_delay_counter = 50;
 498:	e0 92 77 00 	sts	0x0077, r14
			while (menu_button_delay_counter);
 49c:	80 91 77 00 	lds	r24, 0x0077
 4a0:	88 23       	and	r24, r24
 4a2:	e1 f7       	brne	.-8      	; 0x49c <main+0x40a>
 4a4:	2e ce       	rjmp	.-932    	; 0x102 <main+0x70>

000004a6 <__vector_11>:
	}
}

//250Hz interrupt
ISR(TIMER0_OVF_vect)
{
 4a6:	1f 92       	push	r1
 4a8:	0f 92       	push	r0
 4aa:	0f b6       	in	r0, 0x3f	; 63
 4ac:	0f 92       	push	r0
 4ae:	11 24       	eor	r1, r1
 4b0:	2f 93       	push	r18
 4b2:	3f 93       	push	r19
 4b4:	4f 93       	push	r20
 4b6:	5f 93       	push	r21
 4b8:	6f 93       	push	r22
 4ba:	7f 93       	push	r23
 4bc:	8f 93       	push	r24
 4be:	9f 93       	push	r25
 4c0:	af 93       	push	r26
 4c2:	bf 93       	push	r27
	//7-segment display - turn off
	DISPLAY_DIGIT_NONE;
 4c4:	85 b3       	in	r24, 0x15	; 21
 4c6:	80 7f       	andi	r24, 0xF0	; 240
 4c8:	85 bb       	out	0x15, r24	; 21

	//Menu display handling
	if (menu_option == 0)
 4ca:	80 91 76 00 	lds	r24, 0x0076
 4ce:	88 23       	and	r24, r24
 4d0:	f1 f5       	brne	.+124    	; 0x54e <__vector_11+0xa8>

//Menu display functions

inline void display_vcc()
{
	display_vcc_delay_counter--;	
 4d2:	80 91 65 00 	lds	r24, 0x0065
 4d6:	81 50       	subi	r24, 0x01	; 1
 4d8:	80 93 65 00 	sts	0x0065, r24
	if (display_vcc_delay_counter == 0)
 4dc:	80 91 65 00 	lds	r24, 0x0065
 4e0:	88 23       	and	r24, r24
 4e2:	09 f0       	breq	.+2      	; 0x4e6 <__vector_11+0x40>
 4e4:	d6 c0       	rjmp	.+428    	; 0x692 <__vector_11+0x1ec>
	{
		display_1 = 10;
 4e6:	8a e0       	ldi	r24, 0x0A	; 10
 4e8:	80 93 61 00 	sts	0x0061, r24
		display_2 = Vcc_value / 1000 % 10;
 4ec:	80 91 6c 00 	lds	r24, 0x006C
 4f0:	90 91 6d 00 	lds	r25, 0x006D
 4f4:	68 ee       	ldi	r22, 0xE8	; 232
 4f6:	73 e0       	ldi	r23, 0x03	; 3
 4f8:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__udivmodhi4>
 4fc:	cb 01       	movw	r24, r22
 4fe:	6a e0       	ldi	r22, 0x0A	; 10
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__udivmodhi4>
 506:	80 93 62 00 	sts	0x0062, r24
		display_3 = Vcc_value / 100 % 10;
 50a:	80 91 6c 00 	lds	r24, 0x006C
 50e:	90 91 6d 00 	lds	r25, 0x006D
 512:	64 e6       	ldi	r22, 0x64	; 100
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__udivmodhi4>
 51a:	cb 01       	movw	r24, r22
 51c:	6a e0       	ldi	r22, 0x0A	; 10
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__udivmodhi4>
 524:	80 93 63 00 	sts	0x0063, r24
		display_4 = Vcc_value  / 10 % 10;
 528:	80 91 6c 00 	lds	r24, 0x006C
 52c:	90 91 6d 00 	lds	r25, 0x006D
 530:	6a e0       	ldi	r22, 0x0A	; 10
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__udivmodhi4>
 538:	cb 01       	movw	r24, r22
 53a:	6a e0       	ldi	r22, 0x0A	; 10
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__udivmodhi4>
 542:	80 93 64 00 	sts	0x0064, r24

		//125 * 4ms = 500ms delay
		display_vcc_delay_counter = 125;
 546:	8d e7       	ldi	r24, 0x7D	; 125
 548:	80 93 65 00 	sts	0x0065, r24
 54c:	a2 c0       	rjmp	.+324    	; 0x692 <__vector_11+0x1ec>
	//Menu display handling
	if (menu_option == 0)
	{
		display_vcc();
	}
	else if (menu_option == 1)
 54e:	80 91 76 00 	lds	r24, 0x0076
 552:	81 30       	cpi	r24, 0x01	; 1
 554:	09 f4       	brne	.+2      	; 0x558 <__vector_11+0xb2>
 556:	81 c0       	rjmp	.+258    	; 0x65a <__vector_11+0x1b4>
	{
		display_time();
	}
	else if (menu_option == 2)
 558:	80 91 76 00 	lds	r24, 0x0076
 55c:	82 30       	cpi	r24, 0x02	; 2
 55e:	d1 f4       	brne	.+52     	; 0x594 <__vector_11+0xee>
	display_4 = time_minute % 10;
}

inline void display_watering_time_setting()
{
	display_1 = watering_time_days / 10 % 10;
 560:	80 91 66 00 	lds	r24, 0x0066
 564:	6a e0       	ldi	r22, 0x0A	; 10
 566:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 56a:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 56e:	90 93 61 00 	sts	0x0061, r25
	display_2 = watering_time_days % 10;
 572:	80 91 66 00 	lds	r24, 0x0066
 576:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 57a:	90 93 62 00 	sts	0x0062, r25
	display_3 = watering_time_hour / 10 % 10;
 57e:	80 91 67 00 	lds	r24, 0x0067
 582:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 586:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 58a:	90 93 63 00 	sts	0x0063, r25
	display_4 = watering_time_hour % 10;
 58e:	80 91 67 00 	lds	r24, 0x0067
 592:	5a c0       	rjmp	.+180    	; 0x648 <__vector_11+0x1a2>
	}
	else if (menu_option == 2)
	{
		display_watering_time_setting();
	}
	else if (menu_option == 3)
 594:	80 91 76 00 	lds	r24, 0x0076
 598:	83 30       	cpi	r24, 0x03	; 3
 59a:	d9 f4       	brne	.+54     	; 0x5d2 <__vector_11+0x12c>
	display_4 = watering_time_hour % 10;
}

inline void display_watering_duration_setting()
{
	display_1 = watering_duration_seconds / 100 % 10;
 59c:	80 91 68 00 	lds	r24, 0x0068
 5a0:	64 e6       	ldi	r22, 0x64	; 100
 5a2:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5a6:	6a e0       	ldi	r22, 0x0A	; 10
 5a8:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5ac:	90 93 61 00 	sts	0x0061, r25
	display_2 = watering_duration_seconds / 10 % 10;
 5b0:	80 91 68 00 	lds	r24, 0x0068
 5b4:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5b8:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5bc:	90 93 62 00 	sts	0x0062, r25
	display_3 = watering_duration_seconds % 10;
 5c0:	80 91 68 00 	lds	r24, 0x0068
 5c4:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5c8:	90 93 63 00 	sts	0x0063, r25
	display_4 = watering_duration_second_tenths % 10;
 5cc:	80 91 7d 00 	lds	r24, 0x007D
 5d0:	3b c0       	rjmp	.+118    	; 0x648 <__vector_11+0x1a2>
	}
	else if (menu_option == 3)
	{
		display_watering_duration_setting();
	}
	else if (menu_option == 4)
 5d2:	80 91 76 00 	lds	r24, 0x0076
 5d6:	84 30       	cpi	r24, 0x04	; 4
 5d8:	d1 f4       	brne	.+52     	; 0x60e <__vector_11+0x168>
	display_4 = watering_duration_second_tenths % 10;
}

inline void display_lamp_time_on()
{
	display_1 = lamp_time_on_hour / 10 % 10;
 5da:	80 91 69 00 	lds	r24, 0x0069
 5de:	6a e0       	ldi	r22, 0x0A	; 10
 5e0:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5e4:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5e8:	90 93 61 00 	sts	0x0061, r25
	display_2 = lamp_time_on_hour % 10;
 5ec:	80 91 69 00 	lds	r24, 0x0069
 5f0:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 5f4:	90 93 62 00 	sts	0x0062, r25
	display_3 = lamp_time_on_minute / 10 % 10;
 5f8:	80 91 80 00 	lds	r24, 0x0080
 5fc:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 600:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 604:	90 93 63 00 	sts	0x0063, r25
	display_4 = lamp_time_on_minute % 10;
 608:	80 91 80 00 	lds	r24, 0x0080
 60c:	1d c0       	rjmp	.+58     	; 0x648 <__vector_11+0x1a2>
	}
	else if (menu_option == 4)
	{
		display_lamp_time_on();
	}
	else if (menu_option == 5)
 60e:	80 91 76 00 	lds	r24, 0x0076
 612:	85 30       	cpi	r24, 0x05	; 5
 614:	f1 f4       	brne	.+60     	; 0x652 <__vector_11+0x1ac>
	display_4 = lamp_time_on_minute % 10;
}

inline void display_lamp_time_off()
{
	display_1 = lamp_time_off_hour / 10 % 10;
 616:	80 91 6a 00 	lds	r24, 0x006A
 61a:	6a e0       	ldi	r22, 0x0A	; 10
 61c:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 620:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 624:	90 93 61 00 	sts	0x0061, r25
	display_2 = lamp_time_off_hour % 10;
 628:	80 91 6a 00 	lds	r24, 0x006A
 62c:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 630:	90 93 62 00 	sts	0x0062, r25
	display_3 = lamp_time_off_minute / 10 % 10;
 634:	80 91 81 00 	lds	r24, 0x0081
 638:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 63c:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 640:	90 93 63 00 	sts	0x0063, r25
	display_4 = lamp_time_off_minute % 10;
 644:	80 91 81 00 	lds	r24, 0x0081
 648:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 64c:	90 93 64 00 	sts	0x0064, r25
 650:	20 c0       	rjmp	.+64     	; 0x692 <__vector_11+0x1ec>
	}
	else if (menu_option == 5)
	{
		display_lamp_time_off();
	}
	else if (menu_option == 6)
 652:	80 91 76 00 	lds	r24, 0x0076
 656:	86 30       	cpi	r24, 0x06	; 6
 658:	d1 f4       	brne	.+52     	; 0x68e <__vector_11+0x1e8>
	}
}

inline void display_time()
{
	display_1 = time_hour / 10 % 10;
 65a:	80 91 78 00 	lds	r24, 0x0078
 65e:	6a e0       	ldi	r22, 0x0A	; 10
 660:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 664:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 668:	90 93 61 00 	sts	0x0061, r25
	display_2 = time_hour % 10;
 66c:	80 91 78 00 	lds	r24, 0x0078
 670:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 674:	90 93 62 00 	sts	0x0062, r25
	display_3 = time_minute / 10 % 10;
 678:	80 91 79 00 	lds	r24, 0x0079
 67c:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 680:	0e 94 c6 04 	call	0x98c	; 0x98c <__udivmodqi4>
 684:	90 93 63 00 	sts	0x0063, r25
	display_4 = time_minute % 10;
 688:	80 91 79 00 	lds	r24, 0x0079
 68c:	dd cf       	rjmp	.-70     	; 0x648 <__vector_11+0x1a2>
	}
	else if (menu_option == 6)
	{
		display_time();
	}
	else if (menu_option == 7)
 68e:	80 91 76 00 	lds	r24, 0x0076

//7-segment display functions

inline uint8_t display_digit()
{
	if (display_n == 1) return display_1;
 692:	80 91 60 00 	lds	r24, 0x0060
 696:	81 30       	cpi	r24, 0x01	; 1
 698:	19 f4       	brne	.+6      	; 0x6a0 <__vector_11+0x1fa>
 69a:	80 91 61 00 	lds	r24, 0x0061
 69e:	14 c0       	rjmp	.+40     	; 0x6c8 <__vector_11+0x222>
	if (display_n == 2) return display_2;
 6a0:	80 91 60 00 	lds	r24, 0x0060
 6a4:	82 30       	cpi	r24, 0x02	; 2
 6a6:	19 f4       	brne	.+6      	; 0x6ae <__vector_11+0x208>
 6a8:	80 91 62 00 	lds	r24, 0x0062
 6ac:	0d c0       	rjmp	.+26     	; 0x6c8 <__vector_11+0x222>
	if (display_n == 3) return display_3;
 6ae:	80 91 60 00 	lds	r24, 0x0060
 6b2:	83 30       	cpi	r24, 0x03	; 3
 6b4:	19 f4       	brne	.+6      	; 0x6bc <__vector_11+0x216>
 6b6:	80 91 63 00 	lds	r24, 0x0063
 6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <__vector_11+0x222>
	if (display_n == 4) return display_4;
 6bc:	80 91 60 00 	lds	r24, 0x0060
 6c0:	84 30       	cpi	r24, 0x04	; 4
 6c2:	51 f5       	brne	.+84     	; 0x718 <__vector_11+0x272>
 6c4:	80 91 64 00 	lds	r24, 0x0064
	return 10;
}

inline void display(uint8_t digit)
{
	if (digit == 0) DISPLAY_0;
 6c8:	88 23       	and	r24, r24
 6ca:	11 f4       	brne	.+4      	; 0x6d0 <__vector_11+0x22a>
 6cc:	84 e1       	ldi	r24, 0x14	; 20
 6ce:	25 c0       	rjmp	.+74     	; 0x71a <__vector_11+0x274>
	else if (digit == 1) DISPLAY_1;
 6d0:	81 30       	cpi	r24, 0x01	; 1
 6d2:	11 f4       	brne	.+4      	; 0x6d8 <__vector_11+0x232>
 6d4:	87 e7       	ldi	r24, 0x77	; 119
 6d6:	21 c0       	rjmp	.+66     	; 0x71a <__vector_11+0x274>
	else if (digit == 2) DISPLAY_2;
 6d8:	82 30       	cpi	r24, 0x02	; 2
 6da:	11 f4       	brne	.+4      	; 0x6e0 <__vector_11+0x23a>
 6dc:	8c e4       	ldi	r24, 0x4C	; 76
 6de:	1d c0       	rjmp	.+58     	; 0x71a <__vector_11+0x274>
	else if (digit == 3) DISPLAY_3;
 6e0:	83 30       	cpi	r24, 0x03	; 3
 6e2:	11 f4       	brne	.+4      	; 0x6e8 <__vector_11+0x242>
 6e4:	85 e4       	ldi	r24, 0x45	; 69
 6e6:	19 c0       	rjmp	.+50     	; 0x71a <__vector_11+0x274>
	else if (digit == 4) DISPLAY_4;
 6e8:	84 30       	cpi	r24, 0x04	; 4
 6ea:	11 f4       	brne	.+4      	; 0x6f0 <__vector_11+0x24a>
 6ec:	87 e2       	ldi	r24, 0x27	; 39
 6ee:	15 c0       	rjmp	.+42     	; 0x71a <__vector_11+0x274>
	else if (digit == 5) DISPLAY_5;
 6f0:	85 30       	cpi	r24, 0x05	; 5
 6f2:	11 f4       	brne	.+4      	; 0x6f8 <__vector_11+0x252>
 6f4:	85 e8       	ldi	r24, 0x85	; 133
 6f6:	11 c0       	rjmp	.+34     	; 0x71a <__vector_11+0x274>
	else if (digit == 6) DISPLAY_6;
 6f8:	86 30       	cpi	r24, 0x06	; 6
 6fa:	11 f4       	brne	.+4      	; 0x700 <__vector_11+0x25a>
 6fc:	84 e8       	ldi	r24, 0x84	; 132
 6fe:	0d c0       	rjmp	.+26     	; 0x71a <__vector_11+0x274>
	else if (digit == 7) DISPLAY_7;
 700:	87 30       	cpi	r24, 0x07	; 7
 702:	11 f4       	brne	.+4      	; 0x708 <__vector_11+0x262>
 704:	87 e5       	ldi	r24, 0x57	; 87
 706:	09 c0       	rjmp	.+18     	; 0x71a <__vector_11+0x274>
	else if (digit == 8) DISPLAY_8;
 708:	88 30       	cpi	r24, 0x08	; 8
 70a:	11 f4       	brne	.+4      	; 0x710 <__vector_11+0x26a>
 70c:	84 e0       	ldi	r24, 0x04	; 4
 70e:	05 c0       	rjmp	.+10     	; 0x71a <__vector_11+0x274>
	else if (digit == 9) DISPLAY_9;
 710:	89 30       	cpi	r24, 0x09	; 9
 712:	11 f4       	brne	.+4      	; 0x718 <__vector_11+0x272>
 714:	85 e0       	ldi	r24, 0x05	; 5
 716:	01 c0       	rjmp	.+2      	; 0x71a <__vector_11+0x274>
	else DISPLAY_CLEAR;
 718:	8f ef       	ldi	r24, 0xFF	; 255
 71a:	82 bb       	out	0x12, r24	; 18

	//7-segment display - set digit
	display(display_digit());
	
	//Display dot according to the selected menu option
	if (menu_option == 0)
 71c:	80 91 76 00 	lds	r24, 0x0076
 720:	88 23       	and	r24, r24
 722:	29 f4       	brne	.+10     	; 0x72e <__vector_11+0x288>
	{
		if (display_n == 1) DISPLAY_SHOW_DOT;
 724:	80 91 60 00 	lds	r24, 0x0060
 728:	81 30       	cpi	r24, 0x01	; 1
 72a:	39 f5       	brne	.+78     	; 0x77a <__vector_11+0x2d4>
 72c:	25 c0       	rjmp	.+74     	; 0x778 <__vector_11+0x2d2>
	}
	else if (menu_option == 1)
 72e:	80 91 76 00 	lds	r24, 0x0076
 732:	81 30       	cpi	r24, 0x01	; 1
 734:	e9 f0       	breq	.+58     	; 0x770 <__vector_11+0x2ca>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 2)
 736:	80 91 76 00 	lds	r24, 0x0076
 73a:	82 30       	cpi	r24, 0x02	; 2
 73c:	f1 f0       	breq	.+60     	; 0x77a <__vector_11+0x2d4>
	{
		//No dot
	}
	else if (menu_option == 3)
 73e:	80 91 76 00 	lds	r24, 0x0076
 742:	83 30       	cpi	r24, 0x03	; 3
 744:	29 f4       	brne	.+10     	; 0x750 <__vector_11+0x2aa>
	{
		if (display_n == 3) DISPLAY_SHOW_DOT;
 746:	80 91 60 00 	lds	r24, 0x0060
 74a:	83 30       	cpi	r24, 0x03	; 3
 74c:	b1 f4       	brne	.+44     	; 0x77a <__vector_11+0x2d4>
 74e:	14 c0       	rjmp	.+40     	; 0x778 <__vector_11+0x2d2>
	}
	else if (menu_option == 4)
 750:	80 91 76 00 	lds	r24, 0x0076
 754:	84 30       	cpi	r24, 0x04	; 4
 756:	61 f0       	breq	.+24     	; 0x770 <__vector_11+0x2ca>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 5)
 758:	80 91 76 00 	lds	r24, 0x0076
 75c:	85 30       	cpi	r24, 0x05	; 5
 75e:	41 f0       	breq	.+16     	; 0x770 <__vector_11+0x2ca>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 6)
 760:	80 91 76 00 	lds	r24, 0x0076
 764:	86 30       	cpi	r24, 0x06	; 6
 766:	21 f0       	breq	.+8      	; 0x770 <__vector_11+0x2ca>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
	}
	else if (menu_option == 7)
 768:	80 91 76 00 	lds	r24, 0x0076
 76c:	87 30       	cpi	r24, 0x07	; 7
 76e:	29 f4       	brne	.+10     	; 0x77a <__vector_11+0x2d4>
	{
		if (display_n == 2) DISPLAY_SHOW_DOT;
 770:	80 91 60 00 	lds	r24, 0x0060
 774:	82 30       	cpi	r24, 0x02	; 2
 776:	09 f4       	brne	.+2      	; 0x77a <__vector_11+0x2d4>
 778:	92 98       	cbi	0x12, 2	; 18
	}

	//7-segment display - turn on digit
	if      (display_n == 1) DISPLAY_DIGIT1;
 77a:	80 91 60 00 	lds	r24, 0x0060
 77e:	81 30       	cpi	r24, 0x01	; 1
 780:	11 f4       	brne	.+4      	; 0x786 <__vector_11+0x2e0>
 782:	ab 9a       	sbi	0x15, 3	; 21
 784:	11 c0       	rjmp	.+34     	; 0x7a8 <__vector_11+0x302>
	else if (display_n == 2) DISPLAY_DIGIT2;
 786:	80 91 60 00 	lds	r24, 0x0060
 78a:	82 30       	cpi	r24, 0x02	; 2
 78c:	11 f4       	brne	.+4      	; 0x792 <__vector_11+0x2ec>
 78e:	aa 9a       	sbi	0x15, 2	; 21
 790:	0b c0       	rjmp	.+22     	; 0x7a8 <__vector_11+0x302>
	else if (display_n == 3) DISPLAY_DIGIT3;
 792:	80 91 60 00 	lds	r24, 0x0060
 796:	83 30       	cpi	r24, 0x03	; 3
 798:	11 f4       	brne	.+4      	; 0x79e <__vector_11+0x2f8>
 79a:	a9 9a       	sbi	0x15, 1	; 21
 79c:	05 c0       	rjmp	.+10     	; 0x7a8 <__vector_11+0x302>
	else if (display_n == 4) DISPLAY_DIGIT4;
 79e:	80 91 60 00 	lds	r24, 0x0060
 7a2:	84 30       	cpi	r24, 0x04	; 4
 7a4:	09 f4       	brne	.+2      	; 0x7a8 <__vector_11+0x302>
 7a6:	a8 9a       	sbi	0x15, 0	; 21

	//7-segment display - move to next digit
	display_n++;
 7a8:	80 91 60 00 	lds	r24, 0x0060
 7ac:	8f 5f       	subi	r24, 0xFF	; 255
 7ae:	80 93 60 00 	sts	0x0060, r24
	if (display_n == 5) display_n = 1;
 7b2:	80 91 60 00 	lds	r24, 0x0060
 7b6:	85 30       	cpi	r24, 0x05	; 5
 7b8:	19 f4       	brne	.+6      	; 0x7c0 <__vector_11+0x31a>
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	80 93 60 00 	sts	0x0060, r24
	
	//Decrement delay counter if it's greater than zero
	if (menu_button_delay_counter) menu_button_delay_counter--;
 7c0:	80 91 77 00 	lds	r24, 0x0077
 7c4:	88 23       	and	r24, r24
 7c6:	29 f0       	breq	.+10     	; 0x7d2 <__vector_11+0x32c>
 7c8:	80 91 77 00 	lds	r24, 0x0077
 7cc:	81 50       	subi	r24, 0x01	; 1
 7ce:	80 93 77 00 	sts	0x0077, r24

	//Menu option LEDs
	if (menu_option == 0)
 7d2:	80 91 76 00 	lds	r24, 0x0076
 7d6:	88 23       	and	r24, r24
 7d8:	11 f4       	brne	.+4      	; 0x7de <__vector_11+0x338>
	{
		LED2_OFF;
 7da:	ac 98       	cbi	0x15, 4	; 21
 7dc:	19 c0       	rjmp	.+50     	; 0x810 <__vector_11+0x36a>
		LED1_OFF;
		LED0_OFF;
	}
	else if (menu_option == 1)
 7de:	80 91 76 00 	lds	r24, 0x0076
 7e2:	81 30       	cpi	r24, 0x01	; 1
 7e4:	11 f4       	brne	.+4      	; 0x7ea <__vector_11+0x344>
	{
		LED2_OFF;
 7e6:	ac 98       	cbi	0x15, 4	; 21
 7e8:	1a c0       	rjmp	.+52     	; 0x81e <__vector_11+0x378>
		LED1_OFF;
		LED0_ON;
	}
	else if (menu_option == 2)
 7ea:	80 91 76 00 	lds	r24, 0x0076
 7ee:	82 30       	cpi	r24, 0x02	; 2
 7f0:	21 f4       	brne	.+8      	; 0x7fa <__vector_11+0x354>
	{
		LED2_OFF;
 7f2:	ac 98       	cbi	0x15, 4	; 21
		LED1_ON;
 7f4:	ad 9a       	sbi	0x15, 5	; 21
		LED0_OFF;
 7f6:	ae 98       	cbi	0x15, 6	; 21
 7f8:	1d c0       	rjmp	.+58     	; 0x834 <__vector_11+0x38e>
	}
	else if (menu_option == 3)
 7fa:	80 91 76 00 	lds	r24, 0x0076
 7fe:	83 30       	cpi	r24, 0x03	; 3
 800:	11 f4       	brne	.+4      	; 0x806 <__vector_11+0x360>
	{
		LED2_OFF;
 802:	ac 98       	cbi	0x15, 4	; 21
 804:	15 c0       	rjmp	.+42     	; 0x830 <__vector_11+0x38a>
		LED1_ON;
		LED0_ON;
	}
	else if (menu_option == 4)
 806:	80 91 76 00 	lds	r24, 0x0076
 80a:	84 30       	cpi	r24, 0x04	; 4
 80c:	19 f4       	brne	.+6      	; 0x814 <__vector_11+0x36e>
	{
		LED2_ON;
 80e:	ac 9a       	sbi	0x15, 4	; 21
		LED1_OFF;
 810:	ad 98       	cbi	0x15, 5	; 21
 812:	f1 cf       	rjmp	.-30     	; 0x7f6 <__vector_11+0x350>
		LED0_OFF;
	}
	else if (menu_option == 5)
 814:	80 91 76 00 	lds	r24, 0x0076
 818:	85 30       	cpi	r24, 0x05	; 5
 81a:	19 f4       	brne	.+6      	; 0x822 <__vector_11+0x37c>
	{
		LED2_ON;
 81c:	ac 9a       	sbi	0x15, 4	; 21
		LED1_OFF;
 81e:	ad 98       	cbi	0x15, 5	; 21
 820:	08 c0       	rjmp	.+16     	; 0x832 <__vector_11+0x38c>
		LED0_ON;
	}
	else if (menu_option == 6)
 822:	80 91 76 00 	lds	r24, 0x0076
 826:	86 30       	cpi	r24, 0x06	; 6
 828:	11 f4       	brne	.+4      	; 0x82e <__vector_11+0x388>
	{
		LED2_ON;
 82a:	ac 9a       	sbi	0x15, 4	; 21
 82c:	e3 cf       	rjmp	.-58     	; 0x7f4 <__vector_11+0x34e>
		LED1_ON;
		LED0_OFF;
	}
	else
	{
		LED2_ON;
 82e:	ac 9a       	sbi	0x15, 4	; 21
		LED1_ON;
 830:	ad 9a       	sbi	0x15, 5	; 21
		LED0_ON;
 832:	ae 9a       	sbi	0x15, 6	; 21
	}

	//Timekeeping
	time_4_milliseconds++;
 834:	80 91 7b 00 	lds	r24, 0x007B
 838:	8f 5f       	subi	r24, 0xFF	; 255
 83a:	80 93 7b 00 	sts	0x007B, r24
	if (time_4_milliseconds == 250)
 83e:	80 91 7b 00 	lds	r24, 0x007B
 842:	8a 3f       	cpi	r24, 0xFA	; 250
 844:	09 f0       	breq	.+2      	; 0x848 <__vector_11+0x3a2>
 846:	4b c0       	rjmp	.+150    	; 0x8de <__stack+0x7f>
	{
		time_4_milliseconds = 0;
 848:	10 92 7b 00 	sts	0x007B, r1
		time_second++;
 84c:	80 91 7a 00 	lds	r24, 0x007A
 850:	8f 5f       	subi	r24, 0xFF	; 255
 852:	80 93 7a 00 	sts	0x007A, r24
		if (time_second == 60)
 856:	80 91 7a 00 	lds	r24, 0x007A
 85a:	8c 33       	cpi	r24, 0x3C	; 60
 85c:	09 f0       	breq	.+2      	; 0x860 <__stack+0x1>
 85e:	3f c0       	rjmp	.+126    	; 0x8de <__stack+0x7f>
		{
			time_second = 0;
 860:	10 92 7a 00 	sts	0x007A, r1
			time_minute++;
 864:	80 91 79 00 	lds	r24, 0x0079
 868:	8f 5f       	subi	r24, 0xFF	; 255
 86a:	80 93 79 00 	sts	0x0079, r24
			if (time_minute == 60)
 86e:	80 91 79 00 	lds	r24, 0x0079
 872:	8c 33       	cpi	r24, 0x3C	; 60
 874:	a1 f5       	brne	.+104    	; 0x8de <__stack+0x7f>
			{
				time_minute = 0;
 876:	10 92 79 00 	sts	0x0079, r1
				time_hour++;
 87a:	80 91 78 00 	lds	r24, 0x0078
 87e:	8f 5f       	subi	r24, 0xFF	; 255
 880:	80 93 78 00 	sts	0x0078, r24
				if (time_hour == 24)
 884:	80 91 78 00 	lds	r24, 0x0078
 888:	88 31       	cpi	r24, 0x18	; 24
 88a:	39 f4       	brne	.+14     	; 0x89a <__stack+0x3b>
				{
					time_hour = 0;
 88c:	10 92 78 00 	sts	0x0078, r1

					watering_days_passed++;
 890:	80 91 7c 00 	lds	r24, 0x007C
 894:	8f 5f       	subi	r24, 0xFF	; 255
 896:	80 93 7c 00 	sts	0x007C, r24
				}

				if (time_hour == watering_time_hour)
 89a:	90 91 78 00 	lds	r25, 0x0078
 89e:	80 91 67 00 	lds	r24, 0x0067
 8a2:	98 17       	cp	r25, r24
 8a4:	e1 f4       	brne	.+56     	; 0x8de <__stack+0x7f>
				{
					if (watering_time_days == watering_days_passed)
 8a6:	90 91 66 00 	lds	r25, 0x0066
 8aa:	80 91 7c 00 	lds	r24, 0x007C
 8ae:	98 17       	cp	r25, r24
 8b0:	b1 f4       	brne	.+44     	; 0x8de <__stack+0x7f>
					{
						//Start watering
						PUMP_ON;
 8b2:	c1 9a       	sbi	0x18, 1	; 24
						watering_counter = (uint16_t)watering_duration_second_tenths * 25 + (uint16_t)watering_duration_seconds * 250 + 1;
 8b4:	80 91 7d 00 	lds	r24, 0x007D
 8b8:	20 91 68 00 	lds	r18, 0x0068
 8bc:	49 e1       	ldi	r20, 0x19	; 25
 8be:	84 9f       	mul	r24, r20
 8c0:	c0 01       	movw	r24, r0
 8c2:	11 24       	eor	r1, r1
 8c4:	4a ef       	ldi	r20, 0xFA	; 250
 8c6:	24 9f       	mul	r18, r20
 8c8:	90 01       	movw	r18, r0
 8ca:	11 24       	eor	r1, r1
 8cc:	82 0f       	add	r24, r18
 8ce:	93 1f       	adc	r25, r19
 8d0:	01 96       	adiw	r24, 0x01	; 1
 8d2:	90 93 7f 00 	sts	0x007F, r25
 8d6:	80 93 7e 00 	sts	0x007E, r24
						watering_days_passed = 0;
 8da:	10 92 7c 00 	sts	0x007C, r1
			}
		}
	}

	//Watering
	if (watering_counter)
 8de:	80 91 7e 00 	lds	r24, 0x007E
 8e2:	90 91 7f 00 	lds	r25, 0x007F
 8e6:	89 2b       	or	r24, r25
 8e8:	81 f0       	breq	.+32     	; 0x90a <__stack+0xab>
	{
		watering_counter--;
 8ea:	80 91 7e 00 	lds	r24, 0x007E
 8ee:	90 91 7f 00 	lds	r25, 0x007F
 8f2:	01 97       	sbiw	r24, 0x01	; 1
 8f4:	90 93 7f 00 	sts	0x007F, r25
 8f8:	80 93 7e 00 	sts	0x007E, r24
		if (watering_counter == 0) PUMP_OFF;
 8fc:	80 91 7e 00 	lds	r24, 0x007E
 900:	90 91 7f 00 	lds	r25, 0x007F
 904:	89 2b       	or	r24, r25
 906:	09 f4       	brne	.+2      	; 0x90a <__stack+0xab>
 908:	c1 98       	cbi	0x18, 1	; 24
	}

	//Light
	if (
 90a:	80 91 75 00 	lds	r24, 0x0075
 90e:	88 23       	and	r24, r24
 910:	69 f1       	breq	.+90     	; 0x96c <__stack+0x10d>
 912:	90 91 78 00 	lds	r25, 0x0078
 916:	80 91 69 00 	lds	r24, 0x0069
 91a:	89 17       	cp	r24, r25
 91c:	60 f0       	brcs	.+24     	; 0x936 <__stack+0xd7>
 91e:	90 91 78 00 	lds	r25, 0x0078
 922:	80 91 69 00 	lds	r24, 0x0069
 926:	98 17       	cp	r25, r24
 928:	09 f5       	brne	.+66     	; 0x96c <__stack+0x10d>
 92a:	90 91 79 00 	lds	r25, 0x0079
 92e:	80 91 80 00 	lds	r24, 0x0080
 932:	98 17       	cp	r25, r24
 934:	d8 f0       	brcs	.+54     	; 0x96c <__stack+0x10d>
 936:	90 91 78 00 	lds	r25, 0x0078
 93a:	80 91 6a 00 	lds	r24, 0x006A
 93e:	98 17       	cp	r25, r24
 940:	60 f0       	brcs	.+24     	; 0x95a <__stack+0xfb>
 942:	90 91 78 00 	lds	r25, 0x0078
 946:	80 91 6a 00 	lds	r24, 0x006A
 94a:	98 17       	cp	r25, r24
 94c:	79 f4       	brne	.+30     	; 0x96c <__stack+0x10d>
 94e:	90 91 79 00 	lds	r25, 0x0079
 952:	80 91 81 00 	lds	r24, 0x0081
 956:	89 17       	cp	r24, r25
 958:	48 f0       	brcs	.+18     	; 0x96c <__stack+0x10d>
 95a:	80 91 6c 00 	lds	r24, 0x006C
 95e:	90 91 6d 00 	lds	r25, 0x006D
 962:	8c 5c       	subi	r24, 0xCC	; 204
 964:	90 41       	sbci	r25, 0x10	; 16
 966:	10 f0       	brcs	.+4      	; 0x96c <__stack+0x10d>
		(time_hour == lamp_time_off_hour && time_minute <= lamp_time_off_minute))		
		&&
		(Vcc_value >= 4300)
		)
	{
		LIGHT_ON;
 968:	c0 9a       	sbi	0x18, 0	; 24
 96a:	01 c0       	rjmp	.+2      	; 0x96e <__stack+0x10f>
	}
	else
	{
		LIGHT_OFF;
 96c:	c0 98       	cbi	0x18, 0	; 24
	}
}
 96e:	bf 91       	pop	r27
 970:	af 91       	pop	r26
 972:	9f 91       	pop	r25
 974:	8f 91       	pop	r24
 976:	7f 91       	pop	r23
 978:	6f 91       	pop	r22
 97a:	5f 91       	pop	r21
 97c:	4f 91       	pop	r20
 97e:	3f 91       	pop	r19
 980:	2f 91       	pop	r18
 982:	0f 90       	pop	r0
 984:	0f be       	out	0x3f, r0	; 63
 986:	0f 90       	pop	r0
 988:	1f 90       	pop	r1
 98a:	18 95       	reti

0000098c <__udivmodqi4>:
 98c:	99 1b       	sub	r25, r25
 98e:	79 e0       	ldi	r23, 0x09	; 9
 990:	04 c0       	rjmp	.+8      	; 0x99a <__udivmodqi4_ep>

00000992 <__udivmodqi4_loop>:
 992:	99 1f       	adc	r25, r25
 994:	96 17       	cp	r25, r22
 996:	08 f0       	brcs	.+2      	; 0x99a <__udivmodqi4_ep>
 998:	96 1b       	sub	r25, r22

0000099a <__udivmodqi4_ep>:
 99a:	88 1f       	adc	r24, r24
 99c:	7a 95       	dec	r23
 99e:	c9 f7       	brne	.-14     	; 0x992 <__udivmodqi4_loop>
 9a0:	80 95       	com	r24
 9a2:	08 95       	ret

000009a4 <__udivmodhi4>:
 9a4:	aa 1b       	sub	r26, r26
 9a6:	bb 1b       	sub	r27, r27
 9a8:	51 e1       	ldi	r21, 0x11	; 17
 9aa:	07 c0       	rjmp	.+14     	; 0x9ba <__udivmodhi4_ep>

000009ac <__udivmodhi4_loop>:
 9ac:	aa 1f       	adc	r26, r26
 9ae:	bb 1f       	adc	r27, r27
 9b0:	a6 17       	cp	r26, r22
 9b2:	b7 07       	cpc	r27, r23
 9b4:	10 f0       	brcs	.+4      	; 0x9ba <__udivmodhi4_ep>
 9b6:	a6 1b       	sub	r26, r22
 9b8:	b7 0b       	sbc	r27, r23

000009ba <__udivmodhi4_ep>:
 9ba:	88 1f       	adc	r24, r24
 9bc:	99 1f       	adc	r25, r25
 9be:	5a 95       	dec	r21
 9c0:	a9 f7       	brne	.-22     	; 0x9ac <__udivmodhi4_loop>
 9c2:	80 95       	com	r24
 9c4:	90 95       	com	r25
 9c6:	bc 01       	movw	r22, r24
 9c8:	cd 01       	movw	r24, r26
 9ca:	08 95       	ret

000009cc <__divmodsi4>:
 9cc:	97 fb       	bst	r25, 7
 9ce:	09 2e       	mov	r0, r25
 9d0:	05 26       	eor	r0, r21
 9d2:	0e d0       	rcall	.+28     	; 0x9f0 <__divmodsi4_neg1>
 9d4:	57 fd       	sbrc	r21, 7
 9d6:	04 d0       	rcall	.+8      	; 0x9e0 <__divmodsi4_neg2>
 9d8:	14 d0       	rcall	.+40     	; 0xa02 <__udivmodsi4>
 9da:	0a d0       	rcall	.+20     	; 0x9f0 <__divmodsi4_neg1>
 9dc:	00 1c       	adc	r0, r0
 9de:	38 f4       	brcc	.+14     	; 0x9ee <__divmodsi4_exit>

000009e0 <__divmodsi4_neg2>:
 9e0:	50 95       	com	r21
 9e2:	40 95       	com	r20
 9e4:	30 95       	com	r19
 9e6:	21 95       	neg	r18
 9e8:	3f 4f       	sbci	r19, 0xFF	; 255
 9ea:	4f 4f       	sbci	r20, 0xFF	; 255
 9ec:	5f 4f       	sbci	r21, 0xFF	; 255

000009ee <__divmodsi4_exit>:
 9ee:	08 95       	ret

000009f0 <__divmodsi4_neg1>:
 9f0:	f6 f7       	brtc	.-4      	; 0x9ee <__divmodsi4_exit>
 9f2:	90 95       	com	r25
 9f4:	80 95       	com	r24
 9f6:	70 95       	com	r23
 9f8:	61 95       	neg	r22
 9fa:	7f 4f       	sbci	r23, 0xFF	; 255
 9fc:	8f 4f       	sbci	r24, 0xFF	; 255
 9fe:	9f 4f       	sbci	r25, 0xFF	; 255
 a00:	08 95       	ret

00000a02 <__udivmodsi4>:
 a02:	a1 e2       	ldi	r26, 0x21	; 33
 a04:	1a 2e       	mov	r1, r26
 a06:	aa 1b       	sub	r26, r26
 a08:	bb 1b       	sub	r27, r27
 a0a:	fd 01       	movw	r30, r26
 a0c:	0d c0       	rjmp	.+26     	; 0xa28 <__udivmodsi4_ep>

00000a0e <__udivmodsi4_loop>:
 a0e:	aa 1f       	adc	r26, r26
 a10:	bb 1f       	adc	r27, r27
 a12:	ee 1f       	adc	r30, r30
 a14:	ff 1f       	adc	r31, r31
 a16:	a2 17       	cp	r26, r18
 a18:	b3 07       	cpc	r27, r19
 a1a:	e4 07       	cpc	r30, r20
 a1c:	f5 07       	cpc	r31, r21
 a1e:	20 f0       	brcs	.+8      	; 0xa28 <__udivmodsi4_ep>
 a20:	a2 1b       	sub	r26, r18
 a22:	b3 0b       	sbc	r27, r19
 a24:	e4 0b       	sbc	r30, r20
 a26:	f5 0b       	sbc	r31, r21

00000a28 <__udivmodsi4_ep>:
 a28:	66 1f       	adc	r22, r22
 a2a:	77 1f       	adc	r23, r23
 a2c:	88 1f       	adc	r24, r24
 a2e:	99 1f       	adc	r25, r25
 a30:	1a 94       	dec	r1
 a32:	69 f7       	brne	.-38     	; 0xa0e <__udivmodsi4_loop>
 a34:	60 95       	com	r22
 a36:	70 95       	com	r23
 a38:	80 95       	com	r24
 a3a:	90 95       	com	r25
 a3c:	9b 01       	movw	r18, r22
 a3e:	ac 01       	movw	r20, r24
 a40:	bd 01       	movw	r22, r26
 a42:	cf 01       	movw	r24, r30
 a44:	08 95       	ret

00000a46 <_exit>:
 a46:	f8 94       	cli

00000a48 <__stop_program>:
 a48:	ff cf       	rjmp	.-2      	; 0xa48 <__stop_program>
